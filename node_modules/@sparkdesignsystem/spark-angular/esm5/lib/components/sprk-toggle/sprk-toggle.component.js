import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
import { toggleAnimations } from './sprk-toggle-animations';
import { uniqueId } from 'lodash';
import 'focus-visible';
var SprkToggleComponent = /** @class */ (function () {
    function SprkToggleComponent() {
        /**
         * The value supplied will be assigned as a CSS class
         * on the clickable title text used in the Toggle.
         * This is intended for overrides.
         */
        this.titleFontClass = 'sprk-b-TypeBodyThree';
        /**
         * A string that is used to set the `id` on the content
         * and the `aria-controls` for the toggle trigger button.
         */
        this.contentId = uniqueId("sprk_toggle_content_");
        /**
         * @ignore
         */
        this.isOpen = false;
        /**
         * @ignore
         */
        this.iconStateClass = '';
        /**
         * @ignore
         */
        this.animState = 'closed';
    }
    /**
     * @ignore
     */
    SprkToggleComponent.prototype.toggleState = function () {
        this.isOpen === false
            ? (this.animState = 'closed')
            : (this.animState = 'open');
        this.isOpen === false
            ? (this.iconStateClass = '')
            : (this.iconStateClass = 'sprk-c-Icon--open');
    };
    /**
     * @ignore
     */
    SprkToggleComponent.prototype.toggle = function (event) {
        event.preventDefault();
        this.isOpen = !this.isOpen;
        this.toggleState();
    };
    /**
     * @ignore
     */
    SprkToggleComponent.prototype.getClasses = function () {
        var classArray = [
            'sprk-c-Toggle__trigger sprk-u-TextCrop--none',
            this.titleFontClass,
        ];
        return classArray.join(' ');
    };
    SprkToggleComponent.prototype.ngAfterViewInit = function () {
        this.toggleState();
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkToggleComponent.prototype, "analyticsString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkToggleComponent.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkToggleComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkToggleComponent.prototype, "iconClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkToggleComponent.prototype, "titleFontClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkToggleComponent.prototype, "idString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkToggleComponent.prototype, "contentId", void 0);
    SprkToggleComponent = __decorate([
        Component({
            selector: 'sprk-toggle',
            template: "\n    <div\n      class=\"sprk-c-Toggle {{ additionalClasses }}\"\n      [attr.data-id]=\"idString\"\n    >\n      <button\n        variant=\"icon\"\n        [ngClass]=\"getClasses()\"\n        (click)=\"toggle($event)\"\n        [attr.aria-expanded]=\"isOpen ? 'true' : 'false'\"\n        [attr.data-analytics]=\"analyticsString\"\n        [attr.aria-controls]=\"contentId\"\n      >\n        <sprk-icon\n          iconType=\"chevron-down-circle-two-color\"\n          additionalClasses=\"{{\n            iconClass\n          }} sprk-c-Icon--l sprk-u-mrs sprk-c-Icon--toggle {{ iconStateClass }}\"\n        ></sprk-icon>\n        {{ title }}\n      </button>\n\n      <div\n        [@toggleContent]=\"animState\"\n        [id]=\"contentId\"\n      >\n        <div class=\"sprk-u-pts sprk-u-pbs sprk-c-Toggle__content\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  ",
            animations: [toggleAnimations.toggleContent]
        })
    ], SprkToggleComponent);
    return SprkToggleComponent;
}());
export { SprkToggleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay10b2dnbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9zcHJrLXRvZ2dsZS9zcHJrLXRvZ2dsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2xDLE9BQU8sZUFBZSxDQUFDO0FBc0N2QjtJQUFBO1FBOEJFOzs7O1dBSUc7UUFFSCxtQkFBYyxHQUFHLHNCQUFzQixDQUFDO1FBV3hDOzs7V0FHRztRQUVILGNBQVMsR0FBRyxRQUFRLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUU3Qzs7V0FFRztRQUNJLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDdEI7O1dBRUc7UUFDSSxtQkFBYyxHQUFHLEVBQUUsQ0FBQztRQUMzQjs7V0FFRztRQUNJLGNBQVMsR0FBRyxRQUFRLENBQUM7SUFzQzlCLENBQUM7SUFwQ0M7O09BRUc7SUFDSCx5Q0FBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLE1BQU0sS0FBSyxLQUFLO1lBQ25CLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLE1BQU0sS0FBSyxLQUFLO1lBQ25CLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1lBQzVCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsbUJBQW1CLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxvQ0FBTSxHQUFOLFVBQU8sS0FBSztRQUNWLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMzQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsd0NBQVUsR0FBVjtRQUNFLElBQU0sVUFBVSxHQUFhO1lBQzNCLDhDQUE4QztZQUM5QyxJQUFJLENBQUMsY0FBYztTQUNwQixDQUFDO1FBQ0YsT0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRCw2Q0FBZSxHQUFmO1FBQ0UsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUE3RkQ7UUFEQyxLQUFLLEVBQUU7O2dFQUNnQjtJQU94QjtRQURDLEtBQUssRUFBRTs7a0VBQ2tCO0lBTTFCO1FBREMsS0FBSyxFQUFFOztzREFDTTtJQU9kO1FBREMsS0FBSyxFQUFFOzswREFDVTtJQU9sQjtRQURDLEtBQUssRUFBRTs7K0RBQ2dDO0lBVXhDO1FBREMsS0FBSyxFQUFFOzt5REFDUztJQU1qQjtRQURDLEtBQUssRUFBRTs7MERBQ3FDO0lBcERsQyxtQkFBbUI7UUFwQy9CLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLFFBQVEsRUFBRSx5NEJBK0JUO1lBQ0QsVUFBVSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxDQUFDO1NBQzdDLENBQUM7T0FDVyxtQkFBbUIsQ0F1Ry9CO0lBQUQsMEJBQUM7Q0FBQSxBQXZHRCxJQXVHQztTQXZHWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyB0b2dnbGVBbmltYXRpb25zIH0gZnJvbSAnLi9zcHJrLXRvZ2dsZS1hbmltYXRpb25zJztcbmltcG9ydCB7IHVuaXF1ZUlkIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCAnZm9jdXMtdmlzaWJsZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NwcmstdG9nZ2xlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cInNwcmstYy1Ub2dnbGUge3sgYWRkaXRpb25hbENsYXNzZXMgfX1cIlxuICAgICAgW2F0dHIuZGF0YS1pZF09XCJpZFN0cmluZ1wiXG4gICAgPlxuICAgICAgPGJ1dHRvblxuICAgICAgICB2YXJpYW50PVwiaWNvblwiXG4gICAgICAgIFtuZ0NsYXNzXT1cImdldENsYXNzZXMoKVwiXG4gICAgICAgIChjbGljayk9XCJ0b2dnbGUoJGV2ZW50KVwiXG4gICAgICAgIFthdHRyLmFyaWEtZXhwYW5kZWRdPVwiaXNPcGVuID8gJ3RydWUnIDogJ2ZhbHNlJ1wiXG4gICAgICAgIFthdHRyLmRhdGEtYW5hbHl0aWNzXT1cImFuYWx5dGljc1N0cmluZ1wiXG4gICAgICAgIFthdHRyLmFyaWEtY29udHJvbHNdPVwiY29udGVudElkXCJcbiAgICAgID5cbiAgICAgICAgPHNwcmstaWNvblxuICAgICAgICAgIGljb25UeXBlPVwiY2hldnJvbi1kb3duLWNpcmNsZS10d28tY29sb3JcIlxuICAgICAgICAgIGFkZGl0aW9uYWxDbGFzc2VzPVwie3tcbiAgICAgICAgICAgIGljb25DbGFzc1xuICAgICAgICAgIH19IHNwcmstYy1JY29uLS1sIHNwcmstdS1tcnMgc3Byay1jLUljb24tLXRvZ2dsZSB7eyBpY29uU3RhdGVDbGFzcyB9fVwiXG4gICAgICAgID48L3NwcmstaWNvbj5cbiAgICAgICAge3sgdGl0bGUgfX1cbiAgICAgIDwvYnV0dG9uPlxuXG4gICAgICA8ZGl2XG4gICAgICAgIFtAdG9nZ2xlQ29udGVudF09XCJhbmltU3RhdGVcIlxuICAgICAgICBbaWRdPVwiY29udGVudElkXCJcbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNwcmstdS1wdHMgc3Byay11LXBicyBzcHJrLWMtVG9nZ2xlX19jb250ZW50XCI+XG4gICAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBhbmltYXRpb25zOiBbdG9nZ2xlQW5pbWF0aW9ucy50b2dnbGVDb250ZW50XVxufSlcbmV4cG9ydCBjbGFzcyBTcHJrVG9nZ2xlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG5cbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkIHRvIHRoZVxuICAgKiBgZGF0YS1hbmFseXRpY3NgIGF0dHJpYnV0ZSBvbiB0aGUgY29tcG9uZW50LlxuICAgKiBJbnRlbmRlZCBmb3IgYW4gb3V0c2lkZVxuICAgKiBsaWJyYXJ5IHRvIGNhcHR1cmUgZGF0YS5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGFuYWx5dGljc1N0cmluZzogc3RyaW5nO1xuICAvKipcbiAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICogY29tcG9uZW50LlxuICAgKi9cbiAgQElucHV0KClcbiAgYWRkaXRpb25hbENsYXNzZXM6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlXG4gICAqIHJlbmRlcmVkIGFzIHRoZSBtYWluIFRvZ2dsZSBsaW5rIHRleHQuXG4gICAqL1xuICBASW5wdXQoKVxuICB0aXRsZTogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWQgYXMgYVxuICAgKiBDU1MgY2xhc3Mgb24gdGhlIGljb24gdXNlZCBpbiB0aGUgVG9nZ2xlLlxuICAgKiBUaGlzIGlzIGludGVuZGVkIGZvciBvdmVycmlkZXMuXG4gICAqL1xuICBASW5wdXQoKVxuICBpY29uQ2xhc3M6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkIGFzIGEgQ1NTIGNsYXNzXG4gICAqIG9uIHRoZSBjbGlja2FibGUgdGl0bGUgdGV4dCB1c2VkIGluIHRoZSBUb2dnbGUuXG4gICAqIFRoaXMgaXMgaW50ZW5kZWQgZm9yIG92ZXJyaWRlcy5cbiAgICovXG4gIEBJbnB1dCgpXG4gIHRpdGxlRm9udENsYXNzID0gJ3NwcmstYi1UeXBlQm9keVRocmVlJztcbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkXG4gICAqIHRvIHRoZSBgZGF0YS1pZGAgYXR0cmlidXRlIG9uIHRoZVxuICAgKiBjb21wb25lbnQuIFRoaXMgaXMgaW50ZW5kZWQgdG8gYmVcbiAgICogdXNlZCBhcyBhIHNlbGVjdG9yIGZvciBhdXRvbWF0ZWRcbiAgICogdG9vbHMuIFRoaXMgdmFsdWUgc2hvdWxkIGJlIHVuaXF1ZVxuICAgKiBwZXIgcGFnZS5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGlkU3RyaW5nOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBIHN0cmluZyB0aGF0IGlzIHVzZWQgdG8gc2V0IHRoZSBgaWRgIG9uIHRoZSBjb250ZW50XG4gICAqIGFuZCB0aGUgYGFyaWEtY29udHJvbHNgIGZvciB0aGUgdG9nZ2xlIHRyaWdnZXIgYnV0dG9uLlxuICAgKi9cbiAgQElucHV0KClcbiAgY29udGVudElkID0gdW5pcXVlSWQoYHNwcmtfdG9nZ2xlX2NvbnRlbnRfYCk7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHB1YmxpYyBpc09wZW4gPSBmYWxzZTtcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHB1YmxpYyBpY29uU3RhdGVDbGFzcyA9ICcnO1xuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgcHVibGljIGFuaW1TdGF0ZSA9ICdjbG9zZWQnO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICB0b2dnbGVTdGF0ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmlzT3BlbiA9PT0gZmFsc2VcbiAgICAgID8gKHRoaXMuYW5pbVN0YXRlID0gJ2Nsb3NlZCcpXG4gICAgICA6ICh0aGlzLmFuaW1TdGF0ZSA9ICdvcGVuJyk7XG5cbiAgICB0aGlzLmlzT3BlbiA9PT0gZmFsc2VcbiAgICAgID8gKHRoaXMuaWNvblN0YXRlQ2xhc3MgPSAnJylcbiAgICAgIDogKHRoaXMuaWNvblN0YXRlQ2xhc3MgPSAnc3Byay1jLUljb24tLW9wZW4nKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICB0b2dnbGUoZXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuaXNPcGVuID0gIXRoaXMuaXNPcGVuO1xuICAgIHRoaXMudG9nZ2xlU3RhdGUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBnZXRDbGFzc2VzKCk6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NBcnJheTogc3RyaW5nW10gPSBbXG4gICAgICAnc3Byay1jLVRvZ2dsZV9fdHJpZ2dlciBzcHJrLXUtVGV4dENyb3AtLW5vbmUnLFxuICAgICAgdGhpcy50aXRsZUZvbnRDbGFzcyxcbiAgICBdO1xuICAgIHJldHVybiBjbGFzc0FycmF5LmpvaW4oJyAnKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLnRvZ2dsZVN0YXRlKCk7XG4gIH1cbn1cbiJdfQ==