import { __decorate, __metadata } from "tslib";
import { Component, ContentChild, Input } from '@angular/core';
import * as _ from 'lodash';
import { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';
import { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';
import { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';
var SprkTextareaContainerComponent = /** @class */ (function () {
    function SprkTextareaContainerComponent() {
        /**
         * @ignore
         */
        this.id = _.uniqueId();
        /**
         * @ignore
         */
        this.input_id = "input_" + this.id;
        /**
         * @ignore
         */
        this.error_id = "error_" + this.id;
    }
    /**
     * @ignore
     */
    SprkTextareaContainerComponent.prototype.getClasses = function () {
        var classArray = [
            'sprk-b-InputContainer',
            'sprk-b-InputContainer--textarea'
        ];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    SprkTextareaContainerComponent.prototype.ngOnInit = function () {
        if (this.label && this.input) {
            this.label.ref.nativeElement.setAttribute('for', this.input_id);
            this.input.ref.nativeElement.id = this.input_id;
        }
        if (this.input && this.error) {
            this.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            this.error.ref.nativeElement.id = this.error_id;
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkTextareaContainerComponent.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkTextareaContainerComponent.prototype, "iconContainerClasses", void 0);
    __decorate([
        ContentChild(SprkLabelDirective, { static: true }),
        __metadata("design:type", SprkLabelDirective)
    ], SprkTextareaContainerComponent.prototype, "label", void 0);
    __decorate([
        ContentChild(SprkInputDirective, { static: true }),
        __metadata("design:type", SprkInputDirective)
    ], SprkTextareaContainerComponent.prototype, "input", void 0);
    __decorate([
        ContentChild(SprkFieldErrorDirective, { static: true }),
        __metadata("design:type", SprkFieldErrorDirective)
    ], SprkTextareaContainerComponent.prototype, "error", void 0);
    SprkTextareaContainerComponent = __decorate([
        Component({
            selector: 'sprk-textarea-container',
            template: "\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  "
        })
    ], SprkTextareaContainerComponent);
    return SprkTextareaContainerComponent;
}());
export { SprkTextareaContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay10ZXh0YXJlYS1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9pbnB1dHMvc3Byay10ZXh0YXJlYS1jb250YWluZXIvc3Byay10ZXh0YXJlYS1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxLQUFLLENBQUMsTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0VBQXdFLENBQUM7QUFDakgsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFDaEcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFjaEc7SUFBQTtRQWtDRTs7V0FFRztRQUNILE9BQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbEI7O1dBRUc7UUFDSCxhQUFRLEdBQUcsV0FBUyxJQUFJLENBQUMsRUFBSSxDQUFDO1FBQzlCOztXQUVHO1FBQ0gsYUFBUSxHQUFHLFdBQVMsSUFBSSxDQUFDLEVBQUksQ0FBQztJQWlDaEMsQ0FBQztJQS9CQzs7T0FFRztJQUNILG1EQUFVLEdBQVY7UUFDRSxJQUFNLFVBQVUsR0FBYTtZQUMzQix1QkFBdUI7WUFDdkIsaUNBQWlDO1NBQ2xDLENBQUM7UUFFRixJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMxQixJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFBLFNBQVM7Z0JBQ2pELFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsaURBQVEsR0FBUjtRQUNFLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoRSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDakQ7UUFDRCxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUN2QyxrQkFBa0IsRUFDbEIsSUFBSSxDQUFDLFFBQVEsQ0FDZCxDQUFDO1lBQ0YsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ2pEO0lBQ0gsQ0FBQztJQXRFRDtRQURDLEtBQUssRUFBRTs7NkVBQ2tCO0lBTzFCO1FBREMsS0FBSyxFQUFFOztnRkFDcUI7SUFNN0I7UUFEQyxZQUFZLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7a0NBQzVDLGtCQUFrQjtpRUFBQztJQU0xQjtRQURDLFlBQVksQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztrQ0FDNUMsa0JBQWtCO2lFQUFDO0lBTTFCO1FBREMsWUFBWSxDQUFDLHVCQUF1QixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO2tDQUNqRCx1QkFBdUI7aUVBQUM7SUFoQ3BCLDhCQUE4QjtRQVoxQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUseUJBQXlCO1lBQ25DLFFBQVEsRUFBRSw0V0FRVDtTQUNGLENBQUM7T0FDVyw4QkFBOEIsQ0E4RTFDO0lBQUQscUNBQUM7Q0FBQSxBQTlFRCxJQThFQztTQTlFWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgU3Bya0ZpZWxkRXJyb3JEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2lucHV0cy9zcHJrLWZpZWxkLWVycm9yL3NwcmstZmllbGQtZXJyb3IuZGlyZWN0aXZlJztcbmltcG9ydCB7IFNwcmtJbnB1dERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaW5wdXRzL3NwcmstaW5wdXQvc3Byay1pbnB1dC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU3Bya0xhYmVsRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9pbnB1dHMvc3Byay1sYWJlbC9zcHJrLWxhYmVsLmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NwcmstdGV4dGFyZWEtY29udGFpbmVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IFtuZ0NsYXNzXT1cImdldENsYXNzZXMoKVwiPlxuICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3NwcmtMYWJlbF1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbc3Bya0lucHV0XVwiPjwvbmctY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cInNwcmstc2VsZWN0aW9uLWl0ZW0tY29udGFpbmVyXCI+PC9uZy1jb250ZW50PlxuICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3NwcmtIZWxwZXJUZXh0XVwiPjwvbmctY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrRmllbGRFcnJvcl1cIj48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgU3Bya1RleHRhcmVhQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAqIGNvbXBvbmVudC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgKiBpY29uIGNvbnRhaW5lci5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGljb25Db250YWluZXJDbGFzc2VzOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGlzIGNvbXBvbmVudCBleHBlY3RzIGEgY2hpbGQgbGFiZWwgZWxlbWVudFxuICAgKiB3aXRoIHRoZSBgc3Bya0xhYmVsYCBkaXJlY3RpdmUuXG4gICAqL1xuICBAQ29udGVudENoaWxkKFNwcmtMYWJlbERpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgbGFiZWw6IFNwcmtMYWJlbERpcmVjdGl2ZTtcbiAgLyoqXG4gICAqIFRoaXMgY29tcG9uZW50IGV4cGVjdHMgYSBjaGlsZCBpbnB1dCBlbGVtZW50XG4gICAqIHdpdGggdGhlIGBzcHJrSW5wdXRgIGRpcmVjdGl2ZS5cbiAgICovXG4gIEBDb250ZW50Q2hpbGQoU3Bya0lucHV0RGlyZWN0aXZlLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICBpbnB1dDogU3Bya0lucHV0RGlyZWN0aXZlO1xuICAvKipcbiAgICogVGhpcyBjb21wb25lbnQgZXhwZWN0cyBhIGNoaWxkIGVsZW1lbnRcbiAgICogd2l0aCB0aGUgYHNwcmtGaWVsZEVycm9yYCBkaXJlY3RpdmUuXG4gICAqL1xuICBAQ29udGVudENoaWxkKFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICBlcnJvcjogU3Bya0ZpZWxkRXJyb3JEaXJlY3RpdmU7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGlkID0gXy51bmlxdWVJZCgpO1xuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgaW5wdXRfaWQgPSBgaW5wdXRfJHt0aGlzLmlkfWA7XG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBlcnJvcl9pZCA9IGBlcnJvcl8ke3RoaXMuaWR9YDtcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzQXJyYXk6IHN0cmluZ1tdID0gW1xuICAgICAgJ3NwcmstYi1JbnB1dENvbnRhaW5lcicsXG4gICAgICAnc3Byay1iLUlucHV0Q29udGFpbmVyLS10ZXh0YXJlYSdcbiAgICBdO1xuXG4gICAgaWYgKHRoaXMuYWRkaXRpb25hbENsYXNzZXMpIHtcbiAgICAgIHRoaXMuYWRkaXRpb25hbENsYXNzZXMuc3BsaXQoJyAnKS5mb3JFYWNoKGNsYXNzTmFtZSA9PiB7XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaChjbGFzc05hbWUpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzQXJyYXkuam9pbignICcpO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubGFiZWwgJiYgdGhpcy5pbnB1dCkge1xuICAgICAgdGhpcy5sYWJlbC5yZWYubmF0aXZlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIHRoaXMuaW5wdXRfaWQpO1xuICAgICAgdGhpcy5pbnB1dC5yZWYubmF0aXZlRWxlbWVudC5pZCA9IHRoaXMuaW5wdXRfaWQ7XG4gICAgfVxuICAgIGlmICh0aGlzLmlucHV0ICYmIHRoaXMuZXJyb3IpIHtcbiAgICAgIHRoaXMuaW5wdXQucmVmLm5hdGl2ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFxuICAgICAgICAnYXJpYS1kZXNjcmliZWRieScsXG4gICAgICAgIHRoaXMuZXJyb3JfaWRcbiAgICAgICk7XG4gICAgICB0aGlzLmVycm9yLnJlZi5uYXRpdmVFbGVtZW50LmlkID0gdGhpcy5lcnJvcl9pZDtcbiAgICB9XG4gIH1cbn1cbiJdfQ==