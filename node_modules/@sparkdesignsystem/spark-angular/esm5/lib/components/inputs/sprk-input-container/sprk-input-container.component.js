import { __decorate, __metadata } from "tslib";
import { Component, ContentChild, Input } from '@angular/core';
import * as _ from 'lodash';
import { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';
import { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';
import { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';
var SparkInputContainerComponent = /** @class */ (function () {
    function SparkInputContainerComponent() {
        /**
         * @ignore
         */
        this.id = _.uniqueId();
        /**
         * @ignore
         */
        this.input_id = "input_" + this.id;
        /**
         * @ignore
         */
        this.error_id = "error_" + this.id;
    }
    /**
     * @ignore
     */
    SparkInputContainerComponent.prototype.getClasses = function () {
        var classArray = ['sprk-b-InputContainer'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    SparkInputContainerComponent.prototype.ngOnInit = function () {
        if (this.label && this.input) {
            this.label.ref.nativeElement.setAttribute('for', this.input_id);
            this.input.ref.nativeElement.id = this.input_id;
        }
        if (this.input && this.error) {
            this.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            this.error.ref.nativeElement.id = this.error_id;
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SparkInputContainerComponent.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SparkInputContainerComponent.prototype, "iconContainerClasses", void 0);
    __decorate([
        ContentChild(SprkLabelDirective, { static: true }),
        __metadata("design:type", SprkLabelDirective)
    ], SparkInputContainerComponent.prototype, "label", void 0);
    __decorate([
        ContentChild(SprkInputDirective, { static: true }),
        __metadata("design:type", SprkInputDirective)
    ], SparkInputContainerComponent.prototype, "input", void 0);
    __decorate([
        ContentChild(SprkFieldErrorDirective, { static: true }),
        __metadata("design:type", SprkFieldErrorDirective)
    ], SparkInputContainerComponent.prototype, "error", void 0);
    SparkInputContainerComponent = __decorate([
        Component({
            selector: 'sprk-input-container',
            template: "\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"[sprk-select-icon]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  "
        })
    ], SparkInputContainerComponent);
    return SparkInputContainerComponent;
}());
export { SparkInputContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1pbnB1dC1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9pbnB1dHMvc3Byay1pbnB1dC1jb250YWluZXIvc3Byay1pbnB1dC1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxLQUFLLENBQUMsTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0VBQXdFLENBQUM7QUFDakgsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFDaEcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFlaEc7SUFBQTtRQW1DRTs7V0FFRztRQUNILE9BQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbEI7O1dBRUc7UUFDSCxhQUFRLEdBQUcsV0FBUyxJQUFJLENBQUMsRUFBSSxDQUFDO1FBQzlCOztXQUVHO1FBQ0gsYUFBUSxHQUFHLFdBQVMsSUFBSSxDQUFDLEVBQUksQ0FBQztJQTZCaEMsQ0FBQztJQTNCQzs7T0FFRztJQUNILGlEQUFVLEdBQVY7UUFDRSxJQUFNLFVBQVUsR0FBYSxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFFdkQsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxTQUFTO2dCQUNqRCxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELCtDQUFRLEdBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDaEUsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ2pEO1FBQ0QsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FDdkMsa0JBQWtCLEVBQ2xCLElBQUksQ0FBQyxRQUFRLENBQ2QsQ0FBQztZQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUNqRDtJQUNILENBQUM7SUFuRUQ7UUFEQyxLQUFLLEVBQUU7OzJFQUNrQjtJQU8xQjtRQURDLEtBQUssRUFBRTs7OEVBQ3FCO0lBTzdCO1FBREMsWUFBWSxDQUFDLGtCQUFrQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO2tDQUM1QyxrQkFBa0I7K0RBQUM7SUFNMUI7UUFEQyxZQUFZLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7a0NBQzVDLGtCQUFrQjsrREFBQztJQU0xQjtRQURDLFlBQVksQ0FBQyx1QkFBdUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztrQ0FDakQsdUJBQXVCOytEQUFDO0lBakNwQiw0QkFBNEI7UUFieEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHNCQUFzQjtZQUNoQyxRQUFRLEVBQUUsMmFBU1Q7U0FDRixDQUFDO09BQ1csNEJBQTRCLENBMkV4QztJQUFELG1DQUFDO0NBQUEsQUEzRUQsSUEyRUM7U0EzRVksNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDb250ZW50Q2hpbGQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9pbnB1dHMvc3Byay1maWVsZC1lcnJvci9zcHJrLWZpZWxkLWVycm9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTcHJrSW5wdXREaXJlY3RpdmUgfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2lucHV0cy9zcHJrLWlucHV0L3NwcmstaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFNwcmtMYWJlbERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaW5wdXRzL3NwcmstbGFiZWwvc3Byay1sYWJlbC5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzcHJrLWlucHV0LWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBbbmdDbGFzc109XCJnZXRDbGFzc2VzKClcIj5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrTGFiZWxdXCI+PC9uZy1jb250ZW50PlxuICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3NwcmtJbnB1dF1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbc3Byay1zZWxlY3QtaWNvbl1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJzcHJrLXNlbGVjdGlvbi1pdGVtLWNvbnRhaW5lclwiPjwvbmctY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrSGVscGVyVGV4dF1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbc3Bya0ZpZWxkRXJyb3JdXCI+PC9uZy1jb250ZW50PlxuICAgIDwvZGl2PlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFNwYXJrSW5wdXRDb250YWluZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICogY29tcG9uZW50LlxuICAgKi9cbiAgQElucHV0KClcbiAgYWRkaXRpb25hbENsYXNzZXM6IHN0cmluZztcbiAgLyoqXG4gICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAqIGljb24gY29udGFpbmVyLlxuICAgKi9cbiAgQElucHV0KClcbiAgaWNvbkNvbnRhaW5lckNsYXNzZXM6IHN0cmluZztcblxuICAvKipcbiAgICogVGhpcyBjb21wb25lbnQgZXhwZWN0cyBhIGNoaWxkIGxhYmVsIGVsZW1lbnRcbiAgICogd2l0aCB0aGUgYHNwcmtMYWJlbGAgZGlyZWN0aXZlLlxuICAgKi9cbiAgQENvbnRlbnRDaGlsZChTcHJrTGFiZWxEaXJlY3RpdmUsIHsgc3RhdGljOiB0cnVlIH0pXG4gIGxhYmVsOiBTcHJrTGFiZWxEaXJlY3RpdmU7XG4gIC8qKlxuICAgKiBUaGlzIGNvbXBvbmVudCBleHBlY3RzIGEgY2hpbGQgaW5wdXQgZWxlbWVudFxuICAgKiB3aXRoIHRoZSBgc3Bya0lucHV0YCBkaXJlY3RpdmUuXG4gICAqL1xuICBAQ29udGVudENoaWxkKFNwcmtJbnB1dERpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgaW5wdXQ6IFNwcmtJbnB1dERpcmVjdGl2ZTtcbiAgLyoqXG4gICAqIFRoaXMgY29tcG9uZW50IGV4cGVjdHMgYSBjaGlsZCBlbGVtZW50XG4gICAqIHdpdGggdGhlIGBzcHJrRmllbGRFcnJvcmAgZGlyZWN0aXZlLlxuICAgKi9cbiAgQENvbnRlbnRDaGlsZChTcHJrRmllbGRFcnJvckRpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgZXJyb3I6IFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBpZCA9IF8udW5pcXVlSWQoKTtcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGlucHV0X2lkID0gYGlucHV0XyR7dGhpcy5pZH1gO1xuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZXJyb3JfaWQgPSBgZXJyb3JfJHt0aGlzLmlkfWA7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGdldENsYXNzZXMoKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc0FycmF5OiBzdHJpbmdbXSA9IFsnc3Byay1iLUlucHV0Q29udGFpbmVyJ107XG5cbiAgICBpZiAodGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcykge1xuICAgICAgdGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKGNsYXNzTmFtZSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGNsYXNzQXJyYXkuam9pbignICcpO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubGFiZWwgJiYgdGhpcy5pbnB1dCkge1xuICAgICAgdGhpcy5sYWJlbC5yZWYubmF0aXZlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIHRoaXMuaW5wdXRfaWQpO1xuICAgICAgdGhpcy5pbnB1dC5yZWYubmF0aXZlRWxlbWVudC5pZCA9IHRoaXMuaW5wdXRfaWQ7XG4gICAgfVxuICAgIGlmICh0aGlzLmlucHV0ICYmIHRoaXMuZXJyb3IpIHtcbiAgICAgIHRoaXMuaW5wdXQucmVmLm5hdGl2ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFxuICAgICAgICAnYXJpYS1kZXNjcmliZWRieScsXG4gICAgICAgIHRoaXMuZXJyb3JfaWRcbiAgICAgICk7XG4gICAgICB0aGlzLmVycm9yLnJlZi5uYXRpdmVFbGVtZW50LmlkID0gdGhpcy5lcnJvcl9pZDtcbiAgICB9XG4gIH1cbn1cbiJdfQ==