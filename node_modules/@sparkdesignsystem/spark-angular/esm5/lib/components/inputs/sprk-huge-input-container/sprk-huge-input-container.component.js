import { __decorate, __metadata } from "tslib";
import { Component, ContentChild, Input } from '@angular/core';
import { uniqueId } from 'lodash';
import { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';
import { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';
import { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';
var SprkHugeInputContainerComponent = /** @class */ (function () {
    function SprkHugeInputContainerComponent() {
        /**
         * @ignore
         */
        this.id = uniqueId();
        /**
         * @ignore
         */
        this.input_id = "input_" + this.id;
        /**
         * @ignore
         */
        this.error_id = "error_" + this.id;
    }
    /**
     * @ignore
     */
    SprkHugeInputContainerComponent.prototype.getClasses = function () {
        var classArray = [
            'sprk-b-InputContainer',
            'sprk-b-InputContainer--huge'
        ];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    SprkHugeInputContainerComponent.prototype.ngOnInit = function () {
        if (this.label && this.input) {
            this.label.ref.nativeElement.setAttribute('for', this.input_id);
            this.input.ref.nativeElement.id = this.input_id;
        }
        if (this.input && this.error) {
            this.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            this.error.ref.nativeElement.id = this.error_id;
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkHugeInputContainerComponent.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkHugeInputContainerComponent.prototype, "iconContainerClasses", void 0);
    __decorate([
        ContentChild(SprkLabelDirective, { static: true }),
        __metadata("design:type", SprkLabelDirective)
    ], SprkHugeInputContainerComponent.prototype, "label", void 0);
    __decorate([
        ContentChild(SprkInputDirective, { static: true }),
        __metadata("design:type", SprkInputDirective)
    ], SprkHugeInputContainerComponent.prototype, "input", void 0);
    __decorate([
        ContentChild(SprkFieldErrorDirective, { static: true }),
        __metadata("design:type", SprkFieldErrorDirective)
    ], SprkHugeInputContainerComponent.prototype, "error", void 0);
    SprkHugeInputContainerComponent = __decorate([
        Component({
            selector: 'sprk-huge-input-container',
            template: "\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprk-select-icon]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  "
        })
    ], SprkHugeInputContainerComponent);
    return SprkHugeInputContainerComponent;
}());
export { SprkHugeInputContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1odWdlLWlucHV0LWNvbnRhaW5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcmtkZXNpZ25zeXN0ZW0vc3BhcmstYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2lucHV0cy9zcHJrLWh1Z2UtaW5wdXQtY29udGFpbmVyL3NwcmstaHVnZS1pbnB1dC1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNsQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3RUFBd0UsQ0FBQztBQUNqSCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUNoRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQWVoRztJQUFBO1FBa0NFOztXQUVHO1FBQ0gsT0FBRSxHQUFHLFFBQVEsRUFBRSxDQUFDO1FBQ2hCOztXQUVHO1FBQ0gsYUFBUSxHQUFHLFdBQVMsSUFBSSxDQUFDLEVBQUksQ0FBQztRQUM5Qjs7V0FFRztRQUNILGFBQVEsR0FBRyxXQUFTLElBQUksQ0FBQyxFQUFJLENBQUM7SUFnQ2hDLENBQUM7SUE5QkM7O09BRUc7SUFDSCxvREFBVSxHQUFWO1FBQ0UsSUFBTSxVQUFVLEdBQWE7WUFDM0IsdUJBQXVCO1lBQ3ZCLDZCQUE2QjtTQUM5QixDQUFDO1FBRUYsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxTQUFTO2dCQUNqRCxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELGtEQUFRLEdBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDaEUsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ2pEO1FBQ0QsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FDdkMsa0JBQWtCLEVBQ2xCLElBQUksQ0FBQyxRQUFRLENBQ2QsQ0FBQztZQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUNqRDtJQUNILENBQUM7SUFyRUQ7UUFEQyxLQUFLLEVBQUU7OzhFQUNrQjtJQU8xQjtRQURDLEtBQUssRUFBRTs7aUZBQ3FCO0lBTTdCO1FBREMsWUFBWSxDQUFDLGtCQUFrQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO2tDQUM1QyxrQkFBa0I7a0VBQUM7SUFNMUI7UUFEQyxZQUFZLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7a0NBQzVDLGtCQUFrQjtrRUFBQztJQU0xQjtRQURDLFlBQVksQ0FBQyx1QkFBdUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztrQ0FDakQsdUJBQXVCO2tFQUFDO0lBaENwQiwrQkFBK0I7UUFiM0MsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDJCQUEyQjtZQUNyQyxRQUFRLEVBQUUsMmFBU1Q7U0FDRixDQUFDO09BQ1csK0JBQStCLENBNkUzQztJQUFELHNDQUFDO0NBQUEsQUE3RUQsSUE2RUM7U0E3RVksK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDb250ZW50Q2hpbGQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHVuaXF1ZUlkIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9pbnB1dHMvc3Byay1maWVsZC1lcnJvci9zcHJrLWZpZWxkLWVycm9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTcHJrSW5wdXREaXJlY3RpdmUgfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2lucHV0cy9zcHJrLWlucHV0L3NwcmstaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFNwcmtMYWJlbERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaW5wdXRzL3NwcmstbGFiZWwvc3Byay1sYWJlbC5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzcHJrLWh1Z2UtaW5wdXQtY29udGFpbmVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IFtuZ0NsYXNzXT1cImdldENsYXNzZXMoKVwiPlxuICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3NwcmtJbnB1dF1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbc3Bya0xhYmVsXVwiPjwvbmctY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrLXNlbGVjdC1pY29uXVwiPjwvbmctY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cInNwcmstc2VsZWN0aW9uLWl0ZW0tY29udGFpbmVyXCI+PC9uZy1jb250ZW50PlxuICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3NwcmtIZWxwZXJUZXh0XVwiPjwvbmctY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrRmllbGRFcnJvcl1cIj48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgU3Bya0h1Z2VJbnB1dENvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gLyoqXG4gICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAqIGNvbXBvbmVudC5cbiAgKi9cbiAgQElucHV0KClcbiAgYWRkaXRpb25hbENsYXNzZXM6IHN0cmluZztcbiAvKipcbiAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICogaWNvbiBjb250YWluZXIuXG4gICovXG4gIEBJbnB1dCgpXG4gIGljb25Db250YWluZXJDbGFzc2VzOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGlzIGNvbXBvbmVudCBleHBlY3RzIGEgY2hpbGQgbGFiZWwgZWxlbWVudFxuICAgKiB3aXRoIHRoZSBgc3Bya0xhYmVsYCBkaXJlY3RpdmUuXG4gICAqL1xuICBAQ29udGVudENoaWxkKFNwcmtMYWJlbERpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgbGFiZWw6IFNwcmtMYWJlbERpcmVjdGl2ZTtcbiAvKipcbiAgKiBUaGlzIGNvbXBvbmVudCBleHBlY3RzIGEgY2hpbGQgaW5wdXQgZWxlbWVudFxuICAqIHdpdGggdGhlIGBzcHJrSW5wdXRgIGRpcmVjdGl2ZS5cbiAgKi9cbiAgQENvbnRlbnRDaGlsZChTcHJrSW5wdXREaXJlY3RpdmUsIHsgc3RhdGljOiB0cnVlIH0pXG4gIGlucHV0OiBTcHJrSW5wdXREaXJlY3RpdmU7XG4gIC8qKlxuICAgKiBUaGlzIGNvbXBvbmVudCBleHBlY3RzIGEgY2hpbGQgZWxlbWVudFxuICAgKiB3aXRoIHRoZSBgc3Bya0ZpZWxkRXJyb3JgIGRpcmVjdGl2ZS5cbiAgICovXG4gIEBDb250ZW50Q2hpbGQoU3Bya0ZpZWxkRXJyb3JEaXJlY3RpdmUsIHsgc3RhdGljOiB0cnVlIH0pXG4gIGVycm9yOiBTcHJrRmllbGRFcnJvckRpcmVjdGl2ZTtcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgaWQgPSB1bmlxdWVJZCgpO1xuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgaW5wdXRfaWQgPSBgaW5wdXRfJHt0aGlzLmlkfWA7XG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBlcnJvcl9pZCA9IGBlcnJvcl8ke3RoaXMuaWR9YDtcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzQXJyYXk6IHN0cmluZ1tdID0gW1xuICAgICAgJ3NwcmstYi1JbnB1dENvbnRhaW5lcicsXG4gICAgICAnc3Byay1iLUlucHV0Q29udGFpbmVyLS1odWdlJ1xuICAgIF07XG5cbiAgICBpZiAodGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcykge1xuICAgICAgdGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKGNsYXNzTmFtZSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGNsYXNzQXJyYXkuam9pbignICcpO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubGFiZWwgJiYgdGhpcy5pbnB1dCkge1xuICAgICAgdGhpcy5sYWJlbC5yZWYubmF0aXZlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIHRoaXMuaW5wdXRfaWQpO1xuICAgICAgdGhpcy5pbnB1dC5yZWYubmF0aXZlRWxlbWVudC5pZCA9IHRoaXMuaW5wdXRfaWQ7XG4gICAgfVxuICAgIGlmICh0aGlzLmlucHV0ICYmIHRoaXMuZXJyb3IpIHtcbiAgICAgIHRoaXMuaW5wdXQucmVmLm5hdGl2ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFxuICAgICAgICAnYXJpYS1kZXNjcmliZWRieScsXG4gICAgICAgIHRoaXMuZXJyb3JfaWRcbiAgICAgICk7XG4gICAgICB0aGlzLmVycm9yLnJlZi5uYXRpdmVFbGVtZW50LmlkID0gdGhpcy5lcnJvcl9pZDtcbiAgICB9XG4gIH1cbn1cbiJdfQ==