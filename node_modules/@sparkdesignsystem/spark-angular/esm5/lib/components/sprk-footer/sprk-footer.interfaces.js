//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"sprk-footer.interfaces.js","sourceRoot":"ng://@sparkdesignsystem/spark-angular/","sources":["lib/components/sprk-footer/sprk-footer.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Basic object that contains\n * a key of `text`. Used to\n * build up paragraphs of\n * disclaimer text.\n * TODO: Refactor Footer to use something else.\n */\nexport interface ISprkDisclaimerText {\n  text: string;\n}\n\n/**\n * Data is used to render a toggle\n * that is used for disclaimer information.\n * Toggle includes a clickable title and\n * a paragraph of text.\n */\nexport interface ISprkDisclaimerToggle {\n  /**\n   * The clickable title for the toggle.\n   */\n  title: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the link\n   * Intended for an outside\n   * library to capture data.\n   */\n  analyticsString?: string;\n  /**\n   * Deprecated.\n   * The API supports using this\n   * or `analyticsString` but\n   * using `analyticsString` is\n   * preferred.\n   */\n  analytics?: string;\n  /**\n   * The value supplied will be rendered as the\n   * toggle body content insidea a paragraph tage\n   * that appears after the title is clicked.\n   */\n  body: string;\n}\n\n/**\n * A `SprkFooterSocialLink` is a `SprkFooterLink`\n * wrapping a `SprkFooterIcon` and should\n * contain data for both.\n * There is no text rendered for Social Links\n * other than the visually hidden\n * `iconScreenReaderText`\n * that is used to descibe the icon to\n * screen readers.\n * This interface extends `SprkFooterLinkOptionalProps`\n * because the `text` property for link is not required.\n */\nexport interface ISprkFooterSocialLink {\n  /**\n   * Name of the icon.\n   */\n  icon: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon if `icon` has a value.\n   */\n  iconCSS?: string;\n  /**\n   * Value will be visually hidden and serves\n   * as text for screen readers that describes\n   * the icon.\n   */\n  iconScreenReaderText?: string;\n  /**\n   * The text rendered inside the link.\n   */\n  text?: string;\n  /**\n   * The `href` value for the link.\n   * If omitted, the href will\n   * be set to `#` by the `SprkLink`\n   * component.\n   */\n  href?: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the link\n   * Intended for an outside\n   * library to capture data.\n   */\n  analyticsString?: string;\n  /**\n   * Deprecated.\n   * The Footer API supports using this\n   * or `analyticsString` but\n   * using `analyticsString` is\n   * preferred.\n   */\n  analytics?: string;\n}\n\n/**\n * Data is used to render a column of links.\n * The column has a heading.\n */\nexport interface ISprkFooterLocalLinkColumn {\n  /**\n   * The text for the heading of the\n   * column. The heading is technically optional\n   * but should be included to give the user\n   * information about what the links are for.\n   */\n  heading?: string;\n  /**\n   * The data to build the list of\n   * local links for the column.\n   * While passing in this array of links\n   * is technicially optional and the column\n   * will still be rendered, it's not recommended\n   * to have just an empty column.\n   */\n  links?: Array<{\n    /**\n     * The text rendered inside the link.\n     */\n    text: string;\n    /**\n     * The `href` value for the link.\n     * If omitted, the href will\n     * be set to `#` by the `SprkLink`\n     * component.\n     */\n    href?: string;\n    /**\n     * The value supplied will be assigned to the\n     * `data-analytics` attribute on the link\n     * Intended for an outside\n     * library to capture data.\n     */\n    analyticsString?: string;\n    /**\n     * Deprecated.\n     * The Footer API supports using this\n     * or `analyticsString` but\n     * using `analyticsString` is\n     * preferred.\n     */\n    analytics?: string;\n  }>;\n}\n\n/**\n * Global links are a set\n * of a clickable image/icon and\n * a short paragraph of text.\n * Meant to link to places\n * outside of the site's footer\n * that they are in, hence \"Global\".\n * The `text` property is rendered inside\n * a paragraph tag underneath the image/icon.\n */\nexport interface ISprkFooterGlobalLink {\n  /**\n   * Value for the `src` attribute of the image.\n   */\n  imgSrc: string;\n  /**\n   * Value for the `alt` attribute of the image.\n   */\n  imgAlt: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * image if `imgSrc` has a value.\n   */\n  imgCSS?: string;\n  /**\n   * Name of the icon.\n   */\n  icon: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon if `icon` has a value.\n   */\n  iconCSS?: string;\n  /**\n   * Value will be visually hidden and serves\n   * as text for screen readers that describes\n   * the icon.\n   */\n  iconScreenReaderText?: string;\n  /**\n   * The text rendered inside the link.\n   */\n  text: string;\n  /**\n   * The `href` value for the link.\n   * If omitted, the href will\n   * be set to `#` by the `SprkLink`\n   * component.\n   */\n  href?: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the link\n   * Intended for an outside\n   * library to capture data.\n   */\n  analyticsString?: string;\n  /**\n   * Deprecated.\n   * The Footer API supports using this\n   * or `analyticsString` but\n   * using `analyticsString` is\n   * preferred.\n   */\n  analytics?: string;\n}\n\n/**\n * Badge links are rendered in\n * the bottom of the Footer.\n * They are a link that wraps an icon.\n * There is no text rendered for Badge links\n * other than the visually hidden\n * `iconScreenReaderText`\n * that is used to descibe the icon to\n * screen readers.\n */\nexport interface ISprkFooterBadgeLink {\n  /**\n   * Name of the icon.\n   */\n  icon: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon if `icon` has a value.\n   */\n  iconCSS?: string;\n  /**\n   * Value will be visually hidden and serves\n   * as text for screen readers that describes\n   * the icon.\n   */\n  iconScreenReaderText?: string;\n  /**\n   * The text rendered inside the link.\n   */\n  text?: string;\n  /**\n   * The `href` value for the link.\n   * If omitted, the href will\n   * be set to `#` by the `SprkLink`\n   * component.\n   */\n  href?: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the link\n   * Intended for an outside\n   * library to capture data.\n   */\n  analyticsString?: string;\n  /**\n   * Deprecated.\n   * The Footer API supports using this\n   * or `analyticsString` but\n   * using `analyticsString` is\n   * preferred.\n   */\n  analytics?: string;\n}\n\n/**\n * An image that is wrapped with a link.\n */\nexport interface ISprkFooterAward {\n  /**\n   * The text rendered inside the link.\n   */\n  text?: string;\n  /**\n   * The `href` value for the link.\n   * If omitted, the href will\n   * be set to `#` by the `SprkLink`\n   * component.\n   */\n  href?: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the link\n   * Intended for an outside\n   * library to capture data.\n   */\n  analyticsString?: string;\n  /**\n   * Deprecated.\n   * The Footer API supports using this\n   * or `analyticsString` but\n   * using `analyticsString` is\n   * preferred.\n   */\n  analytics?: string;\n  /**\n   * Value for the `src` attribute of the image.\n   */\n  imgSrc: string;\n  /**\n   * Value for the `alt` attribute of the image.\n   */\n  imgAlt: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * image if `imgSrc` has a value.\n   */\n  imgCSS?: string;\n}\n\n"]}