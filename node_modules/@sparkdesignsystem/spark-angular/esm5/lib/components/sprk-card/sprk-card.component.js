import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
var SprkCardComponent = /** @class */ (function () {
    function SprkCardComponent() {
        /**
         * The type of Card variant to render.
         * The available values are `base`, `teaser`, and `teaserHeading`.
         */
        this.cardType = 'base';
        /**
         * Determines which type of call to action is rendered.
         * The available values are `link` and `button`.
         */
        this.ctaType = 'link';
    }
    /**
     * @ignore
     */
    SprkCardComponent.prototype.getClassesCta = function () {
        var ctaClassArray = [];
        if (this.ctaType === 'button') {
            ctaClassArray.push('sprk-c-Button');
        }
        else {
            ctaClassArray.push('sprk-b-Link');
            if (this.ctaIcon) {
                ctaClassArray.push('sprk-b-Link--simple');
                ctaClassArray.push('sprk-b-Link--has-icon');
            }
        }
        if (this.additionalCtaClasses) {
            this.additionalCtaClasses.split(' ').forEach(function (className) {
                ctaClassArray.push(className);
            });
        }
        return ctaClassArray.join(' ');
    };
    /**
     * @ignore
     */
    SprkCardComponent.prototype.getClassesCard = function () {
        var classArray = ['sprk-c-Card', 'sprk-o-Stack'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "cardType", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "body", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "media", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "additionalClassesIcon", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "imgSrc", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "imgAlt", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "iconType", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "iconHref", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "imgHref", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "ctaIcon", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "ctaType", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "ctaText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "ctaAnalytics", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "imgLinkAnalytics", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "iconLinkAnalytics", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "ctaHref", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "additionalCtaClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkCardComponent.prototype, "idString", void 0);
    SprkCardComponent = __decorate([
        Component({
            selector: 'sprk-card',
            template: "\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'teaser'\"\n      [attr.data-id]=\"idString\"\n    >\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"media === 'img'\"\n        [href]=\"imgHref\"\n        class=\"sprk-o-Stack__item\"\n        [analyticsString]=\"imgLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Card__media\"\n          [attr.alt]=\"imgAlt\"\n          [attr.src]=\"imgSrc\"\n        />\n      </a>\n\n      <div\n        [ngClass]=\"{\n          'sprk-o-Stack__item': true,\n          'sprk-c-Card__content': true,\n          'sprk-o-Stack': true,\n          'sprk-o-Stack--medium': true,\n          'sprk-u-TextAlign--center': media === 'icon'\n        }\"\n      >\n        <a\n          sprkLink\n          variant=\"unstyled\"\n          *ngIf=\"media === 'icon'\"\n          [attr.href]=\"iconHref\"\n          class=\"sprk-o-Stack__item sprk-u-AbsoluteCenter\"\n          [analyticsString]=\"iconLinkAnalytics\"\n        >\n          <sprk-icon\n            [iconType]=\"iconType\"\n            [additionalClasses]=\"additionalClassesIcon\"\n          ></sprk-icon>\n        </a>\n\n        <h3 class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item\">{{ title }}</h3>\n\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n        <div class=\"sprk-o-Stack__item\">\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            [attr.href]=\"ctaHref\"\n            [ngClass]=\"getClassesCta()\"\n            [analyticsString]=\"ctaAnalytics\"\n          >\n            {{ ctaText }}\n            <sprk-icon\n              *ngIf=\"ctaIcon && (ctaType === 'link')\"\n              [iconType]=\"ctaIcon\"\n            ></sprk-icon>\n          </a>\n        </div>\n      </div>\n    </div>\n\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'base'\"\n      [attr.data-id]=\"idString\"\n    >\n      <ng-content></ng-content>\n    </div>\n\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'teaserHeading'\"\n      [attr.data-id]=\"idString\"\n    >\n      <h3\n        class=\"sprk-o-Stack__item sprk-c-Card__content sprk-b-TypeDisplayFive\"\n      >\n        {{ title }}\n      </h3>\n\n      <div\n        class=\"sprk-o-Stack__item sprk-c-Card__content sprk-o-Stack sprk-o-Stack--medium\"\n      >\n        <a\n          sprkLink\n          variant=\"unstyled\"\n          *ngIf=\"media === 'img'\"\n          [attr.href]=\"imgHref\"\n          class=\"sprk-o-Stack__item\"\n          [analyticsString]=\"imgLinkAnalytics\"\n        >\n          <img [attr.alt]=\"imgAlt\" [attr.src]=\"imgSrc\" />\n        </a>\n\n        <a\n          sprkLink\n          *ngIf=\"media === 'icon'\"\n          [attr.href]=\"iconHref\"\n          variant=\"unstyled\"\n          class=\"sprk-o-Stack__item sprk-o-Stack__item--center\"\n          [analyticsString]=\"iconLinkAnalytics\"\n        >\n          <sprk-icon\n            [iconType]=\"iconType\"\n            [additionalClasses]=\"additionalClassesIcon\"\n          ></sprk-icon>\n        </a>\n\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n        <div class=\"sprk-o-Stack__item\">\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            [attr.href]=\"ctaHref\"\n            [ngClass]=\"getClassesCta()\"\n            [analyticsString]=\"ctaAnalytics\"\n          >\n            {{ ctaText }}\n            <sprk-icon\n              *ngIf=\"ctaIcon && (ctaType === 'link')\"\n              [iconType]=\"ctaIcon\"\n            ></sprk-icon>\n          </a>\n        </div>\n      </div>\n    </div>\n  "
        })
    ], SprkCardComponent);
    return SprkCardComponent;
}());
export { SprkCardComponent };
//# sourceMappingURL=data:application/json;base64,