import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
var SprkFlagComponent = /** @class */ (function () {
    function SprkFlagComponent() {
        /**
         * The Flag component will use this to decide where
         * the media-slot is rendered in relation to the
         * body-slot. The default is the media-slot is on
         * the left of the body-slot. isReversed="true" places the
         * media-slot on the right of the body-slot.
         */
        this.isReversed = false;
        /**
         * The Flag component will use this to stack
         * the element at the `$sprk-flag-stacked-breakpoint`
         */
        this.isStacked = false;
        /**
         * Determines how much space between the
         * media and the body.
         */
        this.spacing = 'medium';
        /**
         * Determines the vertical alignment of content.
         */
        this.verticalAlignment = 'top';
    }
    /**
     * @ignore
     */
    SprkFlagComponent.prototype.getClasses = function () {
        var classArray = ['sprk-o-Flag'];
        if (this.spacing !== 'medium') {
            var spacingClasses = {
                flush: 'sprk-o-Flag--flush',
                tiny: 'sprk-o-Flag--tiny',
                small: 'sprk-o-Flag--small',
                large: 'sprk-o-Flag--large',
                huge: 'sprk-o-Flag--huge',
            };
            classArray.push(spacingClasses[this.spacing]);
        }
        if (this.verticalAlignment !== 'top') {
            var verticalAlignmentClasses = {
                middle: 'sprk-o-Flag--middle',
                bottom: 'sprk-o-Flag--bottom',
            };
            classArray.push(verticalAlignmentClasses[this.verticalAlignment]);
        }
        if (this.isReversed) {
            classArray.push('sprk-o-Flag--rev');
        }
        if (this.isStacked) {
            classArray.push('sprk-o-Flag--stacked');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    /**
     * @ignore
     */
    SprkFlagComponent.prototype.getMediaClasses = function () {
        var mediaClassArray = ['sprk-o-Flag__figure'];
        if (this.additionalMediaClasses) {
            this.additionalMediaClasses.split(' ').forEach(function (className) {
                mediaClassArray.push(className);
            });
        }
        return mediaClassArray.join(' ');
    };
    /**
     * @ignore
     */
    SprkFlagComponent.prototype.getBodyClasses = function () {
        var bodyClassArray = ['sprk-o-Flag__body'];
        if (this.additionalBodyClasses) {
            this.additionalBodyClasses.split(' ').forEach(function (className) {
                bodyClassArray.push(className);
            });
        }
        return bodyClassArray.join(' ');
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkFlagComponent.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkFlagComponent.prototype, "additionalMediaClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkFlagComponent.prototype, "additionalBodyClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkFlagComponent.prototype, "idString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkFlagComponent.prototype, "isReversed", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkFlagComponent.prototype, "isStacked", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkFlagComponent.prototype, "spacing", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkFlagComponent.prototype, "verticalAlignment", void 0);
    SprkFlagComponent = __decorate([
        Component({
            selector: 'sprk-flag',
            template: "\n    <div\n      [ngClass]=\"getClasses()\"\n      [attr.data-id]=\"idString\"\n    >\n      <div [ngClass]=\"getMediaClasses()\">\n        <ng-content select=\"[media-slot]\"></ng-content>\n      </div>\n      <div [ngClass]=\"getBodyClasses()\">\n        <ng-content select=\"[body-slot]\"></ng-content>\n      </div>\n    </div>\n  "
        })
    ], SprkFlagComponent);
    return SprkFlagComponent;
}());
export { SprkFlagComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1mbGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFya2Rlc2lnbnN5c3RlbS9zcGFyay1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvc3Byay1mbGFnL3NwcmstZmxhZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBbUJqRDtJQUFBO1FBb0NFOzs7Ozs7V0FNRztRQUVILGVBQVUsR0FBRyxLQUFLLENBQUM7UUFFbkI7OztXQUdHO1FBRUgsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUVsQjs7O1dBR0c7UUFFSCxZQUFPLEdBQTZELFFBQVEsQ0FBQztRQUU3RTs7V0FFRztRQUVILHNCQUFpQixHQUFnQyxLQUFLLENBQUM7SUF5RXpELENBQUM7SUF2RUM7O09BRUc7SUFDSCxzQ0FBVSxHQUFWO1FBQ0UsSUFBTSxVQUFVLEdBQWEsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUU3QyxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQzdCLElBQU0sY0FBYyxHQUFHO2dCQUNyQixLQUFLLEVBQUUsb0JBQW9CO2dCQUMzQixJQUFJLEVBQUUsbUJBQW1CO2dCQUN6QixLQUFLLEVBQUUsb0JBQW9CO2dCQUMzQixLQUFLLEVBQUUsb0JBQW9CO2dCQUMzQixJQUFJLEVBQUUsbUJBQW1CO2FBQzFCLENBQUM7WUFFRixVQUFVLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUMvQztRQUVELElBQUksSUFBSSxDQUFDLGlCQUFpQixLQUFLLEtBQUssRUFBRTtZQUNwQyxJQUFNLHdCQUF3QixHQUFHO2dCQUMvQixNQUFNLEVBQUUscUJBQXFCO2dCQUM3QixNQUFNLEVBQUUscUJBQXFCO2FBQzlCLENBQUM7WUFFRixVQUFVLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7U0FDbkU7UUFFRCxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsVUFBVSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1NBQ3JDO1FBRUQsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLFVBQVUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztTQUN6QztRQUVELElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQzFCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUEsU0FBUztnQkFDakQsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM3QixDQUFDLENBQUMsQ0FBQztTQUNKO1FBRUQsT0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFDRDs7T0FFRztJQUNILDJDQUFlLEdBQWY7UUFDRSxJQUFNLGVBQWUsR0FBYSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFFMUQsSUFBSSxJQUFJLENBQUMsc0JBQXNCLEVBQUU7WUFDL0IsSUFBSSxDQUFDLHNCQUFzQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxTQUFTO2dCQUN0RCxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ2xDLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLGVBQWUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNEOztPQUVHO0lBQ0gsMENBQWMsR0FBZDtRQUNFLElBQU0sY0FBYyxHQUFhLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUV2RCxJQUFJLElBQUksQ0FBQyxxQkFBcUIsRUFBRTtZQUM5QixJQUFJLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFBLFNBQVM7Z0JBQ3JELGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDakMsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBaklEO1FBREMsS0FBSyxFQUFFOztnRUFDa0I7SUFRMUI7UUFEQyxLQUFLLEVBQUU7O3FFQUN1QjtJQVEvQjtRQURDLEtBQUssRUFBRTs7b0VBQ3NCO0lBVzlCO1FBREMsS0FBSyxFQUFFOzt1REFDUztJQVVqQjtRQURDLEtBQUssRUFBRTs7eURBQ1c7SUFPbkI7UUFEQyxLQUFLLEVBQUU7O3dEQUNVO0lBT2xCO1FBREMsS0FBSyxFQUFFOztzREFDcUU7SUFNN0U7UUFEQyxLQUFLLEVBQUU7O2dFQUMrQztJQWhFNUMsaUJBQWlCO1FBakI3QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsV0FBVztZQUNyQixRQUFRLEVBQUUsa1ZBWVQ7U0FDRixDQUFDO09BRVcsaUJBQWlCLENBeUk3QjtJQUFELHdCQUFDO0NBQUEsQUF6SUQsSUF5SUM7U0F6SVksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzcHJrLWZsYWcnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXZcbiAgICAgIFtuZ0NsYXNzXT1cImdldENsYXNzZXMoKVwiXG4gICAgICBbYXR0ci5kYXRhLWlkXT1cImlkU3RyaW5nXCJcbiAgICA+XG4gICAgICA8ZGl2IFtuZ0NsYXNzXT1cImdldE1lZGlhQ2xhc3NlcygpXCI+XG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIlttZWRpYS1zbG90XVwiPjwvbmctY29udGVudD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBbbmdDbGFzc109XCJnZXRCb2R5Q2xhc3NlcygpXCI+XG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltib2R5LXNsb3RdXCI+PC9uZy1jb250ZW50PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIGBcbn0pXG5cbmV4cG9ydCBjbGFzcyBTcHJrRmxhZ0NvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgKiBjb21wb25lbnQgY29udGFpbmVyLlxuICAgKi9cbiAgQElucHV0KClcbiAgYWRkaXRpb25hbENsYXNzZXM6IHN0cmluZztcblxuICAvKipcbiAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICogY29udGFpbmVyIG9mIHRoZSBtZWRpYS1zbG90LlxuICAgKi9cbiAgQElucHV0KClcbiAgYWRkaXRpb25hbE1lZGlhQ2xhc3Nlczogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgKiBjb250YWluZXIgb2YgdGhlIGJvZHktc2xvdC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGFkZGl0aW9uYWxCb2R5Q2xhc3Nlczogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZFxuICAgKiB0byB0aGUgYGRhdGEtaWRgIGF0dHJpYnV0ZSBvbiB0aGVcbiAgICogY29tcG9uZW50LiBUaGlzIGlzIGludGVuZGVkIHRvIGJlXG4gICAqIHVzZWQgYXMgYSBzZWxlY3RvciBmb3IgYXV0b21hdGVkXG4gICAqIHRvb2xzLiBUaGlzIHZhbHVlIHNob3VsZCBiZSB1bmlxdWVcbiAgICogcGVyIHBhZ2UuXG4gICAqL1xuICBASW5wdXQoKVxuICBpZFN0cmluZzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgRmxhZyBjb21wb25lbnQgd2lsbCB1c2UgdGhpcyB0byBkZWNpZGUgd2hlcmVcbiAgICogdGhlIG1lZGlhLXNsb3QgaXMgcmVuZGVyZWQgaW4gcmVsYXRpb24gdG8gdGhlXG4gICAqIGJvZHktc2xvdC4gVGhlIGRlZmF1bHQgaXMgdGhlIG1lZGlhLXNsb3QgaXMgb25cbiAgICogdGhlIGxlZnQgb2YgdGhlIGJvZHktc2xvdC4gaXNSZXZlcnNlZD1cInRydWVcIiBwbGFjZXMgdGhlXG4gICAqIG1lZGlhLXNsb3Qgb24gdGhlIHJpZ2h0IG9mIHRoZSBib2R5LXNsb3QuXG4gICAqL1xuICBASW5wdXQoKVxuICBpc1JldmVyc2VkID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIFRoZSBGbGFnIGNvbXBvbmVudCB3aWxsIHVzZSB0aGlzIHRvIHN0YWNrXG4gICAqIHRoZSBlbGVtZW50IGF0IHRoZSBgJHNwcmstZmxhZy1zdGFja2VkLWJyZWFrcG9pbnRgXG4gICAqL1xuICBASW5wdXQoKVxuICBpc1N0YWNrZWQgPSBmYWxzZTtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyBob3cgbXVjaCBzcGFjZSBiZXR3ZWVuIHRoZVxuICAgKiBtZWRpYSBhbmQgdGhlIGJvZHkuXG4gICAqL1xuICBASW5wdXQoKVxuICBzcGFjaW5nOiAnZmx1c2gnIHwgJ3RpbnknIHwgJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2xhcmdlJyB8ICdodWdlJyA9ICdtZWRpdW0nO1xuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHRoZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgY29udGVudC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIHZlcnRpY2FsQWxpZ25tZW50OiAndG9wJyB8ICdtaWRkbGUnIHwgJ2JvdHRvbScgPSAndG9wJztcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzQXJyYXk6IHN0cmluZ1tdID0gWydzcHJrLW8tRmxhZyddO1xuXG4gICAgaWYgKHRoaXMuc3BhY2luZyAhPT0gJ21lZGl1bScpIHtcbiAgICAgIGNvbnN0IHNwYWNpbmdDbGFzc2VzID0ge1xuICAgICAgICBmbHVzaDogJ3Nwcmstby1GbGFnLS1mbHVzaCcsXG4gICAgICAgIHRpbnk6ICdzcHJrLW8tRmxhZy0tdGlueScsXG4gICAgICAgIHNtYWxsOiAnc3Byay1vLUZsYWctLXNtYWxsJyxcbiAgICAgICAgbGFyZ2U6ICdzcHJrLW8tRmxhZy0tbGFyZ2UnLFxuICAgICAgICBodWdlOiAnc3Byay1vLUZsYWctLWh1Z2UnLFxuICAgICAgfTtcblxuICAgICAgY2xhc3NBcnJheS5wdXNoKHNwYWNpbmdDbGFzc2VzW3RoaXMuc3BhY2luZ10pO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnZlcnRpY2FsQWxpZ25tZW50ICE9PSAndG9wJykge1xuICAgICAgY29uc3QgdmVydGljYWxBbGlnbm1lbnRDbGFzc2VzID0ge1xuICAgICAgICBtaWRkbGU6ICdzcHJrLW8tRmxhZy0tbWlkZGxlJyxcbiAgICAgICAgYm90dG9tOiAnc3Byay1vLUZsYWctLWJvdHRvbScsXG4gICAgICB9O1xuXG4gICAgICBjbGFzc0FycmF5LnB1c2godmVydGljYWxBbGlnbm1lbnRDbGFzc2VzW3RoaXMudmVydGljYWxBbGlnbm1lbnRdKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc1JldmVyc2VkKSB7XG4gICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1GbGFnLS1yZXYnKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc1N0YWNrZWQpIHtcbiAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLUZsYWctLXN0YWNrZWQnKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcykge1xuICAgICAgdGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKGNsYXNzTmFtZSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2xhc3NBcnJheS5qb2luKCcgJyk7XG4gIH1cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGdldE1lZGlhQ2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IG1lZGlhQ2xhc3NBcnJheTogc3RyaW5nW10gPSBbJ3Nwcmstby1GbGFnX19maWd1cmUnXTtcblxuICAgIGlmICh0aGlzLmFkZGl0aW9uYWxNZWRpYUNsYXNzZXMpIHtcbiAgICAgIHRoaXMuYWRkaXRpb25hbE1lZGlhQ2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgbWVkaWFDbGFzc0FycmF5LnB1c2goY2xhc3NOYW1lKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBtZWRpYUNsYXNzQXJyYXkuam9pbignICcpO1xuICB9XG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBnZXRCb2R5Q2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGJvZHlDbGFzc0FycmF5OiBzdHJpbmdbXSA9IFsnc3Byay1vLUZsYWdfX2JvZHknXTtcblxuICAgIGlmICh0aGlzLmFkZGl0aW9uYWxCb2R5Q2xhc3Nlcykge1xuICAgICAgdGhpcy5hZGRpdGlvbmFsQm9keUNsYXNzZXMuc3BsaXQoJyAnKS5mb3JFYWNoKGNsYXNzTmFtZSA9PiB7XG4gICAgICAgIGJvZHlDbGFzc0FycmF5LnB1c2goY2xhc3NOYW1lKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBib2R5Q2xhc3NBcnJheS5qb2luKCcgJyk7XG4gIH1cbn1cbiJdfQ==