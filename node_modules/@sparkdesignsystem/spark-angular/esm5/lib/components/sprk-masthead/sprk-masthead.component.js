import { __decorate, __metadata } from "tslib";
import { Component, HostListener, Input, Renderer2, AfterContentInit } from '@angular/core';
import { Router, Event, NavigationEnd } from '@angular/router';
import * as _ from 'lodash';
var SprkMastheadComponent = /** @class */ (function () {
    /**
     * @ignore
     */
    function SprkMastheadComponent(renderer, router) {
        var _this = this;
        this.renderer = renderer;
        /**
         *  The `href` value of the logo.
         */
        this.logoHref = '/';
        /**
         * The value supplied will be used as
         * screen reader text that is visually hidden
         * for the link that wraps the logo.
         */
        this.logoLinkScreenReaderText = 'Go to the homepage';
        /**
         * Represents the initial state of the
         * narrow nav element of the Masthead component.
         */
        this.isNarrowNavOpen = false;
        /**
         * A string that is used to set the `id` on the narrow nav
         * and the `aria-controls` for the menu trigger button.
         */
        this.narrowNavId = _.uniqueId("sprk_masthead_narrow_nav_");
        /**
         * @ignore
         */
        this.iconType = 'chevron-down';
        /**
         * @ignore
         */
        this.componentID = _.uniqueId();
        /**
         * @ignore
         */
        this.controls_id = "sprk-narrow-navigation-item__" + this.componentID;
        /**
         * @ignore
         */
        this.isScrolled = false;
        /**
         * @ignore
         */
        this.isNarrowLayout = false;
        /**
         * @ignore
         */
        this.scrollDirection = 'up';
        /**
         * @ignore
         */
        this.isHidden = false;
        /**
         * @ignore
         */
        this.isNarrowOnResize = false;
        /**
         * @ignore
         */
        this.scrollPosition = 0;
        /**
         * @ignore
         */
        this.throttledCheckScrollDirection = _.throttle(this.checkScrollDirection, 500);
        /**
         * @ignore
         */
        this.throttledUpdateLayoutState = _.throttle(this.updateLayoutState, 500);
        router.events.subscribe(function (event) {
            if (event instanceof NavigationEnd) {
                _this.closeNarrowNav();
            }
        });
    }
    /**
     * @ignore
     * Closes the narrow navigation menu
     * if it is left open when
     * the viewport is expanded.
     */
    SprkMastheadComponent.prototype.handleResizeEvent = function () {
        this.closeNarrowNav();
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.onScroll = function (event) {
        window.scrollY >= 10 ? (this.isScrolled = true) : (this.isScrolled = false);
        if (this.isNarrowLayout) {
            this.throttledCheckScrollDirection();
        }
    };
    /**
     * @ignore
     * Handles when viewport size changes to
     * large while narrow nav is hidden.
     */
    SprkMastheadComponent.prototype.onResize = function (event) {
        this.isNarrowOnResize = this.isElementVisible('.sprk-c-Masthead__menu');
        this.throttledUpdateLayoutState();
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.updateLayoutState = function () {
        if (this.isNarrowLayout !== this.isNarrowOnResize) {
            this.isNarrowLayout = this.isNarrowOnResize;
            // If is not narrow on resize update, make sure it's visible
            if (!this.isNarrowLayout) {
                this.isHidden = false;
            }
        }
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.ngAfterContentInit = function () {
        this.isNarrowLayout = this.isElementVisible('.sprk-c-Masthead__menu');
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.isElementVisible = function (selector) {
        if (typeof window === 'undefined') {
            return;
        }
        var element = document.querySelector(selector);
        if (!element) {
            return;
        }
        var elementDisplayValue = window.getComputedStyle(element).display;
        var elementVisibilityValue = window.getComputedStyle(element).visibility;
        var elementIsVisible = elementDisplayValue === 'none' || elementVisibilityValue === 'hidden'
            ? false
            : true;
        return elementIsVisible;
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.scrollYDirection = function () {
        if (typeof window !== 'undefined') {
            var newScrollPos = window.scrollY;
            if (newScrollPos < 0) {
                return;
            }
            var diff = newScrollPos - this.scrollPosition;
            var direction = diff > 0 ? 'down' : 'up';
            this.scrollPosition = newScrollPos;
            return direction;
        }
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.checkScrollDirection = function () {
        var newDirection = this.scrollYDirection();
        if (this.scrollDirection !== newDirection) {
            this.scrollDirection = newDirection;
            this.scrollDirection === 'down'
                ? (this.isHidden = true)
                : (this.isHidden = false);
        }
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.getClasses = function () {
        var classArray = ['sprk-c-Masthead', 'sprk-o-Stack'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        if (this.isNarrowNavOpen) {
            classArray.push('sprk-c-Masthead--open');
        }
        if (this.isScrolled) {
            classArray.push('sprk-c-Masthead--scroll');
        }
        if (this.isHidden) {
            classArray.push('sprk-c-Masthead--hidden');
        }
        return classArray.join(' ');
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.getNarrowNavClasses = function () {
        var classArray = [];
        if (this.additionalNarrowNavClasses) {
            this.additionalNarrowNavClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.getSecondaryNavClasses = function () {
        var classArray = [
            'sprk-c-Masthead__big-nav-items',
            'sprk-o-Stack',
            'sprk-o-Stack--misc-a',
            'sprk-o-Stack--center-row',
            'sprk-o-Stack--split@xxs',
            'sprk-b-List',
            'sprk-b-List--bare'
        ];
        if (this.additionalBigNavClasses) {
            this.additionalBigNavClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.toggleNarrowNav = function (event) {
        event.preventDefault();
        if (this.isNarrowNavOpen) {
            this.closeNarrowNav();
        }
        else {
            this.openNarrowNav();
        }
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.openNarrowNav = function () {
        this.renderer.addClass(document.body, 'sprk-u-Overflow--hidden');
        this.renderer.addClass(document.body.parentElement, 'sprk-u-Overflow--hidden');
        this.renderer.addClass(document.body, 'sprk-u-Height--100');
        this.renderer.addClass(document.body.parentElement, 'sprk-u-Height--100');
        this.isNarrowNavOpen = true;
    };
    /**
     * @ignore
     */
    SprkMastheadComponent.prototype.closeNarrowNav = function () {
        this.renderer.removeClass(document.body, 'sprk-u-Overflow--hidden');
        this.renderer.removeClass(document.body.parentElement, 'sprk-u-Overflow--hidden');
        this.renderer.removeClass(document.body, 'sprk-u-Height--100');
        this.renderer.removeClass(document.body.parentElement, 'sprk-u-Height--100');
        this.isNarrowNavOpen = false;
    };
    SprkMastheadComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: Router }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkMastheadComponent.prototype, "logoHref", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkMastheadComponent.prototype, "logoLinkScreenReaderText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkMastheadComponent.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkMastheadComponent.prototype, "additionalBigNavClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkMastheadComponent.prototype, "additionalNarrowNavClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], SprkMastheadComponent.prototype, "narrowNavLinks", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkMastheadComponent.prototype, "isNarrowNavOpen", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkMastheadComponent.prototype, "idString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], SprkMastheadComponent.prototype, "bigNavLinks", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkMastheadComponent.prototype, "narrowSelector", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkMastheadComponent.prototype, "narrowNavId", void 0);
    __decorate([
        HostListener('window:orientationchange'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], SprkMastheadComponent.prototype, "handleResizeEvent", null);
    __decorate([
        HostListener('window:scroll', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], SprkMastheadComponent.prototype, "onScroll", null);
    __decorate([
        HostListener('window:resize', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], SprkMastheadComponent.prototype, "onResize", null);
    SprkMastheadComponent = __decorate([
        Component({
            selector: 'sprk-masthead',
            template: "\n    <header [ngClass]=\"getClasses()\" role=\"banner\" [attr.data-id]=\"idString\">\n      <div\n        class=\"sprk-c-Masthead__content sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--split@xxs\"\n      >\n        <div\n          class=\"sprk-c-Masthead__menu sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <button\n            class=\"sprk-c-Menu\"\n            type=\"button\"\n            [attr.aria-expanded]=\"isNarrowNavOpen ? true : false\"\n            (click)=\"toggleNarrowNav($event)\"\n            [attr.aria-controls]=\"narrowNavId\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">Toggle Navigation</span>\n            <svg\n              [ngClass]=\"{\n                'sprk-c-Icon': true,\n                'sprk-c-Icon--l': true,\n                'sprk-c-Menu__icon': true,\n                'sprk-c-Menu__icon--open': isNarrowNavOpen\n              }\"\n              aria-hidden=\"true\"\n              viewBox=\"0 0 64 64\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g>\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--two\"\n                  d=\"m8 32h48\"\n                />\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--one\"\n                  d=\"m8 18.68h48\"\n                />\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--three\"\n                  d=\"m8 45.32h48\"\n                />\n              </g>\n            </svg>\n          </button>\n        </div>\n\n        <div\n          class=\"sprk-c-Masthead__branding sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <a sprkLink [attr.href]=\"logoHref\" variant=\"unstyled\">\n            <ng-content select=\"[logo-slot]\"></ng-content>\n            <span class=\"sprk-u-ScreenReaderText\">{{\n              logoLinkScreenReaderText\n            }}</span>\n          </a>\n        </div>\n\n        <div\n          class=\"sprk-c-Masthead__nav-item sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <ng-content select=\"[navItem-slot]\"></ng-content>\n        </div>\n        <nav\n          class=\"\n          sprk-c-Masthead__little-nav\n          sprk-o-Stack__item\n          sprk-o-Stack__item--flex@xxs\n          sprk-o-Stack\n          sprk-o-Stack--misc-a\n          sprk-o-Stack--split@xxs\n          sprk-o-Stack--end-row\"\n          role=\"navigation\"\n        >\n          <ng-content select=\"[little-nav-slot]\"></ng-content>\n\n          <ng-content select=\"[utility-slot]\"></ng-content>\n        </nav>\n      </div>\n\n      <div class=\"sprk-o-Stack__item\">\n        <nav\n          class=\"sprk-c-Masthead__big-nav\"\n          role=\"navigation\"\n          [attr.data-id]=\"idString\"\n          *ngIf=\"bigNavLinks\"\n        >\n          <ul [ngClass]=\"getSecondaryNavClasses()\">\n            <li\n              *ngFor=\"let link of bigNavLinks\"\n              [ngClass]=\"{\n                'sprk-c-Masthead__big-nav-item': true,\n                'sprk-o-Stack__item': true,\n                'sprk-c-Masthead__big-nav-item--open':\n                  link.focused && link.subNav\n              }\"\n              routerLinkActive=\"sprk-c-Masthead__big-nav-item--active\"\n              [attr.aria-haspopup]=\"link.subNav ? 'true' : null\"\n            >\n              <div *ngIf=\"link.subNav\">\n                <sprk-dropdown\n                  [choices]=\"link.subNav\"\n                  additionalTriggerClasses=\"sprk-b-Link--plain sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n                  additionalClasses=\"sprk-u-TextAlign--left\"\n                  triggerIconType=\"chevron-down\"\n                  [analyticsString]=\"link.analyticsString\"\n                  [triggerText]=\"link.text\"\n                ></sprk-dropdown>\n              </div>\n              <div *ngIf=\"!link.subNav\">\n                <a\n                  sprkLink\n                  variant=\"plain\"\n                  [analyticsString]=\"link.analyticsString\"\n                  class=\"sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n                  [attr.href]=\"link.href\"\n                >\n                  {{ link.text }}\n                </a>\n              </div>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <nav\n        *ngIf=\"isNarrowNavOpen\"\n        class=\"sprk-c-Masthead__narrow-nav\"\n        role=\"navigation\"\n        [id]=\"narrowNavId\"\n      >\n        <sprk-dropdown\n          *ngIf=\"narrowSelector\"\n          dropdownType=\"mastheadSelector\"\n          additionalClasses=\"sprk-c-Masthead__selector-dropdown\"\n          additionalTriggerClasses=\"\n            sprk-c-Masthead__selector\n            sprk-b-Link\n            sprk-b-Link--plain\n            sprk-o-Stack\n            sprk-o-Stack--split@xxs\n            sprk-o-Stack--center-column\"\n          additionalTriggerTextClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n          additionalIconClasses=\"sprk-Stack__item sprk-u-mrs\"\n          [triggerText]=\"narrowSelector['trigger'].text\"\n          selector=\"Select One\"\n          triggerIconType=\"chevron-down\"\n          [choices]=\"narrowSelector['choices']\"\n        >\n          <div\n            *ngIf=\"narrowSelector['footer']\"\n            class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n            sprkDropdownFooter\n          >\n            <a\n              sprkLink\n              variant=\"unstyled\"\n              [analyticsString]=\"narrowSelector['footer'].analyticsString\"\n              [attr.href]=\"narrowSelector['footer'].href\"\n              class=\"sprk-c-Button sprk-c-Button--tertiary\"\n            >\n              {{ narrowSelector['footer'].text }}\n            </a>\n          </div>\n        </sprk-dropdown>\n\n        <sprk-masthead-accordion [additionalClasses]=\"getNarrowNavClasses()\">\n          <div *ngFor=\"let narrowLink of narrowNavLinks\">\n            <div *ngIf=\"narrowLink.subNav\">\n              <sprk-masthead-accordion-item\n                iconTypeOpen=\"chevron-down\"\n                iconTypeClosed=\"chevron-down\"\n                [leadingIcon]=\"narrowLink.leadingIcon\"\n                [isActive]=\"narrowLink.active\"\n                [title]=\"narrowLink.text\"\n              >\n                <ul\n                  class=\"sprk-b-List sprk-b-List--bare sprk-c-MastheadAccordion__details\"\n                >\n                  <li\n                    class=\"sprk-c-MastheadAccordion__item\"\n                    *ngFor=\"let subNavLink of narrowLink.subNav\"\n                  >\n                    <a\n                      sprkLink\n                      variant=\"unstyled\"\n                      class=\"sprk-c-MastheadAccordion__summary\"\n                      [attr.href]=\"subNavLink.href\"\n                      [analyticsString]=\"subNavLink.analyticsString\"\n                    >\n                      <sprk-icon\n                        [iconType]=\"subNavLink.leadingIcon\"\n                        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                        *ngIf=\"subNavLink.leadingIcon\"\n                      ></sprk-icon>\n                      {{ subNavLink.text }}\n                    </a>\n                  </li>\n                </ul>\n              </sprk-masthead-accordion-item>\n            </div>\n            <div *ngIf=\"!narrowLink.subNav\">\n              <li\n                [ngClass]=\"{\n                  'sprk-c-MastheadAccordion__item': true,\n                  'sprk-c-MastheadAccordion__item--active': narrowLink.active\n                }\"\n              >\n                <a\n                  sprkLink\n                  variant=\"unstyled\"\n                  class=\"sprk-c-MastheadAccordion__summary\"\n                  [attr.href]=\"narrowLink.href\"\n                  [analyticsString]=\"narrowLink.analyticsString\"\n                >\n                  <span class=\"sprk-c-MastheadAccordion__heading\">\n                    <sprk-icon\n                      [iconType]=\"narrowLink.leadingIcon\"\n                      additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                      *ngIf=\"narrowLink.leadingIcon\"\n                    ></sprk-icon>\n                    {{ narrowLink.text }}\n                  </span>\n                </a>\n              </li>\n            </div>\n          </div>\n        </sprk-masthead-accordion>\n        <ng-content select=\"[narrowNavFooter]\"></ng-content>\n      </nav>\n    </header>\n  "
        }),
        __metadata("design:paramtypes", [Renderer2, Router])
    ], SprkMastheadComponent);
    return SprkMastheadComponent;
}());
export { SprkMastheadComponent };
//# sourceMappingURL=data:application/json;base64,