import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
var SprkPaginationComponent = /** @class */ (function () {
    function SprkPaginationComponent() {
        /**
         * If set to `pager`, the component will render
         * in the Pager variant with no visible number
         * links. Otherwise, the component will render in
         * the Default variant if there three or fewer
         * pages or in the Long variant if there are
         * more than three pages.
         */
        this.paginationType = 'default';
        /**
         * Screen reader text for the "Next Page" icon.
         */
        this.nextLinkText = 'Next';
        /**
         * Screen reader text for the "Previous Page"
         * icon.
         */
        this.prevLinkText = 'Prev';
        /**
         * @ignore
         */
        this._currentPage = 1;
        /**
         * Accepts a function to run when the
         * previous link is clicked.
         * On click, `previousClick`
         * will emit the click event and current page.
         */
        this.previousClick = new EventEmitter();
        /**
         * Accepts a function
         * to run when the next link is clicked.
         * On click, `nextClick` will emit the click event and current page.
         */
        this.nextClick = new EventEmitter();
        /**
         * Accepts a function to run when the individual page
         * links are clicked. On click, `pageClick` will
         * emit the click event and current page.
         */
        this.pageClick = new EventEmitter();
    }
    Object.defineProperty(SprkPaginationComponent.prototype, "currentPage", {
        get: function () {
            return this._currentPage;
        },
        /**
         * The current page number.
         * In the Default and Long variants,
         * this value corresponds to the active page link.
         */
        set: function (value) {
            if (value > this.totalPages()) {
                value = this.totalPages();
            }
            else if (value < 1) {
                value = 1;
            }
            this._currentPage = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    SprkPaginationComponent.prototype.goToPage = function (event, page) {
        event.preventDefault();
        this.currentPage = page;
        this.pageClick.emit({ event: event, page: page });
    };
    /**
     * @ignore
     */
    SprkPaginationComponent.prototype.goBack = function (event, page) {
        event.preventDefault();
        var newPage = page;
        if (this.currentPage > 1) {
            newPage = this.currentPage - 1;
            this.currentPage = newPage;
        }
        // Page is still returning the old page. This allows us to
        // close Issue 1401 without introducing a breaking change.
        this.previousClick.emit({ event: event, page: page, newPage: newPage });
    };
    /**
     * @ignore
     */
    SprkPaginationComponent.prototype.goForward = function (event, page) {
        event.preventDefault();
        var newPage = page;
        if (this.currentPage < this.totalPages()) {
            newPage = this.currentPage + 1;
            this.currentPage = newPage;
        }
        // Page is still returning the old page. This allows us to
        // close Issue 1401 without introducing a breaking change.
        this.nextClick.emit({ event: event, page: page, newPage: newPage });
    };
    /**
     * @ignore
     * @returns total number of pages based on total
     * number of items and the desired number of
     * items to show per page.
     */
    SprkPaginationComponent.prototype.totalPages = function () {
        return Math.ceil(this.totalItems / this.itemsPerPage);
    };
    /**
     * @ignore
     * @returns true if currently on the last page.
     */
    SprkPaginationComponent.prototype.isLastPage = function () {
        return this.currentPage === this.totalPages();
    };
    /**
     * @ignore
     * @returns true if the component is in
     * either the default or long variant.
     */
    SprkPaginationComponent.prototype.showNumbers = function () {
        return this.paginationType !== 'pager';
    };
    /**
     * @ignore
     */
    SprkPaginationComponent.prototype.getClasses = function () {
        var classArray = [''];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkPaginationComponent.prototype, "paginationType", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], SprkPaginationComponent.prototype, "totalItems", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], SprkPaginationComponent.prototype, "itemsPerPage", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkPaginationComponent.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkPaginationComponent.prototype, "nextLinkText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkPaginationComponent.prototype, "prevLinkText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkPaginationComponent.prototype, "analyticsStringFirstLink", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkPaginationComponent.prototype, "analyticsStringSecondLink", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkPaginationComponent.prototype, "analyticsStringThirdLink", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkPaginationComponent.prototype, "analyticsStringLinkNext", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkPaginationComponent.prototype, "analyticsStringLinkPrev", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkPaginationComponent.prototype, "idString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], SprkPaginationComponent.prototype, "currentPage", null);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SprkPaginationComponent.prototype, "previousClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SprkPaginationComponent.prototype, "nextClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SprkPaginationComponent.prototype, "pageClick", void 0);
    SprkPaginationComponent = __decorate([
        Component({
            selector: 'sprk-pagination',
            template: "\n    <nav\n      aria-label=\"Pagination Navigation\"\n      [ngClass]=\"getClasses()\"\n      [attr.data-id]=\"idString\"\n    >\n      <sprk-unordered-list\n        listType=\"horizontal\"\n        additionalClasses=\"sprk-c-Pagination sprk-o-HorizontalList--spacing-medium\"\n      >\n        <sprk-list-item>\n          <a\n            sprkLink\n            variant=\"plain\"\n            (click)=\"goBack($event, currentPage)\"\n            [isDisabled]=\"currentPage === 1\"\n            class=\"sprk-c-Pagination__icon\"\n            [analyticsString]=\"analyticsStringLinkPrev\"\n            aria-label=\"Previous Page\"\n            href=\"#\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">{{ prevLinkText }}</span>\n            <sprk-icon\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n              iconType=\"chevron-left\"\n            ></sprk-icon>\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item *ngIf=\"showNumbers()\">\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, 1)\"\n            [ngClass]=\"{\n              'sprk-c-Pagination__link': true,\n              'sprk-c-Pagination__link--current': currentPage === 1\n            }\"\n            [analyticsString]=\"analyticsStringFirstLink\"\n            [attr.aria-current]=\"currentPage === 1\"\n            aria-label=\"Page 1\"\n          >\n            1\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage !== 2 && totalPages() === 3\"\n        >\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, 2)\"\n            class=\"sprk-c-Pagination__link\"\n            [attr.aria-current]=\"false\"\n            aria-label=\"Page 2\"\n          >\n            2\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage > 2 && totalPages() > 3\"\n        >\n          ...\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage > 1 && currentPage < totalPages()\"\n        >\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, currentPage)\"\n            class=\"sprk-c-Pagination__link sprk-c-Pagination__link--current\"\n            aria-current=\"true\"\n            [analyticsString]=\"analyticsStringSecondLink\"\n            attr.aria-label=\"Page {{ currentPage }}\"\n          >\n            {{ currentPage }}\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"\n            showNumbers() && currentPage < totalPages() - 1 && totalPages() > 3\n          \"\n        >\n          ...\n        </sprk-list-item>\n\n        <sprk-list-item *ngIf=\"showNumbers() && totalPages() > 1\">\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, totalPages())\"\n            [ngClass]=\"{\n              'sprk-c-Pagination__link': true,\n              'sprk-c-Pagination__link--current': currentPage === totalPages()\n            }\"\n            attr.aria-label=\"Page {{ totalPages() }}\"\n            [analyticsString]=\"analyticsStringThirdLink\"\n            [attr.aria-current]=\"currentPage === totalPages()\"\n          >\n            {{ totalPages() }}\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item>\n          <a\n            sprkLink\n            href=\"#\"\n            variant=\"plain\"\n            [isDisabled]=\"isLastPage()\"\n            (click)=\"goForward($event, currentPage)\"\n            class=\"sprk-c-Pagination__icon\"\n            [analyticsString]=\"analyticsStringLinkNext\"\n            aria-label=\"Next Page\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">{{ nextLinkText }}</span>\n            <sprk-icon\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n              iconType=\"chevron-right\"\n            ></sprk-icon>\n          </a>\n        </sprk-list-item>\n      </sprk-unordered-list>\n    </nav>\n  "
        }),
        __metadata("design:paramtypes", [])
    ], SprkPaginationComponent);
    return SprkPaginationComponent;
}());
export { SprkPaginationComponent };
//# sourceMappingURL=data:application/json;base64,