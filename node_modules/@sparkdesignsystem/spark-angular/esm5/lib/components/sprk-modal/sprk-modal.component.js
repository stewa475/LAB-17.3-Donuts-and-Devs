import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';
import * as _ from 'lodash';
var SprkModalComponent = /** @class */ (function () {
    /**
     * @ignore
     */
    function SprkModalComponent() {
        /**
         * The value supplied will be
         * rendered as the text for the confirm button.
         */
        this.confirmText = 'Confirm';
        /**
         * The value supplied will be rendered
         * as the text for the cancel button.
         */
        this.cancelText = 'Cancel';
        /**
         * If `true`, the Modal will be shown.
         * If `false`, the modal will not be shown.
         */
        this.isVisible = false;
        /**
         * When the Modal is closed the hide event is
         * emitted and a callback function can
         * be triggered if supplied.
         */
        this.hide = new EventEmitter();
        /**
         * Available when the Modal type is `choice`.
         * The Modal will emit a confirm click event
         * when the confirmation button is clicked.
         * A callback function can be triggered if
         * supplied.
         */
        this.confirmClick = new EventEmitter();
        /**
         * Available when the Modal type is `choice`.
         * The Modal will emit a cancel click event
         * when the cancel link is clicked.
         * A callback function can be triggered if supplied.
         */
        this.cancelClick = new EventEmitter();
        /**
         * @ignore
         */
        this.componentID = _.uniqueId();
        /**
         * @ignore
         */
        this.heading_id = "modalHeading__" + this.componentID;
        /**
         * @ignore
         */
        this.content_id = "modalContent__" + this.componentID;
    }
    /**
     * @ignore
     */
    SprkModalComponent.prototype.handleKeyboardEvent = function (event) {
        if (this.isVisible && event.key === 'Escape') {
            this.closeModal(event);
        }
    };
    /**
     * @ignore
     */
    SprkModalComponent.prototype.closeModal = function (event) {
        if (this.modalType !== 'wait') {
            event.preventDefault();
            this.hide.emit(event);
        }
    };
    /**
     * Emits an event when the confirmation
     * button is clicked.
     */
    SprkModalComponent.prototype.emitConfirmClick = function (event) {
        this.confirmClick.emit(event);
    };
    /**
     * Emits an event when the cancel
     * link is clicked.
     */
    SprkModalComponent.prototype.emitCancelClick = function (event) {
        event.preventDefault();
        this.cancelClick.emit(event);
        this.closeModal(event);
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkModalComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkModalComponent.prototype, "modalType", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkModalComponent.prototype, "confirmText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkModalComponent.prototype, "cancelText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkModalComponent.prototype, "confirmAnalyticsString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkModalComponent.prototype, "cancelAnalyticsString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkModalComponent.prototype, "idString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SprkModalComponent.prototype, "isVisible", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SprkModalComponent.prototype, "hide", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SprkModalComponent.prototype, "confirmClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SprkModalComponent.prototype, "cancelClick", void 0);
    __decorate([
        HostListener('document:keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], SprkModalComponent.prototype, "handleKeyboardEvent", null);
    SprkModalComponent = __decorate([
        Component({
            selector: 'sprk-modal',
            template: "\n    <div\n      *ngIf=\"isVisible\"\n      [ngClass]=\"{\n        'sprk-c-Modal': true,\n        'sprk-c-Modal--wait': modalType === 'wait'\n      }\"\n      role=\"dialog\"\n      tabindex=\"1\"\n      [attr.aria-labelledby]=\"heading_id\"\n      aria-modal=\"true\"\n      [attr.aria-describedby]=\"content_id\"\n      [attr.data-id]=\"idString\"\n    >\n      <div class=\"sprk-o-Stack sprk-o-Stack--large\">\n        <header class=\"sprk-o-Stack__item sprk-c-Modal__header\">\n          <h2\n            class=\"sprk-c-Modal__heading sprk-b-TypeDisplayFour\"\n            [id]=\"heading_id\"\n          >\n            {{ title }}\n          </h2>\n\n          <button\n            *ngIf=\"modalType != 'wait'\"\n            class=\"sprk-c-Modal__icon\"\n            type=\"button\"\n            aria-label=\"Close Modal\"\n            (click)=\"closeModal($event)\"\n          >\n            <sprk-icon\n              iconType=\"close\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n            ></sprk-icon>\n          </button>\n        </header>\n\n        <div\n          class=\"sprk-o-Stack__item sprk-c-Modal__body sprk-o-Stack sprk-o-Stack--medium\"\n        >\n          <div\n            *ngIf=\"modalType == 'wait'\"\n            class=\"sprk-o-Stack__item sprk-c-Spinner sprk-c-Spinner--circle sprk-c-Spinner--large sprk-c-Spinner--dark\"\n          ></div>\n          <ng-content></ng-content>\n        </div>\n\n        <footer\n          *ngIf=\"modalType === 'choice'\"\n          class=\"sprk-o-Stack__item sprk-c-Modal__footer\"\n        >\n          <button\n            class=\"sprk-c-Button sprk-u-mrm\"\n            [attr.data-analytics]=\"confirmAnalyticsString\"\n            (click)=\"emitConfirmClick($event)\"\n          >\n            {{ confirmText }}\n          </button>\n\n          <button\n            class=\"sprk-c-Button sprk-c-Button--tertiary\"\n            [attr.data-analytics]=\"cancelAnalyticsString\"\n            (click)=\"emitCancelClick($event)\"\n          >\n            {{ cancelText }}\n          </button>\n        </footer>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"isVisible\"\n      class=\"sprk-c-ModalMask\"\n      tabindex=\"-1\"\n      (click)=\"closeModal($event)\"\n    ></div>\n  "
        }),
        __metadata("design:paramtypes", [])
    ], SprkModalComponent);
    return SprkModalComponent;
}());
export { SprkModalComponent };
//# sourceMappingURL=data:application/json;base64,