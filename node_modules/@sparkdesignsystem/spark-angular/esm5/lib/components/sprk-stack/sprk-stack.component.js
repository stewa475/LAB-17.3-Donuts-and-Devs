import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
var SprkStackComponent = /** @class */ (function () {
    function SprkStackComponent() {
    }
    /**
     * @ignore
     */
    SprkStackComponent.prototype.getClasses = function () {
        var classArray = ['sprk-o-Stack'];
        // Handle the choice of item split breakpoint by adding CSS class
        switch (this.splitAt) {
            case 'tiny':
                classArray.push('sprk-o-Stack--split@xs');
                break;
            case 'small':
                classArray.push('sprk-o-Stack--split@s');
                break;
            case 'medium':
                classArray.push('sprk-o-Stack--split@m');
                break;
            case 'large':
                classArray.push('sprk-o-Stack--split@l');
                break;
            case 'huge':
                classArray.push('sprk-o-Stack--split@xl');
                break;
            default:
                break;
        }
        // Handle the choice of item spacing by adding CSS class
        switch (this.itemSpacing) {
            case 'tiny':
                classArray.push('sprk-o-Stack--tiny');
                break;
            case 'small':
                classArray.push('sprk-o-Stack--small');
                break;
            case 'medium':
                classArray.push('sprk-o-Stack--medium');
                break;
            case 'large':
                classArray.push('sprk-o-Stack--large');
                break;
            case 'huge':
                classArray.push('sprk-o-Stack--huge');
                break;
            default:
                break;
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkStackComponent.prototype, "splitAt", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkStackComponent.prototype, "itemSpacing", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkStackComponent.prototype, "analyticsString", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkStackComponent.prototype, "additionalClasses", void 0);
    SprkStackComponent = __decorate([
        Component({
            selector: 'sprk-stack',
            template: "\n    <div [ngClass]=\"getClasses()\" [attr.data-analytics]=\"analyticsString\">\n      <ng-content></ng-content>\n    </div>\n  "
        })
    ], SprkStackComponent);
    return SprkStackComponent;
}());
export { SprkStackComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1zdGFjay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcmtkZXNpZ25zeXN0ZW0vc3BhcmstYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3Nwcmstc3RhY2svc3Byay1zdGFjay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBVWpEO0lBQUE7SUF1RkEsQ0FBQztJQXhEQzs7T0FFRztJQUNILHVDQUFVLEdBQVY7UUFDRSxJQUFNLFVBQVUsR0FBYSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRTlDLGlFQUFpRTtRQUNqRSxRQUFRLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDcEIsS0FBSyxNQUFNO2dCQUNULFVBQVUsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQztnQkFDMUMsTUFBTTtZQUNSLEtBQUssT0FBTztnQkFDVixVQUFVLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUM7Z0JBQ3pDLE1BQU07WUFDUixLQUFLLFFBQVE7Z0JBQ1gsVUFBVSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO2dCQUN6QyxNQUFNO1lBQ1IsS0FBSyxPQUFPO2dCQUNWLFVBQVUsQ0FBQyxJQUFJLENBQUMsdUJBQXVCLENBQUMsQ0FBQztnQkFDekMsTUFBTTtZQUNSLEtBQUssTUFBTTtnQkFDVCxVQUFVLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUM7Z0JBQzFDLE1BQU07WUFDUjtnQkFDRSxNQUFNO1NBQ1Q7UUFFRCx3REFBd0Q7UUFDeEQsUUFBUSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3hCLEtBQUssTUFBTTtnQkFDVCxVQUFVLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7Z0JBQ3RDLE1BQU07WUFDUixLQUFLLE9BQU87Z0JBQ1YsVUFBVSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO2dCQUN2QyxNQUFNO1lBQ1IsS0FBSyxRQUFRO2dCQUNYLFVBQVUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztnQkFDeEMsTUFBTTtZQUNSLEtBQUssT0FBTztnQkFDVixVQUFVLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7Z0JBQ3ZDLE1BQU07WUFDUixLQUFLLE1BQU07Z0JBQ1QsVUFBVSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO2dCQUN0QyxNQUFNO1lBQ1I7Z0JBQ0UsTUFBTTtTQUNUO1FBRUQsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxTQUFTO2dCQUNqRCxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQS9FRDtRQURDLEtBQUssRUFBRTs7dURBQ1E7SUFPaEI7UUFEQyxLQUFLLEVBQUU7OzJEQUNZO0lBUXBCO1FBREMsS0FBSyxFQUFFOzsrREFDZ0I7SUFPeEI7UUFEQyxLQUFLLEVBQUU7O2lFQUNrQjtJQTdCZixrQkFBa0I7UUFSOUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFlBQVk7WUFDdEIsUUFBUSxFQUFFLG1JQUlUO1NBQ0YsQ0FBQztPQUNXLGtCQUFrQixDQXVGOUI7SUFBRCx5QkFBQztDQUFBLEFBdkZELElBdUZDO1NBdkZZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc3Byay1zdGFjaycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBbbmdDbGFzc109XCJnZXRDbGFzc2VzKClcIiBbYXR0ci5kYXRhLWFuYWx5dGljc109XCJhbmFseXRpY3NTdHJpbmdcIj5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L2Rpdj5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBTcHJrU3RhY2tDb21wb25lbnQge1xuICAvKipcbiAgICogVGhlIHZhbHVlIHN1cHBsaWVkIGNhbiBiZSBgdGlueWAsIGBzbWFsbGAsIGBtZWRpdW1gLCBgbGFyZ2VgLCBvciBgaHVnZWAuXG4gICAqIFRoaXMgaXMgdXNlZCBhcyB0aGUgYnJlYWtwb2ludCBhdCB3aGljaCB0aGUgY29tcG9uZW50XG4gICAqIG1vdmVzIG9yIFwic3BsaXRzXCIgdG8gYSBzaWRlIGJ5IHNpZGUgbGF5b3V0LlxuICAgKi9cbiAgQElucHV0KClcbiAgc3BsaXRBdDogc3RyaW5nO1xuICAvKipcbiAgICogVGhpcyBpcyB1c2VkIGFzIHRoZSBhbW91bnQgb2Ygc3BhY2luZ1xuICAgKiBiZXR3ZWVuIHRoZSBjaGlsZCBgc3Bya1N0YWNrSXRlbWAgaXRlbXMuXG4gICAqIFRoZSB2YWx1ZSBzdXBwbGllZCBjYW4gYmUgYHRpbnlgLCBgc21hbGxgLCBgbWVkaXVtYCwgYGxhcmdlYCwgb3IgYGh1Z2VgLlxuICAgKi9cbiAgQElucHV0KClcbiAgaXRlbVNwYWNpbmc6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkIHRvIHRoZVxuICAgKiBgZGF0YS1hbmFseXRpY3NgIGF0dHJpYnV0ZSBvbiB0aGUgY29tcG9uZW50LlxuICAgKiBJbnRlbmRlZCBmb3IgYW4gb3V0c2lkZVxuICAgKiBsaWJyYXJ5IHRvIGNhcHR1cmUgZGF0YS5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGFuYWx5dGljc1N0cmluZzogc3RyaW5nO1xuICAvKipcbiAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICogY29tcG9uZW50LlxuICAgKi9cbiAgQElucHV0KClcbiAgYWRkaXRpb25hbENsYXNzZXM6IHN0cmluZztcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzQXJyYXk6IHN0cmluZ1tdID0gWydzcHJrLW8tU3RhY2snXTtcblxuICAgIC8vIEhhbmRsZSB0aGUgY2hvaWNlIG9mIGl0ZW0gc3BsaXQgYnJlYWtwb2ludCBieSBhZGRpbmcgQ1NTIGNsYXNzXG4gICAgc3dpdGNoICh0aGlzLnNwbGl0QXQpIHtcbiAgICAgIGNhc2UgJ3RpbnknOlxuICAgICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1TdGFjay0tc3BsaXRAeHMnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzbWFsbCc6XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLVN0YWNrLS1zcGxpdEBzJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbWVkaXVtJzpcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKCdzcHJrLW8tU3RhY2stLXNwbGl0QG0nKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdsYXJnZSc6XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLVN0YWNrLS1zcGxpdEBsJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnaHVnZSc6XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLVN0YWNrLS1zcGxpdEB4bCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIC8vIEhhbmRsZSB0aGUgY2hvaWNlIG9mIGl0ZW0gc3BhY2luZyBieSBhZGRpbmcgQ1NTIGNsYXNzXG4gICAgc3dpdGNoICh0aGlzLml0ZW1TcGFjaW5nKSB7XG4gICAgICBjYXNlICd0aW55JzpcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKCdzcHJrLW8tU3RhY2stLXRpbnknKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzbWFsbCc6XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLVN0YWNrLS1zbWFsbCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21lZGl1bSc6XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLVN0YWNrLS1tZWRpdW0nKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdsYXJnZSc6XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLVN0YWNrLS1sYXJnZScpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2h1Z2UnOlxuICAgICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1TdGFjay0taHVnZScpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmFkZGl0aW9uYWxDbGFzc2VzKSB7XG4gICAgICB0aGlzLmFkZGl0aW9uYWxDbGFzc2VzLnNwbGl0KCcgJykuZm9yRWFjaChjbGFzc05hbWUgPT4ge1xuICAgICAgICBjbGFzc0FycmF5LnB1c2goY2xhc3NOYW1lKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBjbGFzc0FycmF5LmpvaW4oJyAnKTtcbiAgfVxufVxuIl19