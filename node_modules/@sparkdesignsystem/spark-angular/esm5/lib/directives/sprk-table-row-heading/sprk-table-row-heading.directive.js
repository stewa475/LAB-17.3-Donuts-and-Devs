import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, Input, OnInit } from '@angular/core';
var SprkTableRowHeadingDirective = /** @class */ (function () {
    /**
     * @ignore
     */
    function SprkTableRowHeadingDirective(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    SprkTableRowHeadingDirective.prototype.getClasses = function () {
        var classArray = ['sprk-b-Table__row-heading'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray;
    };
    SprkTableRowHeadingDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.getClasses().forEach(function (className) {
            _this.ref.nativeElement.classList.add(className);
        });
    };
    SprkTableRowHeadingDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkTableRowHeadingDirective.prototype, "additionalClasses", void 0);
    SprkTableRowHeadingDirective = __decorate([
        Directive({
            selector: '[sprkTableRowHeading]'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], SprkTableRowHeadingDirective);
    return SprkTableRowHeadingDirective;
}());
export { SprkTableRowHeadingDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay10YWJsZS1yb3ctaGVhZGluZy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcmtkZXNpZ25zeXN0ZW0vc3BhcmstYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL3NwcmstdGFibGUtcm93LWhlYWRpbmcvc3Byay10YWJsZS1yb3ctaGVhZGluZy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFLckU7SUEyQkU7O09BRUc7SUFDSCxzQ0FBbUIsR0FBZTtRQUFmLFFBQUcsR0FBSCxHQUFHLENBQVk7SUFBRyxDQUFDO0lBckJ0Qzs7T0FFRztJQUNILGlEQUFVLEdBQVY7UUFDRSxJQUFNLFVBQVUsR0FBRyxDQUFDLDJCQUEyQixDQUFDLENBQUM7UUFDakQsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxTQUFTO2dCQUNqRCxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBRUQsK0NBQVEsR0FBUjtRQUFBLGlCQUlDO1FBSEMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxVQUFBLFNBQVM7WUFDakMsS0FBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNsRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7O2dCQUl1QixVQUFVOztJQXZCbEM7UUFEQyxLQUFLLEVBQUU7OzJFQUNrQjtJQVBmLDRCQUE0QjtRQUh4QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsdUJBQXVCO1NBQ2xDLENBQUM7eUNBK0J3QixVQUFVO09BOUJ2Qiw0QkFBNEIsQ0ErQnhDO0lBQUQsbUNBQUM7Q0FBQSxBQS9CRCxJQStCQztTQS9CWSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3NwcmtUYWJsZVJvd0hlYWRpbmddJ1xufSlcbmV4cG9ydCBjbGFzcyBTcHJrVGFibGVSb3dIZWFkaW5nRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAqIGVsZW1lbnQuXG4gICAqL1xuICBASW5wdXQoKVxuICBhZGRpdGlvbmFsQ2xhc3Nlczogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBnZXRDbGFzc2VzKCk6IHN0cmluZ1tdIHtcbiAgICBjb25zdCBjbGFzc0FycmF5ID0gWydzcHJrLWItVGFibGVfX3Jvdy1oZWFkaW5nJ107XG4gICAgaWYgKHRoaXMuYWRkaXRpb25hbENsYXNzZXMpIHtcbiAgICAgIHRoaXMuYWRkaXRpb25hbENsYXNzZXMuc3BsaXQoJyAnKS5mb3JFYWNoKGNsYXNzTmFtZSA9PiB7XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaChjbGFzc05hbWUpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBjbGFzc0FycmF5O1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5nZXRDbGFzc2VzKCkuZm9yRWFjaChjbGFzc05hbWUgPT4ge1xuICAgICAgdGhpcy5yZWYubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgfSk7XG4gIH1cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWY6IEVsZW1lbnRSZWYpIHt9XG59XG4iXX0=