import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, OnInit, HostListener, } from '@angular/core';
var SprkInputDirective = /** @class */ (function () {
    /**
     * @ignore
     */
    function SprkInputDirective(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    SprkInputDirective.prototype.OnChange = function ($event) {
        var value = this.ref.nativeElement.value;
        if (value.length > 0) {
            this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');
        }
        else {
            this.ref.nativeElement.classList.remove('sprk-b-Input--has-floating-label');
        }
    };
    SprkInputDirective.prototype.ngOnInit = function () {
        if (this.ref.nativeElement.nodeName === 'SELECT') {
            this.ref.nativeElement.classList.add('sprk-b-Select');
        }
        else if (this.ref.nativeElement.nodeName === 'TEXTAREA') {
            this.ref.nativeElement.classList.add('sprk-b-TextInput');
            this.ref.nativeElement.classList.add('sprk-b-TextArea');
        }
        else {
            this.ref.nativeElement.classList.add('sprk-b-TextInput');
        }
        if (this.ref.nativeElement.value.length > 0) {
            this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');
        }
        this.ref.nativeElement.classList.add('sprk-u-Width-100');
    };
    SprkInputDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        HostListener('change', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], SprkInputDirective.prototype, "OnChange", null);
    SprkInputDirective = __decorate([
        Directive({
            selector: '[sprkInput]'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], SprkInputDirective);
    return SprkInputDirective;
}());
export { SprkInputDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1pbnB1dC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcmtkZXNpZ25zeXN0ZW0vc3BhcmstYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2lucHV0cy9zcHJrLWlucHV0L3NwcmstaW5wdXQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEVBQ04sWUFBWSxHQUNiLE1BQU0sZUFBZSxDQUFDO0FBS3ZCO0lBQ0U7O09BRUc7SUFDSCw0QkFBbUIsR0FBZTtRQUFmLFFBQUcsR0FBSCxHQUFHLENBQVk7SUFBRyxDQUFDO0lBRXRDOztPQUVHO0lBRUgscUNBQVEsR0FBUixVQUFTLE1BQU07UUFDYixJQUFNLEtBQUssR0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWtDLENBQUMsS0FBSyxDQUFDO1FBQ2pFLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDcEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO1NBQzFFO2FBQU07WUFDTCxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLGtDQUFrQyxDQUFDLENBQUM7U0FDN0U7SUFDSCxDQUFDO0lBRUQscUNBQVEsR0FBUjtRQUNFLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsUUFBUSxLQUFLLFFBQVEsRUFBRTtZQUNoRCxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQ3ZEO2FBQU0sSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxRQUFRLEtBQUssVUFBVSxFQUFFO1lBQ3pELElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUN6RCxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDekQ7YUFBTTtZQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztTQUMxRDtRQUVELElBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFrQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFHO1lBQ2xFLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsa0NBQWtDLENBQUMsQ0FBQztTQUMxRTtRQUNELElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUMzRCxDQUFDOztnQkE3QnVCLFVBQVU7O0lBTWxDO1FBREMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDOzs7O3NEQVFsQztJQWpCVSxrQkFBa0I7UUFIOUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGFBQWE7U0FDeEIsQ0FBQzt5Q0FLd0IsVUFBVTtPQUp2QixrQkFBa0IsQ0FrQzlCO0lBQUQseUJBQUM7Q0FBQSxBQWxDRCxJQWtDQztTQWxDWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIE9uSW5pdCxcbiAgSG9zdExpc3RlbmVyLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3NwcmtJbnB1dF0nXG59KVxuZXhwb3J0IGNsYXNzIFNwcmtJbnB1dERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBASG9zdExpc3RlbmVyKCdjaGFuZ2UnLCBbJyRldmVudCddKVxuICBPbkNoYW5nZSgkZXZlbnQpIHtcbiAgICBjb25zdCB2YWx1ZSA9ICh0aGlzLnJlZi5uYXRpdmVFbGVtZW50IGFzIEhUTUxJbnB1dEVsZW1lbnQpLnZhbHVlO1xuICAgIGlmICh2YWx1ZS5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NwcmstYi1JbnB1dC0taGFzLWZsb2F0aW5nLWxhYmVsJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVmLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnc3Byay1iLUlucHV0LS1oYXMtZmxvYXRpbmctbGFiZWwnKTtcbiAgICB9XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5yZWYubmF0aXZlRWxlbWVudC5ub2RlTmFtZSA9PT0gJ1NFTEVDVCcpIHtcbiAgICAgIHRoaXMucmVmLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnc3Byay1iLVNlbGVjdCcpO1xuICAgIH0gZWxzZSBpZiAodGhpcy5yZWYubmF0aXZlRWxlbWVudC5ub2RlTmFtZSA9PT0gJ1RFWFRBUkVBJykge1xuICAgICAgdGhpcy5yZWYubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdzcHJrLWItVGV4dElucHV0Jyk7XG4gICAgICB0aGlzLnJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NwcmstYi1UZXh0QXJlYScpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NwcmstYi1UZXh0SW5wdXQnKTtcbiAgICB9XG5cbiAgICBpZiAoKHRoaXMucmVmLm5hdGl2ZUVsZW1lbnQgYXMgSFRNTElucHV0RWxlbWVudCkudmFsdWUubGVuZ3RoID4gMCApIHtcbiAgICAgIHRoaXMucmVmLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnc3Byay1iLUlucHV0LS1oYXMtZmxvYXRpbmctbGFiZWwnKTtcbiAgICB9XG4gICAgdGhpcy5yZWYubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdzcHJrLXUtV2lkdGgtMTAwJyk7XG4gIH1cbn1cbiJdfQ==