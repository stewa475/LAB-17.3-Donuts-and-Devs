import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, HostListener } from '@angular/core';
var SprkFormatterDateDirective = /** @class */ (function () {
    function SprkFormatterDateDirective(ref) {
        this.ref = ref;
    }
    SprkFormatterDateDirective.prototype.onFocus = function (value) {
        this.ref.nativeElement.value = this.formatDate(value);
    };
    SprkFormatterDateDirective.prototype.formatDate = function (value) {
        var m = value.match(
        // tslint:disable-next-line:max-line-length
        /^(((0[13578]|1[02])([/-]?)(0[1-9]|[12]\d|3[01])|(0[469]|11)([/-]?)(0[1-9]|[12]\d|30)|02([/-]?)((0[1-9])|[12]\d))(\4|\7|\9)[12]\d{3})?$/);
        var newValue = '';
        var cleanValue = value.replace(/[/-]/g, '');
        if (m) {
            for (var i = 0; i < cleanValue.length; i += 1) {
                if (i === 1 || i === 3) {
                    newValue += cleanValue[i] + "/";
                }
                else {
                    newValue += cleanValue[i];
                }
            }
            return newValue;
        }
        else {
            return value;
        }
    };
    SprkFormatterDateDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        HostListener('input', ['$event.target.value']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], SprkFormatterDateDirective.prototype, "onFocus", null);
    SprkFormatterDateDirective = __decorate([
        Directive({
            selector: '[sprkFormatterDate]'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], SprkFormatterDateDirective);
    return SprkFormatterDateDirective;
}());
export { SprkFormatterDateDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1mb3JtYXR0ZXItZGF0ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcmtkZXNpZ25zeXN0ZW0vc3BhcmstYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2lucHV0cy9mb3JtYXR0ZXJzL3NwcmstZm9ybWF0dGVyLWRhdGUvc3Byay1mb3JtYXR0ZXItZGF0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUtwRTtJQUNFLG9DQUFtQixHQUFlO1FBQWYsUUFBRyxHQUFILEdBQUcsQ0FBWTtJQUFHLENBQUM7SUFHdEMsNENBQU8sR0FBUCxVQUFRLEtBQUs7UUFDWCxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsK0NBQVUsR0FBVixVQUFXLEtBQUs7UUFDZCxJQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSztRQUNuQiwyQ0FBMkM7UUFDM0Msd0lBQXdJLENBQ3pJLENBQUM7UUFFRixJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7UUFDbEIsSUFBTSxVQUFVLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFOUMsSUFBSSxDQUFDLEVBQUU7WUFDTCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtvQkFDdEIsUUFBUSxJQUFPLFVBQVUsQ0FBQyxDQUFDLENBQUMsTUFBRyxDQUFDO2lCQUNqQztxQkFBTTtvQkFDTCxRQUFRLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUMzQjthQUNGO1lBQ0QsT0FBTyxRQUFRLENBQUM7U0FDakI7YUFBTTtZQUNMLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7SUFDSCxDQUFDOztnQkE1QnVCLFVBQVU7O0lBR2xDO1FBREMsWUFBWSxDQUFDLE9BQU8sRUFBRSxDQUFDLHFCQUFxQixDQUFDLENBQUM7Ozs7NkRBRzlDO0lBTlUsMEJBQTBCO1FBSHRDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxxQkFBcUI7U0FDaEMsQ0FBQzt5Q0FFd0IsVUFBVTtPQUR2QiwwQkFBMEIsQ0E4QnRDO0lBQUQsaUNBQUM7Q0FBQSxBQTlCRCxJQThCQztTQTlCWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbc3Bya0Zvcm1hdHRlckRhdGVdJ1xufSlcbmV4cG9ydCBjbGFzcyBTcHJrRm9ybWF0dGVyRGF0ZURpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgQEhvc3RMaXN0ZW5lcignaW5wdXQnLCBbJyRldmVudC50YXJnZXQudmFsdWUnXSlcbiAgb25Gb2N1cyh2YWx1ZSkge1xuICAgIHRoaXMucmVmLm5hdGl2ZUVsZW1lbnQudmFsdWUgPSB0aGlzLmZvcm1hdERhdGUodmFsdWUpO1xuICB9XG5cbiAgZm9ybWF0RGF0ZSh2YWx1ZSk6IHN0cmluZyB7XG4gICAgY29uc3QgbSA9IHZhbHVlLm1hdGNoKFxuICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxuICAgICAgL14oKCgwWzEzNTc4XXwxWzAyXSkoWy8tXT8pKDBbMS05XXxbMTJdXFxkfDNbMDFdKXwoMFs0NjldfDExKShbLy1dPykoMFsxLTldfFsxMl1cXGR8MzApfDAyKFsvLV0/KSgoMFsxLTldKXxbMTJdXFxkKSkoXFw0fFxcN3xcXDkpWzEyXVxcZHszfSk/JC9cbiAgICApO1xuXG4gICAgbGV0IG5ld1ZhbHVlID0gJyc7XG4gICAgY29uc3QgY2xlYW5WYWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1svLV0vZywgJycpO1xuXG4gICAgaWYgKG0pIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xlYW5WYWx1ZS5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoaSA9PT0gMSB8fCBpID09PSAzKSB7XG4gICAgICAgICAgbmV3VmFsdWUgKz0gYCR7Y2xlYW5WYWx1ZVtpXX0vYDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXdWYWx1ZSArPSBjbGVhblZhbHVlW2ldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3VmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==