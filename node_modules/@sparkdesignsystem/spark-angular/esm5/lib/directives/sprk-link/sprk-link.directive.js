import { __decorate, __metadata } from "tslib";
import { Directive, Input, HostBinding, Renderer2, ElementRef, OnInit } from '@angular/core';
var SprkLinkDirective = /** @class */ (function () {
    /**
     * @ignore
     */
    function SprkLinkDirective(renderer, el) {
        this.renderer = renderer;
        this.el = el;
    }
    SprkLinkDirective.prototype.ngOnInit = function () {
        if (this.variant !== 'unstyled') {
            this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link');
        }
        if (this.variant === 'simple' || this.variant === 'icon') {
            this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--simple');
        }
        if (this.variant === 'icon') {
            this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--has-icon');
        }
        if (this.variant === 'plain') {
            this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--plain');
        }
    };
    SprkLinkDirective.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkLinkDirective.prototype, "variant", void 0);
    __decorate([
        HostBinding('class.sprk-b-Link--disabled'),
        Input(),
        __metadata("design:type", Boolean)
    ], SprkLinkDirective.prototype, "isDisabled", void 0);
    __decorate([
        HostBinding('attr.data-analytics'),
        Input(),
        __metadata("design:type", String)
    ], SprkLinkDirective.prototype, "analyticsString", void 0);
    __decorate([
        HostBinding('attr.data-id'),
        Input(),
        __metadata("design:type", String)
    ], SprkLinkDirective.prototype, "idString", void 0);
    SprkLinkDirective = __decorate([
        Directive({
            selector: '[sprkLink]'
        }),
        __metadata("design:paramtypes", [Renderer2, ElementRef])
    ], SprkLinkDirective);
    return SprkLinkDirective;
}());
export { SprkLinkDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1saW5rLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFya2Rlc2lnbnN5c3RlbS9zcGFyay1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvc3Byay1saW5rL3NwcmstbGluay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFdBQVcsRUFDWCxTQUFTLEVBQ1QsVUFBVSxFQUNWLE1BQU0sRUFDUCxNQUFNLGVBQWUsQ0FBQztBQUt2QjtJQUNFOztPQUVHO0lBQ0gsMkJBQW9CLFFBQW1CLEVBQVUsRUFBYztRQUEzQyxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBQVUsT0FBRSxHQUFGLEVBQUUsQ0FBWTtJQUFJLENBQUM7SUFtQ3BFLG9DQUFRLEdBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssVUFBVSxFQUFFO1lBQy9CLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1NBQzlEO1FBQ0QsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLFFBQVEsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLE1BQU0sRUFBRTtZQUN4RCxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO1NBQ3RFO1FBQ0QsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLE1BQU0sRUFBRTtZQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1NBQ3hFO1FBQ0QsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLE9BQU8sRUFBRTtZQUM1QixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO1NBQ3JFO0lBQ0gsQ0FBQzs7Z0JBaEQ2QixTQUFTO2dCQUFjLFVBQVU7O0lBS3REO1FBQVIsS0FBSyxFQUFFOztzREFJSTtJQU1IO1FBRFIsV0FBVyxDQUFDLDZCQUE2QixDQUFDO1FBQzFDLEtBQUssRUFBRTs7eURBQXFCO0lBUXBCO1FBRFIsV0FBVyxDQUFDLHFCQUFxQixDQUFDO1FBQ2xDLEtBQUssRUFBRTs7OERBQXlCO0lBVXhCO1FBRFIsV0FBVyxDQUFDLGNBQWMsQ0FBQztRQUMzQixLQUFLLEVBQUU7O3VEQUFrQjtJQXJDZixpQkFBaUI7UUFIN0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFlBQVk7U0FDdkIsQ0FBQzt5Q0FLOEIsU0FBUyxFQUFjLFVBQVU7T0FKcEQsaUJBQWlCLENBc0Q3QjtJQUFELHdCQUFDO0NBQUEsQUF0REQsSUFzREM7U0F0RFksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBJbnB1dCxcbiAgSG9zdEJpbmRpbmcsXG4gIFJlbmRlcmVyMixcbiAgRWxlbWVudFJlZixcbiAgT25Jbml0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbc3Bya0xpbmtdJ1xufSlcbmV4cG9ydCBjbGFzcyBTcHJrTGlua0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHsgfVxuICAvKipcbiAgICogV2lsbCBjYXVzZSB0aGUgYXBwcm9wcmlhdGUgdmFyaWFudCB0eXBlIHRvIHJlbmRlci5cbiAgICogSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgU3BhcmsgTGluayBjbGFzcyBpcyBhcHBsaWVkLlxuICAgKi9cbiAgQElucHV0KCkgdmFyaWFudDpcbiAgICB8ICdzaW1wbGUnXG4gICAgfCAnaWNvbidcbiAgICB8ICd1bnN0eWxlZCdcbiAgICB8ICdwbGFpbic7XG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgd2lsbCBzZXQgZGlzYWJsZWQgc3R5bGVzIG9uIHRoZSBsaW5rLlxuICAgKi9cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zcHJrLWItTGluay0tZGlzYWJsZWQnKVxuICBASW5wdXQoKSBpc0Rpc2FibGVkOiBib29sZWFuO1xuICAvKipcbiAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWQgdG8gdGhlXG4gICAqIGBkYXRhLWFuYWx5dGljc2AgYXR0cmlidXRlIG9uIHRoZSBlbGVtZW50LlxuICAgKiBJbnRlbmRlZCBmb3IgYW4gb3V0c2lkZVxuICAgKiBsaWJyYXJ5IHRvIGNhcHR1cmUgZGF0YS5cbiAgICovXG4gIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLWFuYWx5dGljcycpXG4gIEBJbnB1dCgpIGFuYWx5dGljc1N0cmluZzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWRcbiAgICogdG8gdGhlIGBkYXRhLWlkYCBhdHRyaWJ1dGUgb24gdGhlXG4gICAqIGNvbXBvbmVudC4gVGhpcyBpcyBpbnRlbmRlZCB0byBiZVxuICAgKiB1c2VkIGFzIGEgc2VsZWN0b3IgZm9yIGF1dG9tYXRlZFxuICAgKiB0b29scy4gVGhpcyB2YWx1ZSBzaG91bGQgYmUgdW5pcXVlXG4gICAqIHBlciBwYWdlLlxuICAgKi9cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtaWQnKVxuICBASW5wdXQoKSBpZFN0cmluZzogc3RyaW5nO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnZhcmlhbnQgIT09ICd1bnN0eWxlZCcpIHtcbiAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnc3Byay1iLUxpbmsnKTtcbiAgICB9XG4gICAgaWYgKHRoaXMudmFyaWFudCA9PT0gJ3NpbXBsZScgfHwgdGhpcy52YXJpYW50ID09PSAnaWNvbicpIHtcbiAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnc3Byay1iLUxpbmstLXNpbXBsZScpO1xuICAgIH1cbiAgICBpZiAodGhpcy52YXJpYW50ID09PSAnaWNvbicpIHtcbiAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnc3Byay1iLUxpbmstLWhhcy1pY29uJyk7XG4gICAgfVxuICAgIGlmICh0aGlzLnZhcmlhbnQgPT09ICdwbGFpbicpIHtcbiAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnc3Byay1iLUxpbmstLXBsYWluJyk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==