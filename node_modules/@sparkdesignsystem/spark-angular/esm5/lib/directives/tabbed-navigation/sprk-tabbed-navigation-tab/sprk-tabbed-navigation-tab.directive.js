import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, Input, OnInit } from '@angular/core';
var SprkTabbedNavigationTabDirective = /** @class */ (function () {
    /**
     * @ignore
     */
    function SprkTabbedNavigationTabDirective(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    SprkTabbedNavigationTabDirective.prototype.getClasses = function () {
        var classArray = ['sprk-c-Tabs__button'];
        if (this.defaultActive) {
            classArray.push('sprk-c-Tabs__button--active');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray;
    };
    SprkTabbedNavigationTabDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.getClasses().forEach(function (item) {
            _this.ref.nativeElement.classList.add(item);
        });
        this.ref.nativeElement.setAttribute('role', 'tab');
        this.ref.nativeElement.setAttribute('aria-selected', this.defaultActive ? 'true' : 'false');
        if (this.analyticsString) {
            this.ref.nativeElement.setAttribute('data-analytics', this.analyticsString);
        }
    };
    SprkTabbedNavigationTabDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkTabbedNavigationTabDirective.prototype, "additionalClasses", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SprkTabbedNavigationTabDirective.prototype, "defaultActive", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkTabbedNavigationTabDirective.prototype, "analyticsString", void 0);
    SprkTabbedNavigationTabDirective = __decorate([
        Directive({
            selector: '[sprkTabbedNavigationTab]'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], SprkTabbedNavigationTabDirective);
    return SprkTabbedNavigationTabDirective;
}());
export { SprkTabbedNavigationTabDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay10YWJiZWQtbmF2aWdhdGlvbi10YWIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy90YWJiZWQtbmF2aWdhdGlvbi9zcHJrLXRhYmJlZC1uYXZpZ2F0aW9uLXRhYi9zcHJrLXRhYmJlZC1uYXZpZ2F0aW9uLXRhYi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFLckU7SUE0REU7O09BRUc7SUFDSCwwQ0FBbUIsR0FBZTtRQUFmLFFBQUcsR0FBSCxHQUFHLENBQVk7SUFBRyxDQUFDO0lBeEN0Qzs7T0FFRztJQUNILHFEQUFVLEdBQVY7UUFDRSxJQUFNLFVBQVUsR0FBYSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFFckQsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3RCLFVBQVUsQ0FBQyxJQUFJLENBQUMsNkJBQTZCLENBQUMsQ0FBQztTQUNoRDtRQUVELElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQzFCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUEsU0FBUztnQkFDakQsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM3QixDQUFDLENBQUMsQ0FBQztTQUNKO1FBRUQsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztJQUVELG1EQUFRLEdBQVI7UUFBQSxpQkFpQkM7UUFoQkMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7WUFDNUIsS0FBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QyxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUNqQyxlQUFlLEVBQ2YsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQ3RDLENBQUM7UUFFRixJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDeEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUNqQyxnQkFBZ0IsRUFDaEIsSUFBSSxDQUFDLGVBQWUsQ0FDckIsQ0FBQztTQUNIO0lBQ0gsQ0FBQzs7Z0JBSXVCLFVBQVU7O0lBeERsQztRQURDLEtBQUssRUFBRTs7K0VBQ2tCO0lBTTFCO1FBREMsS0FBSyxFQUFFOzsyRUFDZTtJQVF2QjtRQURDLEtBQUssRUFBRTs7NkVBQ2dCO0lBckJiLGdDQUFnQztRQUg1QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMkJBQTJCO1NBQ3RDLENBQUM7eUNBZ0V3QixVQUFVO09BL0R2QixnQ0FBZ0MsQ0FnRTVDO0lBQUQsdUNBQUM7Q0FBQSxBQWhFRCxJQWdFQztTQWhFWSxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3NwcmtUYWJiZWROYXZpZ2F0aW9uVGFiXSdcbn0pXG5leHBvcnQgY2xhc3MgU3Bya1RhYmJlZE5hdmlnYXRpb25UYWJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuIC8qKlxuICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgKiBlbGVtZW50LlxuICAqL1xuICBASW5wdXQoKVxuICBhZGRpdGlvbmFsQ2xhc3Nlczogc3RyaW5nO1xuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgVGFiIHdpbGwgaGF2ZVxuICAgKiBhY3RpdmUgc3R5bGVzIGFuZCBhcmlhIGF0dHJpYnV0ZXMgb24gcmVuZGVyLlxuICAgKi9cbiAgQElucHV0KClcbiAgZGVmYXVsdEFjdGl2ZTogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkIHRvIHRoZVxuICAgKiBgZGF0YS1hbmFseXRpY3NgIGF0dHJpYnV0ZSBvbiB0aGUgY29tcG9uZW50LlxuICAgKiBJbnRlbmRlZCBmb3IgYW4gb3V0c2lkZVxuICAgKiBsaWJyYXJ5IHRvIGNhcHR1cmUgZGF0YS5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGFuYWx5dGljc1N0cmluZzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBnZXRDbGFzc2VzKCk6IHN0cmluZ1tdIHtcbiAgICBjb25zdCBjbGFzc0FycmF5OiBzdHJpbmdbXSA9IFsnc3Byay1jLVRhYnNfX2J1dHRvbiddO1xuXG4gICAgaWYgKHRoaXMuZGVmYXVsdEFjdGl2ZSkge1xuICAgICAgY2xhc3NBcnJheS5wdXNoKCdzcHJrLWMtVGFic19fYnV0dG9uLS1hY3RpdmUnKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcykge1xuICAgICAgdGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKGNsYXNzTmFtZSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2xhc3NBcnJheTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuZ2V0Q2xhc3NlcygpLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICB0aGlzLnJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoaXRlbSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnJlZi5uYXRpdmVFbGVtZW50LnNldEF0dHJpYnV0ZSgncm9sZScsICd0YWInKTtcbiAgICB0aGlzLnJlZi5uYXRpdmVFbGVtZW50LnNldEF0dHJpYnV0ZShcbiAgICAgICdhcmlhLXNlbGVjdGVkJyxcbiAgICAgIHRoaXMuZGVmYXVsdEFjdGl2ZSA/ICd0cnVlJyA6ICdmYWxzZSdcbiAgICApO1xuXG4gICAgaWYgKHRoaXMuYW5hbHl0aWNzU3RyaW5nKSB7XG4gICAgICB0aGlzLnJlZi5uYXRpdmVFbGVtZW50LnNldEF0dHJpYnV0ZShcbiAgICAgICAgJ2RhdGEtYW5hbHl0aWNzJyxcbiAgICAgICAgdGhpcy5hbmFseXRpY3NTdHJpbmdcbiAgICAgICk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVmOiBFbGVtZW50UmVmKSB7fVxufVxuIl19