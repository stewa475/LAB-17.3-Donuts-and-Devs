import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, Input, OnInit } from '@angular/core';
var SprkTableEmptyHeadingDirective = /** @class */ (function () {
    /**
     * @ignore
     */
    function SprkTableEmptyHeadingDirective(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    SprkTableEmptyHeadingDirective.prototype.getClasses = function () {
        var classArray = ['sprk-b-Table__empty-heading'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(function (className) {
                classArray.push(className);
            });
        }
        return classArray;
    };
    SprkTableEmptyHeadingDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.getClasses().forEach(function (className) {
            _this.ref.nativeElement.classList.add(className);
        });
    };
    SprkTableEmptyHeadingDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SprkTableEmptyHeadingDirective.prototype, "additionalClasses", void 0);
    SprkTableEmptyHeadingDirective = __decorate([
        Directive({
            selector: '[sprkTableEmptyHeading]'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], SprkTableEmptyHeadingDirective);
    return SprkTableEmptyHeadingDirective;
}());
export { SprkTableEmptyHeadingDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay10YWJsZS1lbXB0eS1oZWFkaW5nLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFya2Rlc2lnbnN5c3RlbS9zcGFyay1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvc3Byay10YWJsZS1lbXB0eS1oZWFkaW5nL3NwcmstdGFibGUtZW1wdHktaGVhZGluZy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFLckU7SUE0QkU7O09BRUc7SUFDSCx3Q0FBbUIsR0FBZTtRQUFmLFFBQUcsR0FBSCxHQUFHLENBQVk7SUFBRyxDQUFDO0lBdEJ0Qzs7T0FFRztJQUNILG1EQUFVLEdBQVY7UUFDRSxJQUFNLFVBQVUsR0FBRyxDQUFDLDZCQUE2QixDQUFDLENBQUM7UUFDbkQsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxTQUFTO2dCQUNqRCxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBRUQsaURBQVEsR0FBUjtRQUFBLGlCQUlDO1FBSEMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxVQUFBLFNBQVM7WUFDakMsS0FBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNsRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7O2dCQUt1QixVQUFVOztJQXhCbEM7UUFEQyxLQUFLLEVBQUU7OzZFQUNrQjtJQVBmLDhCQUE4QjtRQUgxQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUseUJBQXlCO1NBQ3BDLENBQUM7eUNBZ0N3QixVQUFVO09BL0J2Qiw4QkFBOEIsQ0FnQzFDO0lBQUQscUNBQUM7Q0FBQSxBQWhDRCxJQWdDQztTQWhDWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3NwcmtUYWJsZUVtcHR5SGVhZGluZ10nXG59KVxuZXhwb3J0IGNsYXNzIFNwcmtUYWJsZUVtcHR5SGVhZGluZ0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgKiBlbGVtZW50LlxuICAgKi9cbiAgQElucHV0KClcbiAgYWRkaXRpb25hbENsYXNzZXM6IHN0cmluZztcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpOiBzdHJpbmdbXSB7XG4gICAgY29uc3QgY2xhc3NBcnJheSA9IFsnc3Byay1iLVRhYmxlX19lbXB0eS1oZWFkaW5nJ107XG4gICAgaWYgKHRoaXMuYWRkaXRpb25hbENsYXNzZXMpIHtcbiAgICAgIHRoaXMuYWRkaXRpb25hbENsYXNzZXMuc3BsaXQoJyAnKS5mb3JFYWNoKGNsYXNzTmFtZSA9PiB7XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaChjbGFzc05hbWUpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBjbGFzc0FycmF5O1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5nZXRDbGFzc2VzKCkuZm9yRWFjaChjbGFzc05hbWUgPT4ge1xuICAgICAgdGhpcy5yZWYubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY29uc3RydWN0b3IocHVibGljIHJlZjogRWxlbWVudFJlZikge31cbn1cbiJdfQ==