import { __decorate, __metadata } from "tslib";
import { Component, ContentChild, Input } from '@angular/core';
import * as _ from 'lodash';
import { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';
import { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';
import { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';
let SprkTextareaContainerComponent = class SprkTextareaContainerComponent {
    constructor() {
        /**
         * @ignore
         */
        this.id = _.uniqueId();
        /**
         * @ignore
         */
        this.input_id = `input_${this.id}`;
        /**
         * @ignore
         */
        this.error_id = `error_${this.id}`;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-b-InputContainer',
            'sprk-b-InputContainer--textarea'
        ];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    ngOnInit() {
        if (this.label && this.input) {
            this.label.ref.nativeElement.setAttribute('for', this.input_id);
            this.input.ref.nativeElement.id = this.input_id;
        }
        if (this.input && this.error) {
            this.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            this.error.ref.nativeElement.id = this.error_id;
        }
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTextareaContainerComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTextareaContainerComponent.prototype, "iconContainerClasses", void 0);
__decorate([
    ContentChild(SprkLabelDirective, { static: true }),
    __metadata("design:type", SprkLabelDirective)
], SprkTextareaContainerComponent.prototype, "label", void 0);
__decorate([
    ContentChild(SprkInputDirective, { static: true }),
    __metadata("design:type", SprkInputDirective)
], SprkTextareaContainerComponent.prototype, "input", void 0);
__decorate([
    ContentChild(SprkFieldErrorDirective, { static: true }),
    __metadata("design:type", SprkFieldErrorDirective)
], SprkTextareaContainerComponent.prototype, "error", void 0);
SprkTextareaContainerComponent = __decorate([
    Component({
        selector: 'sprk-textarea-container',
        template: `
    <div [ngClass]="getClasses()">
      <ng-content select="[sprkLabel]"></ng-content>
      <ng-content select="[sprkInput]"></ng-content>
      <ng-content select="sprk-selection-item-container"></ng-content>
      <ng-content select="[sprkHelperText]"></ng-content>
      <ng-content select="[sprkFieldError]"></ng-content>
    </div>
  `
    })
], SprkTextareaContainerComponent);
export { SprkTextareaContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay10ZXh0YXJlYS1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9pbnB1dHMvc3Byay10ZXh0YXJlYS1jb250YWluZXIvc3Byay10ZXh0YXJlYS1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxLQUFLLENBQUMsTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0VBQXdFLENBQUM7QUFDakgsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFDaEcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFjaEcsSUFBYSw4QkFBOEIsR0FBM0MsTUFBYSw4QkFBOEI7SUFBM0M7UUFrQ0U7O1dBRUc7UUFDSCxPQUFFLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2xCOztXQUVHO1FBQ0gsYUFBUSxHQUFHLFNBQVMsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQzlCOztXQUVHO1FBQ0gsYUFBUSxHQUFHLFNBQVMsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO0lBaUNoQyxDQUFDO0lBL0JDOztPQUVHO0lBQ0gsVUFBVTtRQUNSLE1BQU0sVUFBVSxHQUFhO1lBQzNCLHVCQUF1QjtZQUN2QixpQ0FBaUM7U0FDbEMsQ0FBQztRQUVGLElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQzFCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFO2dCQUNwRCxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDaEUsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ2pEO1FBQ0QsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FDdkMsa0JBQWtCLEVBQ2xCLElBQUksQ0FBQyxRQUFRLENBQ2QsQ0FBQztZQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUNqRDtJQUNILENBQUM7Q0FDRixDQUFBO0FBdkVDO0lBREMsS0FBSyxFQUFFOzt5RUFDa0I7QUFPMUI7SUFEQyxLQUFLLEVBQUU7OzRFQUNxQjtBQU03QjtJQURDLFlBQVksQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs4QkFDNUMsa0JBQWtCOzZEQUFDO0FBTTFCO0lBREMsWUFBWSxDQUFDLGtCQUFrQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDOzhCQUM1QyxrQkFBa0I7NkRBQUM7QUFNMUI7SUFEQyxZQUFZLENBQUMsdUJBQXVCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7OEJBQ2pELHVCQUF1Qjs2REFBQztBQWhDcEIsOEJBQThCO0lBWjFDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSx5QkFBeUI7UUFDbkMsUUFBUSxFQUFFOzs7Ozs7OztHQVFUO0tBQ0YsQ0FBQztHQUNXLDhCQUE4QixDQThFMUM7U0E5RVksOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDb250ZW50Q2hpbGQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9pbnB1dHMvc3Byay1maWVsZC1lcnJvci9zcHJrLWZpZWxkLWVycm9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTcHJrSW5wdXREaXJlY3RpdmUgfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2lucHV0cy9zcHJrLWlucHV0L3NwcmstaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFNwcmtMYWJlbERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaW5wdXRzL3NwcmstbGFiZWwvc3Byay1sYWJlbC5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzcHJrLXRleHRhcmVhLWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBbbmdDbGFzc109XCJnZXRDbGFzc2VzKClcIj5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrTGFiZWxdXCI+PC9uZy1jb250ZW50PlxuICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3NwcmtJbnB1dF1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJzcHJrLXNlbGVjdGlvbi1pdGVtLWNvbnRhaW5lclwiPjwvbmctY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrSGVscGVyVGV4dF1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbc3Bya0ZpZWxkRXJyb3JdXCI+PC9uZy1jb250ZW50PlxuICAgIDwvZGl2PlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFNwcmtUZXh0YXJlYUNvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgKiBjb21wb25lbnQuXG4gICAqL1xuICBASW5wdXQoKVxuICBhZGRpdGlvbmFsQ2xhc3Nlczogc3RyaW5nO1xuICAvKipcbiAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICogaWNvbiBjb250YWluZXIuXG4gICAqL1xuICBASW5wdXQoKVxuICBpY29uQ29udGFpbmVyQ2xhc3Nlczogc3RyaW5nO1xuICAvKipcbiAgICogVGhpcyBjb21wb25lbnQgZXhwZWN0cyBhIGNoaWxkIGxhYmVsIGVsZW1lbnRcbiAgICogd2l0aCB0aGUgYHNwcmtMYWJlbGAgZGlyZWN0aXZlLlxuICAgKi9cbiAgQENvbnRlbnRDaGlsZChTcHJrTGFiZWxEaXJlY3RpdmUsIHsgc3RhdGljOiB0cnVlIH0pXG4gIGxhYmVsOiBTcHJrTGFiZWxEaXJlY3RpdmU7XG4gIC8qKlxuICAgKiBUaGlzIGNvbXBvbmVudCBleHBlY3RzIGEgY2hpbGQgaW5wdXQgZWxlbWVudFxuICAgKiB3aXRoIHRoZSBgc3Bya0lucHV0YCBkaXJlY3RpdmUuXG4gICAqL1xuICBAQ29udGVudENoaWxkKFNwcmtJbnB1dERpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgaW5wdXQ6IFNwcmtJbnB1dERpcmVjdGl2ZTtcbiAgLyoqXG4gICAqIFRoaXMgY29tcG9uZW50IGV4cGVjdHMgYSBjaGlsZCBlbGVtZW50XG4gICAqIHdpdGggdGhlIGBzcHJrRmllbGRFcnJvcmAgZGlyZWN0aXZlLlxuICAgKi9cbiAgQENvbnRlbnRDaGlsZChTcHJrRmllbGRFcnJvckRpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgZXJyb3I6IFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBpZCA9IF8udW5pcXVlSWQoKTtcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGlucHV0X2lkID0gYGlucHV0XyR7dGhpcy5pZH1gO1xuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZXJyb3JfaWQgPSBgZXJyb3JfJHt0aGlzLmlkfWA7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGdldENsYXNzZXMoKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc0FycmF5OiBzdHJpbmdbXSA9IFtcbiAgICAgICdzcHJrLWItSW5wdXRDb250YWluZXInLFxuICAgICAgJ3NwcmstYi1JbnB1dENvbnRhaW5lci0tdGV4dGFyZWEnXG4gICAgXTtcblxuICAgIGlmICh0aGlzLmFkZGl0aW9uYWxDbGFzc2VzKSB7XG4gICAgICB0aGlzLmFkZGl0aW9uYWxDbGFzc2VzLnNwbGl0KCcgJykuZm9yRWFjaChjbGFzc05hbWUgPT4ge1xuICAgICAgICBjbGFzc0FycmF5LnB1c2goY2xhc3NOYW1lKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBjbGFzc0FycmF5LmpvaW4oJyAnKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmxhYmVsICYmIHRoaXMuaW5wdXQpIHtcbiAgICAgIHRoaXMubGFiZWwucmVmLm5hdGl2ZUVsZW1lbnQuc2V0QXR0cmlidXRlKCdmb3InLCB0aGlzLmlucHV0X2lkKTtcbiAgICAgIHRoaXMuaW5wdXQucmVmLm5hdGl2ZUVsZW1lbnQuaWQgPSB0aGlzLmlucHV0X2lkO1xuICAgIH1cbiAgICBpZiAodGhpcy5pbnB1dCAmJiB0aGlzLmVycm9yKSB7XG4gICAgICB0aGlzLmlucHV0LnJlZi5uYXRpdmVFbGVtZW50LnNldEF0dHJpYnV0ZShcbiAgICAgICAgJ2FyaWEtZGVzY3JpYmVkYnknLFxuICAgICAgICB0aGlzLmVycm9yX2lkXG4gICAgICApO1xuICAgICAgdGhpcy5lcnJvci5yZWYubmF0aXZlRWxlbWVudC5pZCA9IHRoaXMuZXJyb3JfaWQ7XG4gICAgfVxuICB9XG59XG4iXX0=