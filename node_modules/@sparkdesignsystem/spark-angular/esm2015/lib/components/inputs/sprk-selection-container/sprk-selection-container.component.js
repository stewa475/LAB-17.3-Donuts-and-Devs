import { __decorate, __metadata } from "tslib";
import { Component, ContentChild, ContentChildren, Input, QueryList } from '@angular/core';
import * as _ from 'lodash';
import { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';
import { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';
import { SprkSelectionItemContainerComponent } from '../sprk-selection-item-container/sprk-selection-item-container.component';
let SprkSelectionContainerComponent = class SprkSelectionContainerComponent {
    constructor() {
        /**
         * @ignore
         */
        this.id = _.uniqueId();
        /**
         * @ignore
         */
        this.error_id = `error_${this.id}`;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-InputContainer'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    ngAfterContentInit() {
        if (this.selectionItems && this.error) {
            this.selectionItems.forEach(item => {
                item.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            });
            this.error.ref.nativeElement.id = this.error_id;
        }
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkSelectionContainerComponent.prototype, "additionalClasses", void 0);
__decorate([
    ContentChild(SprkLabelDirective, { static: false }),
    __metadata("design:type", SprkLabelDirective)
], SprkSelectionContainerComponent.prototype, "label", void 0);
__decorate([
    ContentChild(SprkFieldErrorDirective, { static: false }),
    __metadata("design:type", SprkFieldErrorDirective)
], SprkSelectionContainerComponent.prototype, "error", void 0);
__decorate([
    ContentChildren(SprkSelectionItemContainerComponent),
    __metadata("design:type", QueryList)
], SprkSelectionContainerComponent.prototype, "selectionItems", void 0);
SprkSelectionContainerComponent = __decorate([
    Component({
        selector: 'sprk-selection-container',
        template: `
    <div [ngClass]="getClasses()">
      <fieldset class="sprk-b-Fieldset">
        <legend class="sprk-b-Legend">
          <ng-content select="[sprkLabel]"></ng-content>
        </legend>
        <ng-content select="sprk-selection-item-container"></ng-content>
      </fieldset>
      <ng-content select="[sprkHelperText]"></ng-content>
      <ng-content select="[sprkFieldError]"></ng-content>
      <ng-content></ng-content>
    </div>
  `
    })
], SprkSelectionContainerComponent);
export { SprkSelectionContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1zZWxlY3Rpb24tY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFya2Rlc2lnbnN5c3RlbS9zcGFyay1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvaW5wdXRzL3Nwcmstc2VsZWN0aW9uLWNvbnRhaW5lci9zcHJrLXNlbGVjdGlvbi1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBRUwsU0FBUyxFQUNULFlBQVksRUFDWixlQUFlLEVBQ2YsS0FBSyxFQUNMLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEtBQUssQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUM1QixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3RUFBd0UsQ0FBQztBQUNqSCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUNoRyxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSwwRUFBMEUsQ0FBQztBQWtCL0gsSUFBYSwrQkFBK0IsR0FBNUMsTUFBYSwrQkFBK0I7SUFBNUM7UUE0QkU7O1dBRUc7UUFDSCxPQUFFLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2xCOztXQUVHO1FBQ0gsYUFBUSxHQUFHLFNBQVMsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO0lBOEJoQyxDQUFDO0lBNUJDOztPQUVHO0lBQ0gsVUFBVTtRQUNSLE1BQU0sVUFBVSxHQUFhLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUV2RCxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMxQixJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBRTtnQkFDcEQsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM3QixDQUFDLENBQUMsQ0FBQztTQUNKO1FBRUQsT0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFDRDs7T0FFRztJQUNILGtCQUFrQjtRQUNoQixJQUFJLElBQUksQ0FBQyxjQUFjLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNyQyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDakMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FDdkMsa0JBQWtCLEVBQ2xCLElBQUksQ0FBQyxRQUFRLENBQ2QsQ0FBQztZQUNKLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ2pEO0lBQ0gsQ0FBQztDQUNGLENBQUE7QUExREM7SUFEQyxLQUFLLEVBQUU7OzBFQUNrQjtBQU8xQjtJQURDLFlBQVksQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQzs4QkFDN0Msa0JBQWtCOzhEQUFDO0FBTTFCO0lBREMsWUFBWSxDQUFDLHVCQUF1QixFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDOzhCQUNsRCx1QkFBdUI7OERBQUM7QUFNL0I7SUFEQyxlQUFlLENBQUMsbUNBQW1DLENBQUM7OEJBQ3JDLFNBQVM7dUVBQXNDO0FBMUJwRCwrQkFBK0I7SUFoQjNDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSwwQkFBMEI7UUFDcEMsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7R0FZVDtLQUNGLENBQUM7R0FDVywrQkFBK0IsQ0FpRTNDO1NBakVZLCtCQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyQ29udGVudEluaXQsXG4gIENvbXBvbmVudCxcbiAgQ29udGVudENoaWxkLFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIElucHV0LFxuICBRdWVyeUxpc3Rcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBTcHJrRmllbGRFcnJvckRpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaW5wdXRzL3NwcmstZmllbGQtZXJyb3Ivc3Byay1maWVsZC1lcnJvci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU3Bya0xhYmVsRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9pbnB1dHMvc3Byay1sYWJlbC9zcHJrLWxhYmVsLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTcHJrU2VsZWN0aW9uSXRlbUNvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gJy4uL3Nwcmstc2VsZWN0aW9uLWl0ZW0tY29udGFpbmVyL3Nwcmstc2VsZWN0aW9uLWl0ZW0tY29udGFpbmVyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Nwcmstc2VsZWN0aW9uLWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBbbmdDbGFzc109XCJnZXRDbGFzc2VzKClcIj5cbiAgICAgIDxmaWVsZHNldCBjbGFzcz1cInNwcmstYi1GaWVsZHNldFwiPlxuICAgICAgICA8bGVnZW5kIGNsYXNzPVwic3Byay1iLUxlZ2VuZFwiPlxuICAgICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrTGFiZWxdXCI+PC9uZy1jb250ZW50PlxuICAgICAgICA8L2xlZ2VuZD5cbiAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwic3Byay1zZWxlY3Rpb24taXRlbS1jb250YWluZXJcIj48L25nLWNvbnRlbnQ+XG4gICAgICA8L2ZpZWxkc2V0PlxuICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3NwcmtIZWxwZXJUZXh0XVwiPjwvbmctY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzcHJrRmllbGRFcnJvcl1cIj48L25nLWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgU3Bya1NlbGVjdGlvbkNvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICAvKipcbiAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICogY29tcG9uZW50LlxuICAgKi9cbiAgQElucHV0KClcbiAgYWRkaXRpb25hbENsYXNzZXM6IHN0cmluZztcblxuICAvKipcbiAgICogVGhpcyBjb21wb25lbnQgZXhwZWN0cyBhIGNoaWxkIGxhYmVsIGVsZW1lbnRcbiAgICogd2l0aCB0aGUgYHNwcmtMYWJlbGAgZGlyZWN0aXZlLlxuICAgKi9cbiAgQENvbnRlbnRDaGlsZChTcHJrTGFiZWxEaXJlY3RpdmUsIHsgc3RhdGljOiBmYWxzZSB9KVxuICBsYWJlbDogU3Bya0xhYmVsRGlyZWN0aXZlO1xuICAvKipcbiAgICogVGhpcyBjb21wb25lbnQgZXhwZWN0cyBhIGNoaWxkIGVsZW1lbnRcbiAgICogd2l0aCB0aGUgYHNwcmtGaWVsZEVycm9yYCBkaXJlY3RpdmUuXG4gICAqL1xuICBAQ29udGVudENoaWxkKFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgZXJyb3I6IFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlO1xuICAvKipcbiAgICogVGhpcyBjb21wb25lbnQgZXhwZWN0cyBhIGNoaWxkXG4gICAqIGA8c3Byay1zZWxlY3Rpb24taXRlbS1jb250YWluZXI+YCBjb21wb25lbnQuXG4gICAqL1xuICBAQ29udGVudENoaWxkcmVuKFNwcmtTZWxlY3Rpb25JdGVtQ29udGFpbmVyQ29tcG9uZW50KVxuICBzZWxlY3Rpb25JdGVtczogUXVlcnlMaXN0PFNwcmtTZWxlY3Rpb25JdGVtQ29udGFpbmVyQ29tcG9uZW50PjtcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgaWQgPSBfLnVuaXF1ZUlkKCk7XG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBlcnJvcl9pZCA9IGBlcnJvcl8ke3RoaXMuaWR9YDtcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzQXJyYXk6IHN0cmluZ1tdID0gWydzcHJrLWItSW5wdXRDb250YWluZXInXTtcblxuICAgIGlmICh0aGlzLmFkZGl0aW9uYWxDbGFzc2VzKSB7XG4gICAgICB0aGlzLmFkZGl0aW9uYWxDbGFzc2VzLnNwbGl0KCcgJykuZm9yRWFjaChjbGFzc05hbWUgPT4ge1xuICAgICAgICBjbGFzc0FycmF5LnB1c2goY2xhc3NOYW1lKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBjbGFzc0FycmF5LmpvaW4oJyAnKTtcbiAgfVxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnNlbGVjdGlvbkl0ZW1zICYmIHRoaXMuZXJyb3IpIHtcbiAgICAgIHRoaXMuc2VsZWN0aW9uSXRlbXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgaXRlbS5pbnB1dC5yZWYubmF0aXZlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXG4gICAgICAgICAgJ2FyaWEtZGVzY3JpYmVkYnknLFxuICAgICAgICAgIHRoaXMuZXJyb3JfaWRcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5lcnJvci5yZWYubmF0aXZlRWxlbWVudC5pZCA9IHRoaXMuZXJyb3JfaWQ7XG4gICAgfVxuICB9XG59XG4iXX0=