import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
let SprkStackComponent = class SprkStackComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-o-Stack'];
        // Handle the choice of item split breakpoint by adding CSS class
        switch (this.splitAt) {
            case 'tiny':
                classArray.push('sprk-o-Stack--split@xs');
                break;
            case 'small':
                classArray.push('sprk-o-Stack--split@s');
                break;
            case 'medium':
                classArray.push('sprk-o-Stack--split@m');
                break;
            case 'large':
                classArray.push('sprk-o-Stack--split@l');
                break;
            case 'huge':
                classArray.push('sprk-o-Stack--split@xl');
                break;
            default:
                break;
        }
        // Handle the choice of item spacing by adding CSS class
        switch (this.itemSpacing) {
            case 'tiny':
                classArray.push('sprk-o-Stack--tiny');
                break;
            case 'small':
                classArray.push('sprk-o-Stack--small');
                break;
            case 'medium':
                classArray.push('sprk-o-Stack--medium');
                break;
            case 'large':
                classArray.push('sprk-o-Stack--large');
                break;
            case 'huge':
                classArray.push('sprk-o-Stack--huge');
                break;
            default:
                break;
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkStackComponent.prototype, "splitAt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkStackComponent.prototype, "itemSpacing", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkStackComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkStackComponent.prototype, "additionalClasses", void 0);
SprkStackComponent = __decorate([
    Component({
        selector: 'sprk-stack',
        template: `
    <div [ngClass]="getClasses()" [attr.data-analytics]="analyticsString">
      <ng-content></ng-content>
    </div>
  `
    })
], SprkStackComponent);
export { SprkStackComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1zdGFjay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcmtkZXNpZ25zeXN0ZW0vc3BhcmstYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3Nwcmstc3RhY2svc3Byay1zdGFjay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBVWpELElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQWtCO0lBK0I3Qjs7T0FFRztJQUNILFVBQVU7UUFDUixNQUFNLFVBQVUsR0FBYSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRTlDLGlFQUFpRTtRQUNqRSxRQUFRLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDcEIsS0FBSyxNQUFNO2dCQUNULFVBQVUsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQztnQkFDMUMsTUFBTTtZQUNSLEtBQUssT0FBTztnQkFDVixVQUFVLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUM7Z0JBQ3pDLE1BQU07WUFDUixLQUFLLFFBQVE7Z0JBQ1gsVUFBVSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO2dCQUN6QyxNQUFNO1lBQ1IsS0FBSyxPQUFPO2dCQUNWLFVBQVUsQ0FBQyxJQUFJLENBQUMsdUJBQXVCLENBQUMsQ0FBQztnQkFDekMsTUFBTTtZQUNSLEtBQUssTUFBTTtnQkFDVCxVQUFVLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUM7Z0JBQzFDLE1BQU07WUFDUjtnQkFDRSxNQUFNO1NBQ1Q7UUFFRCx3REFBd0Q7UUFDeEQsUUFBUSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3hCLEtBQUssTUFBTTtnQkFDVCxVQUFVLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7Z0JBQ3RDLE1BQU07WUFDUixLQUFLLE9BQU87Z0JBQ1YsVUFBVSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO2dCQUN2QyxNQUFNO1lBQ1IsS0FBSyxRQUFRO2dCQUNYLFVBQVUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztnQkFDeEMsTUFBTTtZQUNSLEtBQUssT0FBTztnQkFDVixVQUFVLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7Z0JBQ3ZDLE1BQU07WUFDUixLQUFLLE1BQU07Z0JBQ1QsVUFBVSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO2dCQUN0QyxNQUFNO1lBQ1I7Z0JBQ0UsTUFBTTtTQUNUO1FBRUQsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ3BELFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDO0NBQ0YsQ0FBQTtBQWhGQztJQURDLEtBQUssRUFBRTs7bURBQ1E7QUFPaEI7SUFEQyxLQUFLLEVBQUU7O3VEQUNZO0FBUXBCO0lBREMsS0FBSyxFQUFFOzsyREFDZ0I7QUFPeEI7SUFEQyxLQUFLLEVBQUU7OzZEQUNrQjtBQTdCZixrQkFBa0I7SUFSOUIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLFlBQVk7UUFDdEIsUUFBUSxFQUFFOzs7O0dBSVQ7S0FDRixDQUFDO0dBQ1csa0JBQWtCLENBdUY5QjtTQXZGWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Nwcmstc3RhY2snLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgW25nQ2xhc3NdPVwiZ2V0Q2xhc3NlcygpXCIgW2F0dHIuZGF0YS1hbmFseXRpY3NdPVwiYW5hbHl0aWNzU3RyaW5nXCI+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgU3Bya1N0YWNrQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBzdXBwbGllZCBjYW4gYmUgYHRpbnlgLCBgc21hbGxgLCBgbWVkaXVtYCwgYGxhcmdlYCwgb3IgYGh1Z2VgLlxuICAgKiBUaGlzIGlzIHVzZWQgYXMgdGhlIGJyZWFrcG9pbnQgYXQgd2hpY2ggdGhlIGNvbXBvbmVudFxuICAgKiBtb3ZlcyBvciBcInNwbGl0c1wiIHRvIGEgc2lkZSBieSBzaWRlIGxheW91dC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIHNwbGl0QXQ6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoaXMgaXMgdXNlZCBhcyB0aGUgYW1vdW50IG9mIHNwYWNpbmdcbiAgICogYmV0d2VlbiB0aGUgY2hpbGQgYHNwcmtTdGFja0l0ZW1gIGl0ZW1zLlxuICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgY2FuIGJlIGB0aW55YCwgYHNtYWxsYCwgYG1lZGl1bWAsIGBsYXJnZWAsIG9yIGBodWdlYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGl0ZW1TcGFjaW5nOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZCB0byB0aGVcbiAgICogYGRhdGEtYW5hbHl0aWNzYCBhdHRyaWJ1dGUgb24gdGhlIGNvbXBvbmVudC5cbiAgICogSW50ZW5kZWQgZm9yIGFuIG91dHNpZGVcbiAgICogbGlicmFyeSB0byBjYXB0dXJlIGRhdGEuXG4gICAqL1xuICBASW5wdXQoKVxuICBhbmFseXRpY3NTdHJpbmc6IHN0cmluZztcbiAgLyoqXG4gICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAqIGNvbXBvbmVudC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGdldENsYXNzZXMoKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc0FycmF5OiBzdHJpbmdbXSA9IFsnc3Byay1vLVN0YWNrJ107XG5cbiAgICAvLyBIYW5kbGUgdGhlIGNob2ljZSBvZiBpdGVtIHNwbGl0IGJyZWFrcG9pbnQgYnkgYWRkaW5nIENTUyBjbGFzc1xuICAgIHN3aXRjaCAodGhpcy5zcGxpdEF0KSB7XG4gICAgICBjYXNlICd0aW55JzpcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKCdzcHJrLW8tU3RhY2stLXNwbGl0QHhzJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc21hbGwnOlxuICAgICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1TdGFjay0tc3BsaXRAcycpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21lZGl1bSc6XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLVN0YWNrLS1zcGxpdEBtJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbGFyZ2UnOlxuICAgICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1TdGFjay0tc3BsaXRAbCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2h1Z2UnOlxuICAgICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1TdGFjay0tc3BsaXRAeGwnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgdGhlIGNob2ljZSBvZiBpdGVtIHNwYWNpbmcgYnkgYWRkaW5nIENTUyBjbGFzc1xuICAgIHN3aXRjaCAodGhpcy5pdGVtU3BhY2luZykge1xuICAgICAgY2FzZSAndGlueSc6XG4gICAgICAgIGNsYXNzQXJyYXkucHVzaCgnc3Byay1vLVN0YWNrLS10aW55Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc21hbGwnOlxuICAgICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1TdGFjay0tc21hbGwnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtZWRpdW0nOlxuICAgICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1TdGFjay0tbWVkaXVtJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbGFyZ2UnOlxuICAgICAgICBjbGFzc0FycmF5LnB1c2goJ3Nwcmstby1TdGFjay0tbGFyZ2UnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdodWdlJzpcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKCdzcHJrLW8tU3RhY2stLWh1Z2UnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpZiAodGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcykge1xuICAgICAgdGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKGNsYXNzTmFtZSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2xhc3NBcnJheS5qb2luKCcgJyk7XG4gIH1cbn1cbiJdfQ==