import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
let SprkDividerComponent = class SprkDividerComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Divider'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDividerComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDividerComponent.prototype, "idString", void 0);
SprkDividerComponent = __decorate([
    Component({
        selector: 'sprk-divider',
        template: `
    <span [ngClass]="getClasses()" [attr.data-id]="idString"> </span>
  `
    })
], SprkDividerComponent);
export { SprkDividerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1kaXZpZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFya2Rlc2lnbnN5c3RlbS9zcGFyay1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvc3Byay1kaXZpZGVyL3NwcmstZGl2aWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUWpELElBQWEsb0JBQW9CLEdBQWpDLE1BQWEsb0JBQW9CO0lBbUIvQjs7T0FFRztJQUNILFVBQVU7UUFDUixNQUFNLFVBQVUsR0FBYSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFaEQsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ3BELFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDO0NBQ0YsQ0FBQTtBQTFCQztJQURDLEtBQUssRUFBRTs7K0RBQ2tCO0FBVTFCO0lBREMsS0FBSyxFQUFFOztzREFDUztBQWpCTixvQkFBb0I7SUFOaEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGNBQWM7UUFDeEIsUUFBUSxFQUFFOztHQUVUO0tBQ0YsQ0FBQztHQUNXLG9CQUFvQixDQWlDaEM7U0FqQ1ksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzcHJrLWRpdmlkZXInLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzcGFuIFtuZ0NsYXNzXT1cImdldENsYXNzZXMoKVwiIFthdHRyLmRhdGEtaWRdPVwiaWRTdHJpbmdcIj4gPC9zcGFuPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFNwcmtEaXZpZGVyQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAqIGNvbXBvbmVudC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZFxuICAgKiB0byB0aGUgYGRhdGEtaWRgIGF0dHJpYnV0ZSBvbiB0aGVcbiAgICogY29tcG9uZW50LiBUaGlzIGlzIGludGVuZGVkIHRvIGJlXG4gICAqIHVzZWQgYXMgYSBzZWxlY3RvciBmb3IgYXV0b21hdGVkXG4gICAqIHRvb2xzLiBUaGlzIHZhbHVlIHNob3VsZCBiZSB1bmlxdWVcbiAgICogcGVyIHBhZ2UuXG4gICAqL1xuICBASW5wdXQoKVxuICBpZFN0cmluZzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBnZXRDbGFzc2VzKCk6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NBcnJheTogc3RyaW5nW10gPSBbJ3NwcmstYy1EaXZpZGVyJ107XG5cbiAgICBpZiAodGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcykge1xuICAgICAgdGhpcy5hZGRpdGlvbmFsQ2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgY2xhc3NBcnJheS5wdXNoKGNsYXNzTmFtZSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2xhc3NBcnJheS5qb2luKCcgJyk7XG4gIH1cbn1cbiJdfQ==