import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
let SprkCardComponent = class SprkCardComponent {
    constructor() {
        /**
         * The type of Card variant to render.
         * The available values are `base`, `teaser`, and `teaserHeading`.
         */
        this.cardType = 'base';
        /**
         * Determines which type of call to action is rendered.
         * The available values are `link` and `button`.
         */
        this.ctaType = 'link';
    }
    /**
     * @ignore
     */
    getClassesCta() {
        const ctaClassArray = [];
        if (this.ctaType === 'button') {
            ctaClassArray.push('sprk-c-Button');
        }
        else {
            ctaClassArray.push('sprk-b-Link');
            if (this.ctaIcon) {
                ctaClassArray.push('sprk-b-Link--simple');
                ctaClassArray.push('sprk-b-Link--has-icon');
            }
        }
        if (this.additionalCtaClasses) {
            this.additionalCtaClasses.split(' ').forEach(className => {
                ctaClassArray.push(className);
            });
        }
        return ctaClassArray.join(' ');
    }
    /**
     * @ignore
     */
    getClassesCard() {
        const classArray = ['sprk-c-Card', 'sprk-o-Stack'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "cardType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "body", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "media", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "additionalClassesIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "imgSrc", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "imgAlt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "iconType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "iconHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "imgHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaText", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "imgLinkAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "iconLinkAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "additionalCtaClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "idString", void 0);
SprkCardComponent = __decorate([
    Component({
        selector: 'sprk-card',
        template: `
    <div
      [ngClass]="getClassesCard()"
      *ngIf="cardType === 'teaser'"
      [attr.data-id]="idString"
    >
      <a
        sprkLink
        variant="unstyled"
        *ngIf="media === 'img'"
        [href]="imgHref"
        class="sprk-o-Stack__item"
        [analyticsString]="imgLinkAnalytics"
      >
        <img
          class="sprk-c-Card__media"
          [attr.alt]="imgAlt"
          [attr.src]="imgSrc"
        />
      </a>

      <div
        [ngClass]="{
          'sprk-o-Stack__item': true,
          'sprk-c-Card__content': true,
          'sprk-o-Stack': true,
          'sprk-o-Stack--medium': true,
          'sprk-u-TextAlign--center': media === 'icon'
        }"
      >
        <a
          sprkLink
          variant="unstyled"
          *ngIf="media === 'icon'"
          [attr.href]="iconHref"
          class="sprk-o-Stack__item sprk-u-AbsoluteCenter"
          [analyticsString]="iconLinkAnalytics"
        >
          <sprk-icon
            [iconType]="iconType"
            [additionalClasses]="additionalClassesIcon"
          ></sprk-icon>
        </a>

        <h3 class="sprk-b-TypeDisplayFive sprk-o-Stack__item">{{ title }}</h3>

        <p class="sprk-b-TypeBodyTwo sprk-o-Stack__item">{{ body }}</p>

        <div class="sprk-o-Stack__item">
          <a
            sprkLink
            variant="unstyled"
            [attr.href]="ctaHref"
            [ngClass]="getClassesCta()"
            [analyticsString]="ctaAnalytics"
          >
            {{ ctaText }}
            <sprk-icon
              *ngIf="ctaIcon && (ctaType === 'link')"
              [iconType]="ctaIcon"
            ></sprk-icon>
          </a>
        </div>
      </div>
    </div>

    <div
      [ngClass]="getClassesCard()"
      *ngIf="cardType === 'base'"
      [attr.data-id]="idString"
    >
      <ng-content></ng-content>
    </div>

    <div
      [ngClass]="getClassesCard()"
      *ngIf="cardType === 'teaserHeading'"
      [attr.data-id]="idString"
    >
      <h3
        class="sprk-o-Stack__item sprk-c-Card__content sprk-b-TypeDisplayFive"
      >
        {{ title }}
      </h3>

      <div
        class="sprk-o-Stack__item sprk-c-Card__content sprk-o-Stack sprk-o-Stack--medium"
      >
        <a
          sprkLink
          variant="unstyled"
          *ngIf="media === 'img'"
          [attr.href]="imgHref"
          class="sprk-o-Stack__item"
          [analyticsString]="imgLinkAnalytics"
        >
          <img [attr.alt]="imgAlt" [attr.src]="imgSrc" />
        </a>

        <a
          sprkLink
          *ngIf="media === 'icon'"
          [attr.href]="iconHref"
          variant="unstyled"
          class="sprk-o-Stack__item sprk-o-Stack__item--center"
          [analyticsString]="iconLinkAnalytics"
        >
          <sprk-icon
            [iconType]="iconType"
            [additionalClasses]="additionalClassesIcon"
          ></sprk-icon>
        </a>

        <p class="sprk-b-TypeBodyTwo sprk-o-Stack__item">{{ body }}</p>

        <div class="sprk-o-Stack__item">
          <a
            sprkLink
            variant="unstyled"
            [attr.href]="ctaHref"
            [ngClass]="getClassesCta()"
            [analyticsString]="ctaAnalytics"
          >
            {{ ctaText }}
            <sprk-icon
              *ngIf="ctaIcon && (ctaType === 'link')"
              [iconType]="ctaIcon"
            ></sprk-icon>
          </a>
        </div>
      </div>
    </div>
  `
    })
], SprkCardComponent);
export { SprkCardComponent };
//# sourceMappingURL=data:application/json;base64,