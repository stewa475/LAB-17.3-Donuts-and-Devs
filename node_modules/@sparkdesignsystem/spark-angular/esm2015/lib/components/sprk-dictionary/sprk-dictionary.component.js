import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
let SprkDictionaryComponent = class SprkDictionaryComponent {
    constructor() {
        /**
         * The collection of key-value pairs to be rendered
         * into the component.
         */
        this.data = {};
        /**
         * Determines the variant of the dictionary component to render.
         * The only available option is `striped`.
         * Supplying no value will cause the base variant to be used.
         */
        this.dictionaryType = 'base';
        /**
         * @ignore
         * Used to grab all the keys from
         * objects.
         */
        this.objectKeys = Object.keys;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Dictionary'];
        if (this.dictionaryType === 'striped') {
            classArray.push('sprk-c-Dictionary--striped');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkDictionaryComponent.prototype, "data", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkDictionaryComponent.prototype, "dictionaryType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDictionaryComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDictionaryComponent.prototype, "idString", void 0);
SprkDictionaryComponent = __decorate([
    Component({
        selector: 'sprk-dictionary',
        template: `
    <div [ngClass]="getClasses()" [attr.data-id]="idString">
      <dl class="sprk-c-Dictionary__keyvaluepairs">
        <div
          *ngFor="let key of objectKeys(data)"
          class="sprk-c-Dictionary__keyvaluepair"
        >
          <dt
            class="sprk-c-Dictionary__key sprk-b-Label sprk-b-Label--no-input"
          >
            {{ key }}
          </dt>
          <dd class="sprk-c-Dictionary__value">{{ data[key] }}</dd>
        </div>
      </dl>
    </div>
  `
    })
], SprkDictionaryComponent);
export { SprkDictionaryComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1kaWN0aW9uYXJ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFya2Rlc2lnbnN5c3RlbS9zcGFyay1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvc3Byay1kaWN0aW9uYXJ5L3NwcmstZGljdGlvbmFyeS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBc0JqRCxJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF1QjtJQUFwQztRQUNFOzs7V0FHRztRQUVILFNBQUksR0FBVyxFQUFFLENBQUM7UUFDbEI7Ozs7V0FJRztRQUVILG1CQUFjLEdBQUcsTUFBTSxDQUFDO1FBa0J4Qjs7OztXQUlHO1FBQ0gsZUFBVSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFvQjNCLENBQUM7SUFsQkM7O09BRUc7SUFDSCxVQUFVO1FBQ1IsTUFBTSxVQUFVLEdBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBRW5ELElBQUksSUFBSSxDQUFDLGNBQWMsS0FBSyxTQUFTLEVBQUU7WUFDckMsVUFBVSxDQUFDLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1NBQy9DO1FBRUQsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ3BELFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDO0NBQ0YsQ0FBQTtBQWxEQztJQURDLEtBQUssRUFBRTs7cURBQ1U7QUFPbEI7SUFEQyxLQUFLLEVBQUU7OytEQUNnQjtBQU94QjtJQURDLEtBQUssRUFBRTs7a0VBQ2tCO0FBVTFCO0lBREMsS0FBSyxFQUFFOzt5REFDUztBQTlCTix1QkFBdUI7SUFwQm5DLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JUO0tBQ0YsQ0FBQztHQUNXLHVCQUF1QixDQXdEbkM7U0F4RFksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzcHJrLWRpY3Rpb25hcnknLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgW25nQ2xhc3NdPVwiZ2V0Q2xhc3NlcygpXCIgW2F0dHIuZGF0YS1pZF09XCJpZFN0cmluZ1wiPlxuICAgICAgPGRsIGNsYXNzPVwic3Byay1jLURpY3Rpb25hcnlfX2tleXZhbHVlcGFpcnNcIj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgICpuZ0Zvcj1cImxldCBrZXkgb2Ygb2JqZWN0S2V5cyhkYXRhKVwiXG4gICAgICAgICAgY2xhc3M9XCJzcHJrLWMtRGljdGlvbmFyeV9fa2V5dmFsdWVwYWlyXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxkdFxuICAgICAgICAgICAgY2xhc3M9XCJzcHJrLWMtRGljdGlvbmFyeV9fa2V5IHNwcmstYi1MYWJlbCBzcHJrLWItTGFiZWwtLW5vLWlucHV0XCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7eyBrZXkgfX1cbiAgICAgICAgICA8L2R0PlxuICAgICAgICAgIDxkZCBjbGFzcz1cInNwcmstYy1EaWN0aW9uYXJ5X192YWx1ZVwiPnt7IGRhdGFba2V5XSB9fTwvZGQ+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kbD5cbiAgICA8L2Rpdj5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBTcHJrRGljdGlvbmFyeUNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBUaGUgY29sbGVjdGlvbiBvZiBrZXktdmFsdWUgcGFpcnMgdG8gYmUgcmVuZGVyZWRcbiAgICogaW50byB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgQElucHV0KClcbiAgZGF0YTogb2JqZWN0ID0ge307XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHRoZSB2YXJpYW50IG9mIHRoZSBkaWN0aW9uYXJ5IGNvbXBvbmVudCB0byByZW5kZXIuXG4gICAqIFRoZSBvbmx5IGF2YWlsYWJsZSBvcHRpb24gaXMgYHN0cmlwZWRgLlxuICAgKiBTdXBwbHlpbmcgbm8gdmFsdWUgd2lsbCBjYXVzZSB0aGUgYmFzZSB2YXJpYW50IHRvIGJlIHVzZWQuXG4gICAqL1xuICBASW5wdXQoKVxuICBkaWN0aW9uYXJ5VHlwZSA9ICdiYXNlJztcbiAgLyoqXG4gICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAqIGNvbXBvbmVudC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZFxuICAgKiB0byB0aGUgYGRhdGEtaWRgIGF0dHJpYnV0ZSBvbiB0aGVcbiAgICogY29tcG9uZW50LiBUaGlzIGlzIGludGVuZGVkIHRvIGJlXG4gICAqIHVzZWQgYXMgYSBzZWxlY3RvciBmb3IgYXV0b21hdGVkXG4gICAqIHRvb2xzLiBUaGlzIHZhbHVlIHNob3VsZCBiZSB1bmlxdWVcbiAgICogcGVyIHBhZ2UuXG4gICAqL1xuICBASW5wdXQoKVxuICBpZFN0cmluZzogc3RyaW5nO1xuICAvKipcbiAgICogQGlnbm9yZVxuICAgKiBVc2VkIHRvIGdyYWIgYWxsIHRoZSBrZXlzIGZyb21cbiAgICogb2JqZWN0cy5cbiAgICovXG4gIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cztcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZ2V0Q2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzQXJyYXk6IHN0cmluZ1tdID0gWydzcHJrLWMtRGljdGlvbmFyeSddO1xuXG4gICAgaWYgKHRoaXMuZGljdGlvbmFyeVR5cGUgPT09ICdzdHJpcGVkJykge1xuICAgICAgY2xhc3NBcnJheS5wdXNoKCdzcHJrLWMtRGljdGlvbmFyeS0tc3RyaXBlZCcpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmFkZGl0aW9uYWxDbGFzc2VzKSB7XG4gICAgICB0aGlzLmFkZGl0aW9uYWxDbGFzc2VzLnNwbGl0KCcgJykuZm9yRWFjaChjbGFzc05hbWUgPT4ge1xuICAgICAgICBjbGFzc0FycmF5LnB1c2goY2xhc3NOYW1lKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBjbGFzc0FycmF5LmpvaW4oJyAnKTtcbiAgfVxufVxuIl19