import { __decorate, __metadata } from "tslib";
import { Directive, Input, HostBinding } from '@angular/core';
let SprkBoxDirective = class SprkBoxDirective {
    /**
     * @ignore
     */
    constructor() { }
    get flush() {
        return this.spacing === 'flush';
    }
    get tiny() {
        return this.spacing === 'tiny';
    }
    get small() {
        return this.spacing === 'small';
    }
    get medium() {
        return this.spacing === 'medium';
    }
    get large() {
        return this.spacing === 'large';
    }
    get huge() {
        return this.spacing === 'huge';
    }
    get insetShortTiny() {
        return this.spacing === 'insetShortTiny';
    }
    get insetShortSmall() {
        return this.spacing === 'insetShortSmall';
    }
    get insetShortMedium() {
        return this.spacing === 'insetShortMedium';
    }
    get insetShortLarge() {
        return this.spacing === 'insetShortLarge';
    }
    get insetShortHuge() {
        return this.spacing === 'insetShortHuge';
    }
    get insetTallTiny() {
        return this.spacing === 'insetTallTiny';
    }
    get insetTallSmall() {
        return this.spacing === 'insetTallSmall';
    }
    get insetTallMedium() {
        return this.spacing === 'insetTallMedium';
    }
    get insetTallLarge() {
        return this.spacing === 'insetTallLarge';
    }
    get insetTallHuge() {
        return this.spacing === 'insetTallHuge';
    }
    get miscA() {
        return this.spacing === 'miscA';
    }
    get miscB() {
        return this.spacing === 'miscB';
    }
    get miscC() {
        return this.spacing === 'miscC';
    }
    get miscD() {
        return this.spacing === 'miscD';
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkBoxDirective.prototype, "spacing", void 0);
__decorate([
    HostBinding('class.sprk-o-Box'),
    __metadata("design:type", Object)
], SprkBoxDirective.prototype, "true", void 0);
__decorate([
    HostBinding('class.sprk-o-Box--flush'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "flush", null);
__decorate([
    HostBinding('class.sprk-o-Box--tiny'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "tiny", null);
__decorate([
    HostBinding('class.sprk-o-Box--small'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "small", null);
__decorate([
    HostBinding('class.sprk-o-Box--medium'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "medium", null);
__decorate([
    HostBinding('class.sprk-o-Box--large'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "large", null);
__decorate([
    HostBinding('class.sprk-o-Box--huge'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "huge", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-tiny'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortTiny", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-small'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortSmall", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-medium'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortMedium", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-large'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortLarge", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-huge'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortHuge", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-tiny'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallTiny", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-small'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallSmall", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-medium'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallMedium", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-large'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallLarge", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-huge'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallHuge", null);
__decorate([
    HostBinding('class.sprk-o-Box--misc-a'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "miscA", null);
__decorate([
    HostBinding('class.sprk-o-Box--misc-b'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "miscB", null);
__decorate([
    HostBinding('class.sprk-o-Box--misc-c'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "miscC", null);
__decorate([
    HostBinding('class.sprk-o-Box--misc-d'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "miscD", null);
SprkBoxDirective = __decorate([
    Directive({
        selector: '[sprkBox]'
    }),
    __metadata("design:paramtypes", [])
], SprkBoxDirective);
export { SprkBoxDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1ib3guZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9zcHJrLWJveC9zcHJrLWJveC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQWMsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUsxRSxJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFnQjtJQWtJM0I7O09BRUc7SUFDSCxnQkFBZSxDQUFDO0lBdEdoQixJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUFDO0lBQ2xDLENBQUM7SUFHRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssTUFBTSxDQUFDO0lBQ2pDLENBQUM7SUFHRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUFDO0lBQ2xDLENBQUM7SUFHRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssUUFBUSxDQUFDO0lBQ25DLENBQUM7SUFHRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUFDO0lBQ2xDLENBQUM7SUFHRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssTUFBTSxDQUFDO0lBQ2pDLENBQUM7SUFHRCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsT0FBTyxLQUFLLGdCQUFnQixDQUFDO0lBQzNDLENBQUM7SUFHRCxJQUFJLGVBQWU7UUFDakIsT0FBTyxJQUFJLENBQUMsT0FBTyxLQUFLLGlCQUFpQixDQUFDO0lBQzVDLENBQUM7SUFHRCxJQUFJLGdCQUFnQjtRQUNsQixPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssa0JBQWtCLENB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IElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbc3Bya0JveF0nXG59KVxuZXhwb3J0IGNsYXNzIFNwcmtCb3hEaXJlY3RpdmUge1xuICAvKipcbiAgICogUGFkZGluZyBpbnNpZGUgb2YgdGhlIGJveCBjb21wb25lbnQuXG4gICAqIERlZmF1bHRzIHRvIG1lZGl1bSBzaXppbmcgd2hlbiBub3QgcHJvdmlkZWQuXG4gICAqIFJlZmVyIHRvIENsYXNzIE1vZGlmaWVycyBzZWN0aW9uIGZvciBkZWZhdWx0IHBpeGVsIHZhbHVlcy5cbiAgICovXG4gIEBJbnB1dCgpIHNwYWNpbmc6XG4gICAgfCAnZmx1c2gnXG4gICAgfCAndGlueSdcbiAgICB8ICdzbWFsbCdcbiAgICB8ICdtZWRpdW0nXG4gICAgfCAnbGFyZ2UnXG4gICAgfCAnaHVnZSdcbiAgICB8ICdpbnNldFNob3J0VGlueSdcbiAgICB8ICdpbnNldFNob3J0U21hbGwnXG4gICAgfCAnaW5zZXRTaG9ydE1lZGl1bSdcbiAgICB8ICdpbnNldFNob3J0TGFyZ2UnXG4gICAgfCAnaW5zZXRTaG9ydEh1Z2UnXG4gICAgfCAnaW5zZXRUYWxsVGlueSdcbiAgICB8ICdpbnNldFRhbGxTbWFsbCdcbiAgICB8ICdpbnNldFRhbGxNZWRpdW0nXG4gICAgfCAnaW5zZXRUYWxsTGFyZ2UnXG4gICAgfCAnaW5zZXRUYWxsSHVnZSdcbiAgICB8ICdtaXNjQSdcbiAgICB8ICdtaXNjQidcbiAgICB8ICdtaXNjQydcbiAgICB8ICdtaXNjRCc7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zcHJrLW8tQm94JykgdHJ1ZTtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLWZsdXNoJylcbiAgZ2V0IGZsdXNoKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdmbHVzaCc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLXRpbnknKVxuICBnZXQgdGlueSgpIHtcbiAgICByZXR1cm4gdGhpcy5zcGFjaW5nID09PSAndGlueSc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLXNtYWxsJylcbiAgZ2V0IHNtYWxsKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdzbWFsbCc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLW1lZGl1bScpXG4gIGdldCBtZWRpdW0oKSB7XG4gICAgcmV0dXJuIHRoaXMuc3BhY2luZyA9PT0gJ21lZGl1bSc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLWxhcmdlJylcbiAgZ2V0IGxhcmdlKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdsYXJnZSc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLWh1Z2UnKVxuICBnZXQgaHVnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zcGFjaW5nID09PSAnaHVnZSc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLWluc2V0LXNob3J0LXRpbnknKVxuICBnZXQgaW5zZXRTaG9ydFRpbnkoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3BhY2luZyA9PT0gJ2luc2V0U2hvcnRUaW55JztcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc3Byay1vLUJveC0taW5zZXQtc2hvcnQtc21hbGwnKVxuICBnZXQgaW5zZXRTaG9ydFNtYWxsKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdpbnNldFNob3J0U21hbGwnO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zcHJrLW8tQm94LS1pbnNldC1zaG9ydC1tZWRpdW0nKVxuICBnZXQgaW5zZXRTaG9ydE1lZGl1bSgpIHtcbiAgICByZXR1cm4gdGhpcy5zcGFjaW5nID09PSAnaW5zZXRTaG9ydE1lZGl1bSc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLWluc2V0LXNob3J0LWxhcmdlJylcbiAgZ2V0IGluc2V0U2hvcnRMYXJnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zcGFjaW5nID09PSAnaW5zZXRTaG9ydExhcmdlJztcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc3Byay1vLUJveC0taW5zZXQtc2hvcnQtaHVnZScpXG4gIGdldCBpbnNldFNob3J0SHVnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zcGFjaW5nID09PSAnaW5zZXRTaG9ydEh1Z2UnO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zcHJrLW8tQm94LS1pbnNldC10YWxsLXRpbnknKVxuICBnZXQgaW5zZXRUYWxsVGlueSgpIHtcbiAgICByZXR1cm4gdGhpcy5zcGFjaW5nID09PSAnaW5zZXRUYWxsVGlueSc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLWluc2V0LXRhbGwtc21hbGwnKVxuICBnZXQgaW5zZXRUYWxsU21hbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3BhY2luZyA9PT0gJ2luc2V0VGFsbFNtYWxsJztcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc3Byay1vLUJveC0taW5zZXQtdGFsbC1tZWRpdW0nKVxuICBnZXQgaW5zZXRUYWxsTWVkaXVtKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdpbnNldFRhbGxNZWRpdW0nO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zcHJrLW8tQm94LS1pbnNldC10YWxsLWxhcmdlJylcbiAgZ2V0IGluc2V0VGFsbExhcmdlKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdpbnNldFRhbGxMYXJnZSc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLWluc2V0LXRhbGwtaHVnZScpXG4gIGdldCBpbnNldFRhbGxIdWdlKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdpbnNldFRhbGxIdWdlJztcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc3Byay1vLUJveC0tbWlzYy1hJylcbiAgZ2V0IG1pc2NBKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdtaXNjQSc7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnNwcmstby1Cb3gtLW1pc2MtYicpXG4gIGdldCBtaXNjQigpIHtcbiAgICByZXR1cm4gdGhpcy5zcGFjaW5nID09PSAnbWlzY0InO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zcHJrLW8tQm94LS1taXNjLWMnKVxuICBnZXQgbWlzY0MoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3BhY2luZyA9PT0gJ21pc2NDJztcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc3Byay1vLUJveC0tbWlzYy1kJylcbiAgZ2V0IG1pc2NEKCkge1xuICAgIHJldHVybiB0aGlzLnNwYWNpbmcgPT09ICdtaXNjRCc7XG4gIH1cblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7fVxufVxuIl19