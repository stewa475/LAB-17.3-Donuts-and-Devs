import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, HostListener, Attribute } from '@angular/core';
let SprkFormatterMonetaryDirective = class SprkFormatterMonetaryDirective {
    constructor(ref) {
        this.ref = ref;
    }
    onBlur(value) {
        this.ref.nativeElement.value = this.formatMonetary(value);
    }
    formatMonetary(value) {
        let number;
        if (this.ref.nativeElement.validity.valid) {
            number = Number(value.replace(/[\$,]/g, ''));
            if (isNaN(number)) {
                return value;
            }
            return number
                .toLocaleString('en-US', { style: 'currency', currency: 'USD' })
                .replace(/\$/g, '');
        }
        return value;
    }
};
SprkFormatterMonetaryDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    HostListener('blur', ['this.ref.nativeElement.value']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkFormatterMonetaryDirective.prototype, "onBlur", null);
SprkFormatterMonetaryDirective = __decorate([
    Directive({
        selector: '[sprkFormatterMonetary]'
    }),
    __metadata("design:paramtypes", [ElementRef])
], SprkFormatterMonetaryDirective);
export { SprkFormatterMonetaryDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1mb3JtYXR0ZXItbW9uZXRhcnkuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9pbnB1dHMvZm9ybWF0dGVycy9zcHJrLWZvcm1hdHRlci1tb25ldGFyeS9zcHJrLWZvcm1hdHRlci1tb25ldGFyeS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNL0UsSUFBYSw4QkFBOEIsR0FBM0MsTUFBYSw4QkFBOEI7SUFDekMsWUFBbUIsR0FBZTtRQUFmLFFBQUcsR0FBSCxHQUFHLENBQVk7SUFBRyxDQUFDO0lBR3RDLE1BQU0sQ0FBQyxLQUFLO1FBQ1YsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVELGNBQWMsQ0FBQyxLQUFLO1FBQ2xCLElBQUksTUFBTSxDQUFDO1FBQ1gsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFO1lBQ3pDLE1BQU0sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUU3QyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDakIsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELE9BQU8sTUFBTTtpQkFDVixjQUFjLENBQUMsT0FBTyxFQUFFLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUM7aUJBQy9ELE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDdkI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Q0FDRixDQUFBOztZQXRCeUIsVUFBVTs7QUFHbEM7SUFEQyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsOEJBQThCLENBQUMsQ0FBQzs7Ozs0REFHdEQ7QUFOVSw4QkFBOEI7SUFIMUMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHlCQUF5QjtLQUNwQyxDQUFDO3FDQUV3QixVQUFVO0dBRHZCLDhCQUE4QixDQXVCMUM7U0F2QlksOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBIb3N0TGlzdGVuZXIsIEF0dHJpYnV0ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3NwcmtGb3JtYXR0ZXJNb25ldGFyeV0nXG59KVxuZXhwb3J0IGNsYXNzIFNwcmtGb3JtYXR0ZXJNb25ldGFyeURpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgQEhvc3RMaXN0ZW5lcignYmx1cicsIFsndGhpcy5yZWYubmF0aXZlRWxlbWVudC52YWx1ZSddKVxuICBvbkJsdXIodmFsdWUpIHtcbiAgICB0aGlzLnJlZi5uYXRpdmVFbGVtZW50LnZhbHVlID0gdGhpcy5mb3JtYXRNb25ldGFyeSh2YWx1ZSk7XG4gIH1cblxuICBmb3JtYXRNb25ldGFyeSh2YWx1ZSk6IHZvaWQge1xuICAgIGxldCBudW1iZXI7XG4gICAgaWYgKHRoaXMucmVmLm5hdGl2ZUVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIG51bWJlciA9IE51bWJlcih2YWx1ZS5yZXBsYWNlKC9bXFwkLF0vZywgJycpKTtcblxuICAgICAgaWYgKGlzTmFOKG51bWJlcikpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVtYmVyXG4gICAgICAgIC50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7IHN0eWxlOiAnY3VycmVuY3knLCBjdXJyZW5jeTogJ1VTRCcgfSlcbiAgICAgICAgLnJlcGxhY2UoL1xcJC9nLCAnJyk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufVxuIl19