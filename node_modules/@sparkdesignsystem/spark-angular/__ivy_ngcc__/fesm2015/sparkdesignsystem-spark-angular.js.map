{"version":3,"file":"sparkdesignsystem-spark-angular.js","sources":["ng:/@sparkdesignsystem/spark-angular/environment/environment.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-datepicker/sprk-datepicker.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-datepicker/sprk-datepicker.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-field-error/sprk-field-error.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-field-error/sprk-field-error.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-helper-text/sprk-helper-text.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-helper-text/sprk-helper-text.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-input/sprk-input.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-input/sprk-input.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-label/sprk-label.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-label/sprk-label.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-selection-input/sprk-selection-input.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-selection-input/sprk-selection-input.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-selection-label/sprk-selection-label.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-selection-label/sprk-selection-label.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-stack-item/sprk-stack-item.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-stack-item/sprk-stack-item.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-table-head/sprk-table-head.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-table-head/sprk-table-head.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-table-row-heading/sprk-table-row-heading.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-table-row-heading/sprk-table-row-heading.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-input-container/sprk-input-container.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-input-container/sprk-input-container.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-huge-input-container/sprk-huge-input-container.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-huge-input-container/sprk-huge-input-container.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-textarea-container/sprk-textarea-container.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-textarea-container/sprk-textarea-container.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-selection-container/sprk-selection-container.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-selection-container/sprk-selection-container.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-icon/sprk-icon.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-icon/sprk-icon.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-link/sprk-link.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-link/sprk-link.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-toggle/sprk-toggle-animations.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-accordion-item/sprk-accordion-item.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-accordion-item/sprk-accordion-item.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-link/sprk-link.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-link/sprk-link.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-accordion/sprk-accordion.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-accordion/sprk-accordion.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-alert/sprk-alert.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-alert/sprk-alert.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-divider/sprk-divider.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-divider/sprk-divider.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-dropdown/sprk-dropdown.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-dropdown/sprk-dropdown.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-stack/sprk-stack.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-stack/sprk-stack.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-toggle/sprk-toggle.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-toggle/sprk-toggle.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-footer/sprk-footer.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-footer/sprk-footer.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-list-item/sprk-list-item.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-list-item/sprk-list-item.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-modal/sprk-modal.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-modal/sprk-modal.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-ordered-list/sprk-ordered-list.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-ordered-list/sprk-ordered-list.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-unordered-list/sprk-unordered-list.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-unordered-list/sprk-unordered-list.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-pagination/sprk-pagination.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-pagination/sprk-pagination.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-promo/sprk-promo.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-promo/sprk-promo.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-table/sprk-table.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-table/sprk-table.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-button/sprk-button.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-button/sprk-button.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-award/sprk-award.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-award/sprk-award.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-card/sprk-card.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-card/sprk-card.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-dictionary/sprk-dictionary.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-dictionary/sprk-dictionary.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-highlight-board/sprk-highlight-board.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-highlight-board/sprk-highlight-board.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-box/sprk-box.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-box/sprk-box.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-text/sprk-text.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-text/sprk-text.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-heading/sprk-heading.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-heading/sprk-heading.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-flag/sprk-flag.component.ts","ng:/@sparkdesignsystem/spark-angular/lib/components/sprk-flag/sprk-flag.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-centered-column/sprk-centered-column.directive.ts","ng:/@sparkdesignsystem/spark-angular/lib/directives/sprk-centered-column/sprk-centered-column.module.ts","ng:/@sparkdesignsystem/spark-angular/lib/spark-angular.module.ts","ng:/@sparkdesignsystem/spark-angular/public-api.ts","ng:/@sparkdesignsystem/spark-angular/sparkdesignsystem-spark-angular.ts"],"names":["_.uniqueId","uniqueId","_.throttle"],"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","sourcesContent":["export const environment = {\n  version: '10.0.0'\n};\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterDate]'\n})\nexport class SprkFormatterDateDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatDate(value);\n  }\n\n  formatDate(value): string {\n    const m = value.match(\n      // tslint:disable-next-line:max-line-length\n      /^(((0[13578]|1[02])([/-]?)(0[1-9]|[12]\\d|3[01])|(0[469]|11)([/-]?)(0[1-9]|[12]\\d|30)|02([/-]?)((0[1-9])|[12]\\d))(\\4|\\7|\\9)[12]\\d{3})?$/\n    );\n\n    let newValue = '';\n    const cleanValue = value.replace(/[/-]/g, '');\n\n    if (m) {\n      for (let i = 0; i < cleanValue.length; i += 1) {\n        if (i === 1 || i === 3) {\n          newValue += `${cleanValue[i]}/`;\n        } else {\n          newValue += cleanValue[i];\n        }\n      }\n      return newValue;\n    } else {\n      return value;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFormatterDateDirective } from './sprk-formatter-date.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFormatterDateDirective],\n  exports: [SprkFormatterDateDirective]\n})\nexport class SprkFormatterDateModule {}\n","import { Directive, ElementRef, HostListener, Attribute } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\n@Directive({\n  selector: '[sprkFormatterMonetary]'\n})\nexport class SprkFormatterMonetaryDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('blur', ['this.ref.nativeElement.value'])\n  onBlur(value) {\n    this.ref.nativeElement.value = this.formatMonetary(value);\n  }\n\n  formatMonetary(value): void {\n    let number;\n    if (this.ref.nativeElement.validity.valid) {\n      number = Number(value.replace(/[\\$,]/g, ''));\n\n      if (isNaN(number)) {\n        return value;\n      }\n\n      return number\n        .toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n        .replace(/\\$/g, '');\n    }\n    return value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFormatterMonetaryDirective } from './sprk-formatter-monetary.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFormatterMonetaryDirective],\n  exports: [SprkFormatterMonetaryDirective]\n})\nexport class SprkFormatterMonetaryModule {}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterPhoneNumber]'\n})\nexport class SprkFormatterPhoneNumberDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatPhone(value);\n  }\n\n  formatPhone(value): string {\n    const newValue = `${value}`.replace(/\\D/g, '');\n    const m = newValue.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n\n    if (m) {\n      return `(${m[1]}) ${m[2]}-${m[3]}`;\n    } else {\n      return value;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFormatterPhoneNumberDirective } from './sprk-formatter-phone-number.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFormatterPhoneNumberDirective],\n  exports: [SprkFormatterPhoneNumberDirective]\n})\nexport class SprkFormatterPhoneNumberModule {}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterSsn]'\n})\nexport class SprkFormatterSsnDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatSSN(value);\n  }\n\n  formatSSN(value): string {\n    const m = value.match(\n      /(^(?!666|000|9\\d{2})\\d{3}([-]{0,1})(?!00)\\d{2}\\1(?!0{4})\\2\\d{4}$)|^$/\n    );\n    if (m) {\n      let val = value.trim().replace(/[ -]/g, '');\n      let newVal = '';\n      const sizes = [3, 2, 4];\n\n      sizes.forEach(size => {\n        if (val.length > size) {\n          newVal += `${val.substr(0, size)}-`;\n          val = val.substr(size);\n        }\n      });\n\n      newVal += val;\n      return newVal;\n    }\n    return value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFormatterSsnDirective } from './sprk-formatter-ssn.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFormatterSsnDirective],\n  exports: [SprkFormatterSsnDirective]\n})\nexport class SprkFormatterSsnModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport TinyDatePicker from 'tiny-date-picker';\n\n@Directive({\n  selector: '[sprkDatepicker]'\n})\nexport class SprkDatepickerDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * Exposes configuration provided\n   * by `tiny-date-picker`,\n   * see [github](https://github.com/chrisdavies/tiny-date-picker) for documentation.\n   */\n  @Input()\n  sprkDatePickerConfig: object;\n\n  ngOnInit(): void {\n    const input = this.ref.nativeElement;\n    const tdpConfig = {\n      mode: 'dp-below',\n      lang: {\n        days: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n      },\n      min: '01/1/2008',\n      max: '01/1/2068',\n      format: date =>\n        date\n          .toLocaleDateString('en-US', {\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric'\n          })\n          .replace(/[^ -~]/g, '')\n    };\n\n    if (TinyDatePicker) {\n      TinyDatePicker(input, {\n        ...tdpConfig,\n        ...this.sprkDatePickerConfig\n      }).on('select', () => {\n\n        let event;\n\n        if (typeof(Event) === 'function') {\n          event = new Event('input');\n        } else {\n          event = document.createEvent('Event');\n          event.initEvent('input', true, true);\n        }\n\n        this.ref.nativeElement.dispatchEvent(event);\n        this.ref.nativeElement.focus();\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkDatepickerDirective } from './sprk-datepicker.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkDatepickerDirective],\n  exports: [SprkDatepickerDirective]\n})\nexport class SprkDatepickerModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFieldError]'\n})\nexport class SprkFieldErrorDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-ErrorContainer'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFieldErrorDirective } from './sprk-field-error.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFieldErrorDirective],\n  exports: [SprkFieldErrorDirective]\n})\nexport class SprkFieldErrorModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkHelperText]'\n})\nexport class SprkHelperTextDirective implements OnInit {\n /**\n  * @ignore\n  */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-HelperText'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkHelperTextDirective } from './sprk-helper-text.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkHelperTextDirective],\n  exports: [SprkHelperTextDirective]\n})\nexport class SprkHelperTextModule {}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  HostListener,\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkInput]'\n})\nexport class SprkInputDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  @HostListener('change', ['$event'])\n  OnChange($event) {\n    const value = (this.ref.nativeElement as HTMLInputElement).value;\n    if (value.length > 0) {\n      this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');\n    } else {\n      this.ref.nativeElement.classList.remove('sprk-b-Input--has-floating-label');\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.ref.nativeElement.nodeName === 'SELECT') {\n      this.ref.nativeElement.classList.add('sprk-b-Select');\n    } else if (this.ref.nativeElement.nodeName === 'TEXTAREA') {\n      this.ref.nativeElement.classList.add('sprk-b-TextInput');\n      this.ref.nativeElement.classList.add('sprk-b-TextArea');\n    } else {\n      this.ref.nativeElement.classList.add('sprk-b-TextInput');\n    }\n\n    if ((this.ref.nativeElement as HTMLInputElement).value.length > 0 ) {\n      this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');\n    }\n    this.ref.nativeElement.classList.add('sprk-u-Width-100');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkInputDirective } from './sprk-input.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkInputDirective],\n  exports: [SprkInputDirective]\n})\nexport class SprkInputModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkLabel]'\n})\nexport class SprkLabelDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-Label'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkLabelDirective } from './sprk-label.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkLabelDirective],\n  exports: [SprkLabelDirective]\n})\nexport class SprkLabelModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkSelectionInput]'\n})\nexport class SprkSelectionInputDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-SelectionInput'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkSelectionInputDirective } from './sprk-selection-input.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkSelectionInputDirective],\n  exports: [SprkSelectionInputDirective]\n})\nexport class SprkSelectionInputModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkSelectionLabel]'\n})\nexport class SprkSelectionLabelDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-Label', 'sprk-b-Label--inline'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkSelectionLabelDirective } from './sprk-selection-label.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkSelectionLabelDirective],\n  exports: [SprkSelectionLabelDirective]\n})\nexport class SprkSelectionLabelModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkStackItem]'\n})\nexport class SprkStackItemDirective implements OnInit {\n  ngOnInit(): void {\n    this.ref.nativeElement.classList.add('sprk-o-Stack__item');\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkStackItemDirective } from './sprk-stack-item.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkStackItemDirective],\n  exports: [SprkStackItemDirective]\n})\nexport class SprkStackItemModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableEmptyHeading]'\n})\nexport class SprkTableEmptyHeadingDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__empty-heading'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableEmptyHeadingDirective } from './sprk-table-empty-heading.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableEmptyHeadingDirective],\n  exports: [SprkTableEmptyHeadingDirective]\n})\nexport class SprkTableEmptyHeadingModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableGroupedColumn]'\n})\nexport class SprkTableGroupedColumnDirective implements OnInit {\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * element.\n  */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__grouped-column'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableGroupedColumnDirective } from './sprk-table-grouped-column.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableGroupedColumnDirective],\n  exports: [SprkTableGroupedColumnDirective]\n})\nexport class SprkTableGroupedColumnModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableHead]'\n})\nexport class SprkTableHeadDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__head'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableHeadDirective } from './sprk-table-head.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableHeadDirective],\n  exports: [SprkTableHeadDirective]\n})\nexport class SprkTableHeadModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableRowHeading]'\n})\nexport class SprkTableRowHeadingDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__row-heading'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableRowHeadingDirective } from './sprk-table-row-heading.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableRowHeadingDirective],\n  exports: [SprkTableRowHeadingDirective]\n})\nexport class SprkTableRowHeadingModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTabbedNavigationPanel]'\n})\nexport class SprkTabbedNavigationPanelDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, the Panel will\n   * be set as the active Panel on render.\n   */\n  @Input()\n  defaultActive: boolean;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-c-Tabs__content'];\n\n    if (!this.defaultActive) {\n      classArray.push('sprk-u-HideWhenJs');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.ref.nativeElement.setAttribute('role', 'tabpanel');\n    this.ref.nativeElement.setAttribute('tabindex', '0');\n\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTabbedNavigationPanelDirective } from './sprk-tabbed-navigation-panel.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTabbedNavigationPanelDirective],\n  exports: [SprkTabbedNavigationPanelDirective]\n})\nexport class SprkTabbedNavigationPanelModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTabbedNavigationTab]'\n})\nexport class SprkTabbedNavigationTabDirective implements OnInit {\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * element.\n  */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, the Tab will have\n   * active styles and aria attributes on render.\n   */\n  @Input()\n  defaultActive: boolean;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-c-Tabs__button'];\n\n    if (this.defaultActive) {\n      classArray.push('sprk-c-Tabs__button--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n\n    this.ref.nativeElement.setAttribute('role', 'tab');\n    this.ref.nativeElement.setAttribute(\n      'aria-selected',\n      this.defaultActive ? 'true' : 'false'\n    );\n\n    if (this.analyticsString) {\n      this.ref.nativeElement.setAttribute(\n        'data-analytics',\n        this.analyticsString\n      );\n    }\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTabbedNavigationTabDirective } from './sprk-tabbed-navigation-tab.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTabbedNavigationTabDirective],\n  exports: [SprkTabbedNavigationTabDirective]\n})\nexport class SprkTabbedNavigationTabModule {}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"[sprk-select-icon]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SparkInputContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SparkInputContainerComponent } from './sprk-input-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SparkInputContainerComponent],\n  exports: [SparkInputContainerComponent]\n})\nexport class SparkInputContainerModule {}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport { uniqueId } from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-huge-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprk-select-icon]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkHugeInputContainerComponent implements OnInit {\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * component.\n  */\n  @Input()\n  additionalClasses: string;\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * icon container.\n  */\n  @Input()\n  iconContainerClasses: string;\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n /**\n  * This component expects a child input element\n  * with the `sprkInput` directive.\n  */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-InputContainer',\n      'sprk-b-InputContainer--huge'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkHugeInputContainerComponent } from './sprk-huge-input-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkHugeInputContainerComponent],\n  exports: [SprkHugeInputContainerComponent]\n})\nexport class SprkHugeInputContainerModule {}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-textarea-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkTextareaContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-InputContainer',\n      'sprk-b-InputContainer--textarea'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkTextareaContainerComponent } from './sprk-textarea-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkTextareaContainerComponent],\n  exports: [SprkTextareaContainerComponent]\n})\nexport class SprkTextareaContainerModule {}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-icon-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <div [ngClass]=\"getIconContainerClasses()\">\n        <ng-content select=\"[sprkLabel]\"></ng-content>\n        <ng-content select=\"[sprk-input-icon]\"></ng-content>\n        <ng-content select=\"[sprkInput]\"></ng-content>\n      </div>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkIconInputContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n  /**\n   * @ignore\n   */\n  getIconContainerClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer__icon-container'];\n\n    if (this.iconContainerClasses) {\n      this.iconContainerClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconInputContainerComponent } from './sprk-icon-input-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkIconInputContainerComponent],\n  exports: [SprkIconInputContainerComponent]\n})\nexport class SprkIconInputContainerModule {}\n","import { Component, ContentChild, Input, OnInit, Renderer2 } from '@angular/core';\nimport uniqueId from 'lodash/uniqueId';\nimport { SprkSelectionInputDirective } from '../../../directives/inputs/sprk-selection-input/sprk-selection-input.directive';\nimport { SprkSelectionLabelDirective } from '../../../directives/inputs/sprk-selection-label/sprk-selection-label.directive';\n\n@Component({\n  selector: 'sprk-selection-item-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkSelectionInput]\"></ng-content>\n      <ng-content select=\"[sprkSelectionLabel]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkSelectionItemContainerComponent implements OnInit {\n  constructor( private renderer: Renderer2) {}\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkSelectionLabel` directive.\n   */\n  @ContentChild(SprkSelectionLabelDirective, { static: true })\n  label: SprkSelectionLabelDirective;\n  /**\n   * This component expects a child selection input\n   * with the `sprkSelectionInput` directive.\n   */\n  @ContentChild(SprkSelectionInputDirective, { static: true })\n  input: SprkSelectionInputDirective;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-SelectionContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  addInputTypeClasses(): void {\n    const inputType = this.input.ref.nativeElement.type;\n    if (inputType === 'checkbox') {\n      this.renderer.addClass(this.input.ref.nativeElement, 'sprk-b-Checkbox__input');\n      this.renderer.addClass(this.label.ref.nativeElement, 'sprk-b-Checkbox__label');\n    }\n    if (inputType === 'radio') {\n      this.renderer.addClass(this.input.ref.nativeElement, 'sprk-b-Radio__input');\n      this.renderer.addClass(this.label.ref.nativeElement, 'sprk-b-Radio__label');\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  generateIdForInput(): void {\n    let inputId = this.input.ref.nativeElement.id;\n    const labelFor = this.label.ref.nativeElement.htmlFor;\n\n    // Warn if 'for' exists but the 'id' does not\n    if (labelFor && !inputId) {\n      console.warn(`Spark Design System Warning - The value of 'for' (${labelFor}) on the label expects a matching 'id' on the input.`);\n      return;\n    }\n\n    // Warn if 'for' and 'id' both exist but don't match\n    if (inputId && labelFor && inputId !== labelFor) {\n      console.warn(\n        `Spark Design System Warning - The value of 'for' (${labelFor}) on the label should match the 'id' on the input (${inputId}).`\n      );\n      return;\n    }\n\n    // If we don't have a valid id, generate one with lodash\n    if (!inputId) {\n      inputId = uniqueId(`sprk_input_`);\n      this.renderer.setProperty(this.input.ref.nativeElement, 'id', inputId);\n      this.renderer.setAttribute(this.label.ref.nativeElement, 'for', inputId);\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.generateIdForInput();\n      this.addInputTypeClasses();\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Input,\n  QueryList\n} from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\nimport { SprkSelectionItemContainerComponent } from '../sprk-selection-item-container/sprk-selection-item-container.component';\n\n@Component({\n  selector: 'sprk-selection-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <fieldset class=\"sprk-b-Fieldset\">\n        <legend class=\"sprk-b-Legend\">\n          <ng-content select=\"[sprkLabel]\"></ng-content>\n        </legend>\n        <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      </fieldset>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkSelectionContainerComponent implements AfterContentInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: false })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: false })\n  error: SprkFieldErrorDirective;\n  /**\n   * This component expects a child\n   * `<sprk-selection-item-container>` component.\n   */\n  @ContentChildren(SprkSelectionItemContainerComponent)\n  selectionItems: QueryList<SprkSelectionItemContainerComponent>;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  ngAfterContentInit(): void {\n    if (this.selectionItems && this.error) {\n      this.selectionItems.forEach(item => {\n        item.input.ref.nativeElement.setAttribute(\n          'aria-describedby',\n          this.error_id\n        );\n      });\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkSelectionContainerComponent } from './sprk-selection-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkSelectionContainerComponent],\n  exports: [SprkSelectionContainerComponent]\n})\nexport class SprkSelectionContainerModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkSelectionItemContainerComponent } from './sprk-selection-item-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkSelectionItemContainerComponent],\n  exports: [SprkSelectionItemContainerComponent]\n})\nexport class SprkSelectionItemContainerModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-icon',\n  template: `\n    <svg [ngClass]=\"getClasses()\" viewBox=\"0 0 64 64\" [attr.data-id]=\"idString\">\n      <use [attr.xlink:href]=\"icon\" />\n    </svg>\n  `,\n  styles: [':host { line-height: 1; }']\n})\nexport class SprkIconComponent {\n  /**\n   * Determines which icon is rendered.\n   * Expects the value to match the exact name\n   * of the icon found in the docs\n   * (i.e. `chevron-down`, instead of `chevron down`).\n   */\n  @Input()\n  iconType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  public icon: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Icon'];\n\n    this.icon = `#${this.iconType}`;\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconComponent } from './sprk-icon.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkIconComponent],\n  exports: [SprkIconComponent]\n})\nexport class SprkIconModule {}\n","import {\n  Directive,\n  Input,\n  HostBinding,\n  Renderer2,\n  ElementRef,\n  OnInit\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkLink]'\n})\nexport class SprkLinkDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(private renderer: Renderer2, private el: ElementRef) { }\n  /**\n   * Will cause the appropriate variant type to render.\n   * If omitted, the default Spark Link class is applied.\n   */\n  @Input() variant:\n    | 'simple'\n    | 'icon'\n    | 'unstyled'\n    | 'plain';\n\n  /**\n   * If `true`, will set disabled styles on the link.\n   */\n  @HostBinding('class.sprk-b-Link--disabled')\n  @Input() isDisabled: boolean;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the element.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @HostBinding('attr.data-analytics')\n  @Input() analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @HostBinding('attr.data-id')\n  @Input() idString: string;\n\n  ngOnInit() {\n    if (this.variant !== 'unstyled') {\n      this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link');\n    }\n    if (this.variant === 'simple' || this.variant === 'icon') {\n      this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--simple');\n    }\n    if (this.variant === 'icon') {\n      this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--has-icon');\n    }\n    if (this.variant === 'plain') {\n      this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--plain');\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkLinkDirective } from './sprk-link.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkLinkDirective],\n  exports: [SprkLinkDirective]\n})\nexport class SprkLinkDirectiveModule {}\n","import {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport const toggleAnimations: {\n  readonly toggleContent: AnimationTriggerMetadata;\n} = {\n  toggleContent: trigger('toggleContent', [\n    state(\n      'closed',\n      style({\n        height: '0',\n        overflow: 'hidden',\n        visibility: 'hidden',\n      })\n    ),\n    state(\n      'open',\n      style({\n        height: '*',\n        visibility: 'visible',\n      })\n    ),\n    transition('open <=> closed', animate('300ms ease-in'))\n  ])\n};\n","import { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { toggleAnimations } from '../sprk-toggle/sprk-toggle-animations';\n\n@Component({\n  selector: 'sprk-accordion-item',\n  template: `\n    <li [ngClass]=\"getClasses()\">\n      <button\n        sprkLink\n        variant=\"unstyled\"\n        href=\"#\"\n        [attr.aria-controls]=\"accordion_controls_id\"\n        [attr.aria-expanded]=\"isOpen\"\n        class=\"sprk-c-Accordion__summary\"\n        [analyticsString]=\"analyticsString\"\n        [idString]=\"idString\"\n        (click)=\"toggleAccordion($event)\"\n      >\n        <span [ngClass]=\"getHeadingClasses()\">\n          <sprk-icon\n            [iconType]=\"leadingIcon\"\n            additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-u-mrs\"\n            *ngIf=\"leadingIcon\"\n          ></sprk-icon>\n          {{ title }}\n        </span>\n\n        <sprk-icon\n          additionalClasses=\"sprk-c-Accordion__icon sprk-c-Icon--toggle sprk-c-Icon--l {{\n            iconStateClass\n          }}\"\n          [iconType]=\"currentIconType\"\n        ></sprk-icon>\n      </button>\n\n      <div [@toggleContent]=\"animState\">\n        <div\n          [id]=\"accordion_controls_id\"\n          class=\"sprk-c-Accordion__content sprk-b-TypeBodyTwo\"\n        >\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </li>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkAccordionItemComponent implements OnInit {\n  /**\n   * The value supplied will be rendered\n   * inside the title area of the Accordion item.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * heading in the Accordion item.\n   */\n  @Input()\n  additionalHeadingClasses: string;\n  /**\n   * The Accordion item will use this to decide\n   * if it should be open or closed on first render.\n   * (Interacting with the toggle will override this input.)\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * If `true`, the active CSS class\n   * will be applied to the item.\n   */\n  @Input()\n  isActive: boolean;\n  /**\n   * The name of the icon to use for\n   * a closed Accordion item.\n   */\n  @Input()\n  iconTypeClosed = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use for\n   * an open Accordion item.\n   */\n  @Input()\n  iconTypeOpen = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use before\n   * the title in the Accordion item.\n   * This is optional.\n   */\n  @Input()\n  leadingIcon: string;\n\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  accordion_controls_id = `accordionHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  public currentIconType = this.iconTypeClosed;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  accordionState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.currentIconType = this.iconTypeClosed)\n      : (this.currentIconType = this.iconTypeOpen);\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n\n  /**\n   * @ignore\n   */\n  toggleAccordion(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.accordionState();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Accordion__item',\n      'sprk-u-Overflow--hidden'\n    ];\n\n    if (this.isOpen) {\n      classArray.push('sprk-c-Accordion__item--open');\n    }\n\n    if (this.isActive) {\n      classArray.push('sprk-c-Accordion__item--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getHeadingClasses(): string {\n    const classArray: string[] = ['sprk-c-Accordion__heading'];\n\n    if (this.additionalHeadingClasses) {\n      this.additionalHeadingClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit() {\n    this.accordionState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkAccordionItemComponent } from './sprk-accordion-item.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],\n  declarations: [SprkAccordionItemComponent],\n  exports: [SprkAccordionItemComponent]\n})\nexport class SprkAccordionItemModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'sprk-link',\n  template: `\n    <a\n      (click)=\"handleClick($event)\"\n      [ngClass]=\"getClasses()\"\n      [href]=\"href\"\n      [attr.data-analytics]=\"analyticsString\"\n      [attr.target]=\"target\"\n      [attr.data-id]=\"idString\"\n      [attr.disabled]=\"isDisabled\"\n      [attr.aria-controls]=\"ariaControls\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      [attr.aria-haspopup]=\"ariaHasPopUp\"\n      [attr.role]=\"role\"\n      [attr.id]=\"id\"\n      [attr.aria-current]=\"ariaCurrent\"\n      [attr.aria-expanded]=\"ariaExpanded\"\n      [attr.aria-hidden]=\"ariaHidden\"\n      [attr.aria-selected]=\"ariaSelected\"\n    >\n      <ng-content></ng-content>\n    </a>\n  `\n})\n/**\n * @deprecate This component will be removed in\n * a future release in favor of the `sprkLink` directive.\n * Please use the Spark Link\n * directive.\n */\nexport class SprkLinkComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public router: Router) {}\n\n  /**\n   * Will cause the appropriate variant type to render.\n   * Optional values are: `simple`, `icon`, `unstyled` or `plain`.\n   * If omitted, the default Spark Link class is applied.\n   * The `unstyled` variant will render an `href` with no\n   * CSS classes.\n   */\n  @Input()\n  linkType: string;\n  /**\n   * The `href` value of the link. If omitted,\n   * the href will be set to `#`\n   * and the routing will be disabled. If\n   * set to reference an ID then the page\n   * will scroll to that anchor as normal.\n   */\n  @Input()\n  href: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Value for the `role`\n   * attribute of the link.\n   */\n  @Input()\n  role: string;\n  /**\n   * The string that will be\n   * assigned to the `id` attribute of\n   * the link.\n   */\n  @Input()\n  id: string;\n  /**\n   * Expects a value to assign to the\n   * `aria-controls` attribute of the link.\n   */\n  @Input()\n  ariaControls: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-labelledby` attribute of the link.\n   */\n  @Input()\n  ariaLabelledby: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-selected` attribute of the link.\n   */\n  @Input()\n  ariaSelected: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-hidden` attribute of the link.\n   */\n  @Input()\n  ariaHidden: string;\n  /**\n   * Expects a value to assign\n   * to the `aria-curren`t attribute of the link.\n   */\n  @Input()\n  ariaCurrent: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-expanded `attribute of the link.\n   */\n  @Input()\n  ariaExpanded: string;\n  /**\n   * Expects a value to assign\n   * to the `aria-haspopup` attribute of the link.\n   */\n  @Input()\n  ariaHasPopUp: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-label` attribute of the link.\n   */\n  @Input()\n  ariaLabel: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a value to assign to\n   * the `target` attribute of the link.\n   */\n  @Input()\n  target: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, will set disabled styles on the link.\n   */\n  @Input()\n  isDisabled: boolean;\n  /**\n   * By default, the component determines if\n   * the `href` is an external or internal link\n   * by looking for the `:` character in the\n   * `href` string. If external link functionality\n   * is desired with an `href` value that contains\n   * a `:` set this input to true. This overrides\n   * the default and avoids using the Angular Router.\n   */\n  @Input()\n  isExternal = false;\n\n  ngOnInit() {\n\n    // This message is split up like this so that we can keep the line\n    // length down in the editor while also logging a single unformatted\n    // line of text in the console.\n    const message = 'Spark Design System Warning: Spark Link has been ' +\n    'refactored to be an Angular Directive. The old Angular Component ' +\n    'version has been deprecated. This version will be permanently removed ' +\n    'from Spark in our Summer 2020 release. To update to the new version, ' +\n    'replace any instance of the <sprk-link> component in your codebase with ' +\n    'the new Directive syntax.';\n\n    console.warn(message);\n\n    // Sets the default href if none provided\n    if (this.href === '' || this.href === null || this.href === undefined) {\n      this.href = '#';\n      return;\n    }\n    // Build jump link's href\n    if (this.isJumpLink(this.href)) {\n      this.href = `${this.getPathWithoutHash(this.router.url)}${this.href}`;\n    }\n  }\n  /**\n   * @ignore\n   */\n  isExternalLink(value): boolean {\n    return new RegExp('^.*:', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isJumpLinkWithPage(value): boolean {\n    return new RegExp('^.*#.+', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isJumpLink(value): boolean {\n    return new RegExp('^#.+', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isNoActionLink(value): boolean {\n    return value === '#';\n  }\n  /**\n   * @ignore\n   */\n  getPathWithoutHash(value): string {\n    return value.split('#')[0];\n  }\n  /**\n   * @ignore\n   */\n  scrollToId() {\n    const elementID = this.href.split('#').pop();\n    const element: HTMLElement = document.getElementById(elementID);\n    if (element) {\n      element.scrollIntoView();\n    }\n  }\n  /**\n   * @ignore\n   */\n  handleClick(event): void {\n    // Let browser handle route if external Link\n    if (this.isExternalLink(this.href) || this.isExternal) {\n      return;\n    }\n\n    event.preventDefault();\n\n    // Prevent default and return\n    if (this.isNoActionLink(this.href)) {\n      return;\n    } else if (this.isJumpLinkWithPage(this.href)) {\n      if (\n        this.getPathWithoutHash(this.href) ===\n        this.getPathWithoutHash(this.router.url)\n      ) {\n        this.scrollToId();\n      } else {\n        this.router.navigateByUrl(this.href);\n      }\n    } else {\n      this.router.navigateByUrl(this.href);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [];\n\n    switch (this.linkType) {\n      case 'unstyled':\n        break;\n      case 'simple':\n        classArray.push('sprk-b-Link sprk-b-Link--simple');\n        break;\n      case 'plain':\n        classArray.push('sprk-b-Link sprk-b-Link--plain');\n        break;\n      case 'icon':\n        classArray.push(\n          'sprk-b-Link sprk-b-Link--simple sprk-b-Link--has-icon'\n        );\n        break;\n      default:\n        classArray.push('sprk-b-Link');\n        break;\n    }\n\n    if (this.isDisabled) {\n      classArray.push('sprk-b-Link--disabled');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkLinkComponent } from './sprk-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkLinkComponent],\n  exports: [SprkLinkComponent]\n})\nexport class SprkLinkModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-accordion',\n  template: `\n    <ul [ngClass]=\"getClasses()\">\n      <ng-content></ng-content>\n    </ul>\n  `\n})\nexport class SprkAccordionComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Accordion', 'sprk-o-VerticalList'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkModule } from '../sprk-link/sprk-link.module';\nimport { SprkAccordionComponent } from './sprk-accordion.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SprkIconModule, SprkLinkModule],\n  declarations: [SprkAccordionComponent],\n  exports: [SprkAccordionComponent]\n})\nexport class SprkAccordionModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-alert',\n  template: `\n    <div\n      *ngIf=\"visible\"\n      [ngClass]=\"getClassesAlertContainer()\"\n      role=\"alert\"\n      [attr.data-analytics]=\"analyticsString\"\n      [attr.data-id]=\"idString\"\n    >\n      <div class=\"sprk-c-Alert__content\">\n        <sprk-icon\n          iconType=\"{{ icon }}\"\n          additionalClasses=\"sprk-c-Alert__icon sprk-c-Icon--l sprk-c-Icon--stroke-current-color\"\n          aria-hidden=\"true\"\n        ></sprk-icon>\n\n        <p class=\"sprk-c-Alert__text\"><ng-content></ng-content></p>\n      </div>\n\n      <button\n        *ngIf=\"dismissible !== false\"\n        class=\"sprk-c-Alert__icon sprk-c-Alert__icon--dismiss\"\n        type=\"button\"\n        title=\"Dismiss\"\n        (click)=\"alertDismiss($event)\"\n      >\n        <sprk-icon\n          iconType=\"close\"\n          additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n          aria-hidden=\"true\"\n        ></sprk-icon>\n      </button>\n    </div>\n  `\n})\nexport class SprkAlertComponent {\n  /**\n   * The type of Alert variant to render.\n   * \tCan be `info`, `fail`, or `success`.\n   */\n  @Input()\n  alertType: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `false`, the dismiss button will not be rendered and\n   * the Alert will not dismissible.\n   * If `true`, the dismiss button will be rendered and\n   * the Alert will be dismissible.\n   */\n  @Input()\n  dismissible: boolean;\n\n  /**\n   * @ignore\n   */\n  public icon: string;\n  /**\n   * @ignore\n   */\n  public visible = true;\n\n  /**\n   * @ignore\n   */\n  getClassesAlertContainer(): string {\n    const alertClassArray: string[] = ['sprk-c-Alert'];\n\n    switch (this.alertType) {\n      case 'success':\n        alertClassArray.push('sprk-c-Alert--success');\n        this.icon = 'check-mark';\n        break;\n      case 'info':\n        alertClassArray.push('sprk-c-Alert--info');\n        this.icon = 'bell';\n        break;\n      case 'fail':\n        alertClassArray.push('sprk-c-Alert--fail');\n        this.icon = 'exclamation';\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        alertClassArray.push(className);\n      });\n    }\n\n    return alertClassArray.join(' ');\n  }\n\n  /**\n   * When the dismiss button is clicked\n   * this method sets the visable state to `false`\n   * and hides the Alert component.\n   */\n  alertDismiss(event): void {\n    this.visible = false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkAlertComponent } from './sprk-alert.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SprkIconModule],\n  declarations: [SprkAlertComponent],\n  exports: [SprkAlertComponent]\n})\nexport class SprkAlertModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-divider',\n  template: `\n    <span [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\"> </span>\n  `\n})\nexport class SprkDividerComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Divider'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkDividerComponent } from './sprk-divider.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkDividerComponent],\n  exports: [SprkDividerComponent]\n})\nexport class SprkDividerModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  HostListener,\n  EventEmitter\n} from '@angular/core';\nimport { ISprkDropdownChoice } from './sprk-dropdown.interfaces';\n\n@Component({\n  selector: 'sprk-dropdown',\n  template: `\n    <div\n      [ngClass]=\"{\n        'sprk-c-MastheadMask': isOpen && dropdownType === 'mastheadSelector'\n      }\"\n    >\n      <div [ngClass]=\"{ 'sprk-o-Box': dropdownType === 'mastheadSelector' }\">\n        <a\n          sprkLink\n          [ngClass]=\"getTriggerClasses()\"\n          (click)=\"toggle($event)\"\n          [idString]=\"idString\"\n          [analyticsString]=\"analyticsString\"\n          aria-haspopup=\"listbox\"\n          href=\"#\"\n          [attr.aria-label]=\"triggerText ? triggerText : (screenReaderText || 'Choose One')\"\n        >\n          <span [ngClass]=\"getTriggerTextClasses()\">{{ triggerText }}</span>\n          <span class=\"sprk-u-ScreenReaderText\">{{ screenReaderText }}</span>\n          <sprk-icon\n            [iconType]=\"triggerIconType\"\n            additionalClasses=\"sprk-u-mls sprk-c-Icon--stroke-current-color {{\n              additionalIconClasses\n            }}\"\n          ></sprk-icon>\n        </a>\n      </div>\n\n      <div [ngClass]=\"getClasses()\" *ngIf=\"isOpen\">\n        <div\n          class=\"sprk-c-Dropdown__header\"\n          *ngIf=\"dropdownType === 'mastheadSelector' || title || selector\"\n        >\n          <h2 class=\"sprk-c-Dropdown__title sprk-b-TypeBodyTwo\" *ngIf=\"title\">\n            {{ title }}\n          </h2>\n\n          <a\n            sprkLink\n            *ngIf=\"selector && !title\"\n            variant=\"plain\"\n            class=\"sprk-o-Stack sprk-o-Stack--split@xxs sprk-o-Stack--center-column sprk-u-Width-100\"\n            (click)=\"toggle($event)\"\n            [attr.aria-label]=\"title\"\n            href=\"#\"\n          >\n            <span\n              class=\"sprk-c-Dropdown__title sprk-b-TypeBodyTwo sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n              >{{ selector }}</span\n            >\n            <sprk-icon\n              [iconType]=\"triggerIconType\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mls sprk-c-Icon--toggle sprk-Stack__item {{\n                additionalIconClasses\n              }}\"\n            ></sprk-icon>\n          </a>\n        </div>\n\n        <ul\n          class=\"sprk-c-Dropdown__links\"\n          role=\"listbox\"\n          [attr.aria-label]=\"title ? title : (screenReaderText || 'My Choices')\"\n        >\n          <li\n            class=\"sprk-c-Dropdown__item\"\n            *ngFor=\"let choice of choices; let i = index\"\n            [attr.data-sprk-dropdown-choice-index]=\"i\"\n            (click)=\"choiceClick($event)\"\n            [attr.aria-selected]=\"choice.active\"\n            role=\"option\"\n          >\n            <div *ngIf=\"choice.content; then content; else link\"></div>\n            <ng-template #link>\n              <a\n                sprkLink\n                variant=\"unstyled\"\n                [attr.href]=\"choice.href\"\n                [analyticsString]=\"choice.analyticsString\"\n                [ngClass]=\"{\n                  'sprk-c-Dropdown__link': true,\n                  'sprk-c-Dropdown__link--active': choice.active\n                }\"\n                [attr.aria-label]=\"choice.text\"\n                >{{ choice.text }}\n              </a>\n            </ng-template>\n            <ng-template #content>\n              <a\n                sprkLink\n                variant=\"unstyled\"\n                [attr.href]=\"choice.href\"\n                [analyticsString]=\"choice.analyticsString\"\n                [ngClass]=\"{\n                  'sprk-c-Dropdown__link': true,\n                  'sprk-c-Dropdown__link--active': choice.active\n                }\"\n                [attr.aria-label]=\"choice.content.title\"\n              >\n                <p class=\"sprk-b-TypeBodyOne\">{{ choice.content.title }}</p>\n                <p>{{ choice.content.infoLine1 }}</p>\n                <p>{{ choice.content.infoLine2 }}</p>\n              </a>\n            </ng-template>\n          </li>\n        </ul>\n        <ng-content select=\"[sprkDropdownFooter]\"></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class SprkDropdownComponent {\n  /**\n   * The variant of the Dropdown to render.\n   */\n  @Input()\n  dropdownType = 'base';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon.\n   */\n  @Input()\n  additionalIconClasses: string;\n  /**\n   * Expects a space separated string of\n   * classes to be added to the trigger link element.\n   */\n  @Input()\n  additionalTriggerClasses: string;\n  /**\n   * Expects a space separated string of\n   * classes to be added to the trigger text.\n   */\n  @Input()\n  additionalTriggerTextClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * If `true`, the Dropdown will be open when rendered.\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * The value supplied will be displayed\n   * in a box above the choices.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to\n   * the title text.\n   */\n  @Input()\n  selector: string;\n  /**\n   * Expects an array of\n   * [ISprkDropdownChoice](https://github.com/sparkdesignsystem/spark-design-system/tree/master/src/angular/projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.interfaces.ts)\n   *  objects.\n   */\n  @Input()\n  choices: ISprkDropdownChoice[];\n  /**\n   * If supplied, will render the icon\n   * to the right of the trigger text.\n   */\n  @Input()\n  triggerIconType: string;\n  /**\n   * The text that is initially rendered to the trigger.\n   * If `dropdownType` is `informational`,\n   * clicking on a choice will change the trigger text.\n   */\n  @Input()\n  triggerText: string;\n  /**\n   * The value supplied will be visually hidden\n   * inside the trigger. Userful\n   * for when title is empty,\n   * and only `triggerIconType` is supplied.\n   */\n  @Input()\n  screenReaderText: string;\n  /**\n   * The event that is\n   * emitted from the Dropdown when a choice\n   * is clicked. The event contains the value\n   * of the choice that was clicked.\n   */\n  @Output()\n  choiceMade: EventEmitter<string> = new EventEmitter();\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n  /**\n   * @ignore\n   */\n  toggle(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event): void {\n    if (\n      !this.ref.nativeElement.contains(event.target) ||\n      event.target.classList.contains('sprk-c-MastheadMask')\n    ) {\n      this.hideDropdown();\n    }\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusin(event): void {\n    /* istanbul ignore else: angular focus event isnt setting e.target */\n    if (\n      !this.ref.nativeElement.contains(event.target) ||\n      event.target.classList.contains('sprk-c-MastheadMask')\n    ) {\n      this.hideDropdown();\n    }\n  }\n  /**\n   * @ignore\n   */\n  choiceClick(event) {\n    this.clearActiveChoices();\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    const clickedChoice = this.choices[choiceIndex];\n    if (\n      this.dropdownType === 'informational' ||\n      this.dropdownType === 'mastheadSelector'\n    ) {\n      this.setActiveChoice(event);\n      this.updateTriggerText(event);\n    }\n    this.hideDropdown();\n    this.choiceMade.emit(clickedChoice['value']);\n  }\n  /**\n   * @ignore\n   */\n  setActiveChoice(event): void {\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    this.choices[choiceIndex]['active'] = true;\n  }\n  /**\n   * @ignore\n   */\n  updateTriggerText(event): void {\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    this.triggerText = this.choices[choiceIndex]['value'];\n  }\n\n  /**\n   * @ignore\n   */\n  clearActiveChoices(): void {\n    this.choices.forEach((choice: ISprkDropdownChoice) => {\n      choice['active'] = false;\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  hideDropdown(): void {\n    this.isOpen = false;\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Dropdown'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTriggerClasses(): string {\n    const classArray: string[] = [];\n\n    if (this.additionalTriggerClasses) {\n      this.additionalTriggerClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTriggerTextClasses(): string {\n    const classArray: string[] = [''];\n\n    if (this.additionalTriggerTextClasses) {\n      this.additionalTriggerTextClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkDropdownComponent } from './sprk-dropdown.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],\n  declarations: [SprkDropdownComponent],\n  exports: [SprkDropdownComponent]\n})\nexport class SprkDropdownModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-stack',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-analytics]=\"analyticsString\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkStackComponent {\n  /**\n   * The value supplied can be `tiny`, `small`, `medium`, `large`, or `huge`.\n   * This is used as the breakpoint at which the component\n   * moves or \"splits\" to a side by side layout.\n   */\n  @Input()\n  splitAt: string;\n  /**\n   * This is used as the amount of spacing\n   * between the child `sprkStackItem` items.\n   * The value supplied can be `tiny`, `small`, `medium`, `large`, or `huge`.\n   */\n  @Input()\n  itemSpacing: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-o-Stack'];\n\n    // Handle the choice of item split breakpoint by adding CSS class\n    switch (this.splitAt) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--split@xs');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--split@s');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--split@m');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--split@l');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--split@xl');\n        break;\n      default:\n        break;\n    }\n\n    // Handle the choice of item spacing by adding CSS class\n    switch (this.itemSpacing) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--tiny');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--small');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--medium');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--large');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--huge');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkStackComponent } from './sprk-stack.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkStackComponent],\n  exports: [SprkStackComponent]\n})\nexport class SprkStackModule {}\n","import { Component, Input, AfterViewInit } from '@angular/core';\nimport { toggleAnimations } from './sprk-toggle-animations';\nimport { uniqueId } from 'lodash';\nimport 'focus-visible';\n\n@Component({\n  selector: 'sprk-toggle',\n  template: `\n    <div\n      class=\"sprk-c-Toggle {{ additionalClasses }}\"\n      [attr.data-id]=\"idString\"\n    >\n      <button\n        variant=\"icon\"\n        [ngClass]=\"getClasses()\"\n        (click)=\"toggle($event)\"\n        [attr.aria-expanded]=\"isOpen ? 'true' : 'false'\"\n        [attr.data-analytics]=\"analyticsString\"\n        [attr.aria-controls]=\"contentId\"\n      >\n        <sprk-icon\n          iconType=\"chevron-down-circle-two-color\"\n          additionalClasses=\"{{\n            iconClass\n          }} sprk-c-Icon--l sprk-u-mrs sprk-c-Icon--toggle {{ iconStateClass }}\"\n        ></sprk-icon>\n        {{ title }}\n      </button>\n\n      <div\n        [@toggleContent]=\"animState\"\n        [id]=\"contentId\"\n      >\n        <div class=\"sprk-u-pts sprk-u-pbs sprk-c-Toggle__content\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkToggleComponent implements AfterViewInit {\n\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be\n   * rendered as the main Toggle link text.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned as a\n   * CSS class on the icon used in the Toggle.\n   * This is intended for overrides.\n   */\n  @Input()\n  iconClass: string;\n  /**\n   * The value supplied will be assigned as a CSS class\n   * on the clickable title text used in the Toggle.\n   * This is intended for overrides.\n   */\n  @Input()\n  titleFontClass = 'sprk-b-TypeBodyThree';\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * A string that is used to set the `id` on the content\n   * and the `aria-controls` for the toggle trigger button.\n   */\n  @Input()\n  contentId = uniqueId(`sprk_toggle_content_`);\n\n  /**\n   * @ignore\n   */\n  public isOpen = false;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  toggleState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n\n  /**\n   * @ignore\n   */\n  toggle(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.toggleState();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Toggle__trigger sprk-u-TextCrop--none',\n      this.titleFontClass,\n    ];\n    return classArray.join(' ');\n  }\n\n  ngAfterViewInit() {\n    this.toggleState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkToggleComponent } from './sprk-toggle.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkIconModule,\n    SprkLinkDirectiveModule\n  ],\n  declarations: [SprkToggleComponent],\n  exports: [SprkToggleComponent]\n})\nexport class SprkToggleModule {}\n","import { Component, Input } from '@angular/core';\nimport {\n  ISprkFooterGlobalLink,\n  ISprkFooterLocalLinkColumn,\n  ISprkFooterSocialLink,\n  ISprkFooterAward,\n  ISprkFooterBadgeLink,\n  ISprkDisclaimerText,\n  ISprkDisclaimerToggle\n} from './sprk-footer.interfaces';\n\n@Component({\n  selector: 'sprk-footer',\n  template: `\n    <div class=\"sprk-o-Box sprk-o-Box--large sprk-u-BackgroundColor--gray\">\n      <footer\n        [ngClass]=\"getClasses()\"\n        role=\"contentinfo\"\n        [attr.data-id]=\"idString\"\n      >\n        <div\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m\"\n        >\n          <div\n            *ngIf=\"globalLinks\"\n            class=\"sprk-o-Stack__item sprk-o-Stack__item--three-tenths@m sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-prh\"\n          >\n            <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n              {{ globalHeading }}\n            </h3>\n\n            <div\n              *ngFor=\"let item of globalLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium\"\n            >\n              <div class=\"sprk-o-Stack__item\">\n                <a\n                  sprkLink\n                  variant=\"plain\"\n                  href=\"{{ item.href }}\"\n                  analyticsString=\"{{ item.analytics || item.analyticsString }}\"\n                >\n                  <sprk-icon\n                    *ngIf=\"item.icon\"\n                    iconType=\"{{ item.icon }}\"\n                    additionalClasses=\"{{ item.iconCSS }}\"\n                  ></sprk-icon>\n                  <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                    item.iconScreenReaderText\n                  }}</span>\n                  <img\n                    *ngIf=\"item.imgSrc\"\n                    src=\"{{ item.imgSrc }}\"\n                    alt=\"{{ item.imgAlt }}\"\n                    class=\"{{ item.imgCSS }}\"\n                  />\n                </a>\n              </div>\n\n              <p class=\"sprk-o-Stack__item sprk-b-TypeBodyFour\">\n                {{ item.text }}\n              </p>\n            </div>\n          </div>\n\n          <div\n            class=\"sprk-o-Stack__item sprk-o-Stack__item--seven-tenths@m sprk-o-Stack sprk-o-Stack--medium\"\n          >\n            <div\n              *ngIf=\"localLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m\"\n            >\n              <div\n                *ngFor=\"let item of localLinks\"\n                class=\"sprk-o-Stack__item sprk-o-Stack__item--third@m sprk-o-Box sprk-u-PaddingRight--a sprk-o-Stack sprk-o-Stack--large\"\n              >\n                <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n                  {{ item.heading }}\n                </h3>\n\n                <ul\n                  class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-a sprk-b-List sprk-b-List--bare\"\n                >\n                  <li\n                    class=\"sprk-o-Stack__item\"\n                    *ngFor=\"let link of item.links\"\n                  >\n                    <a\n                      sprkLink\n                      variant=\"simple\"\n                      class=\"sprk-u-FontWeight--normal\"\n                      href=\"{{ link.href }}\"\n                      analyticsString=\"{{ link.analyticsString || link.analytics }}\"\n                    >\n                      {{ link.text }}\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div\n              *ngIf=\"socialLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Box\"\n            >\n              <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n                {{ connectHeading }}\n              </h3>\n\n              <div\n                class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Stack--split@m\"\n              >\n                <ul\n                  *ngIf=\"socialLinks\"\n                  class=\"\n                    sprk-o-Stack__item\n                    sprk-o-Stack__item--flex@m\n                    sprk-o-Stack\n                    sprk-o-Stack--split@xxs\n                    sprk-o-Stack--medium\n                    sprk-b-List\n                    sprk-b-List--bare\"\n                >\n                  <li\n                    *ngFor=\"let item of socialLinks\"\n                    class=\"sprk-o-Stack__item\"\n                  >\n                    <a\n                      sprkLink\n                      variant=\"plain\"\n                      href=\"{{ item.href }}\"\n                      analyticsString=\"{{ item.analytics || item.analyticsString }}\"\n                    >\n                      <sprk-icon\n                        *ngIf=\"item.icon\"\n                        iconType=\"{{ item.icon }}\"\n                        additionalClasses=\"{{ item.iconCSS }}\"\n                      ></sprk-icon>\n                      <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                        item.iconScreenReaderText\n                      }}</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <span\n          class=\"sprk-c-Divider sprk-u-mvn sprk-u-mhm\"\n          data-id=\"divider-1\"\n        ></span>\n\n        <div\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-PaddingTop--b\"\n        >\n          <div\n            *ngIf=\"awards\"\n            class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large\"\n          >\n            <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n              {{ awardsHeading }}\n            </h3>\n\n            <div\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@s sprk-u-mbm\"\n            >\n              <div class=\"sprk-o-Stack__item\" *ngFor=\"let award of awards\">\n                <a\n                  sprkLink\n                  variant=\"plain\"\n                  class=\"sprk-o-Stack__item\"\n                  href=\"{{ award.href }}\"\n                  analyticsString=\"{{ award.analytics || award.analyticsString }}\"\n                >\n                  <img\n                    *ngIf=\"award.imgSrc\"\n                    src=\"{{ award.imgSrc }}\"\n                    alt=\"{{ award.imgAlt }}\"\n                    class=\"{{ award.imgCSS }}\"\n                  />\n                </a>\n              </div>\n            </div>\n\n            <div\n              *ngFor=\"let toggle of disclaimerToggle\"\n              class=\"sprk-o-Stack__item\"\n            >\n              <sprk-toggle\n                title=\"{{ toggle.title }}\"\n                analyticsString=\"{{ toggle.analytics || toggle.analyticsString }}\"\n                iconClass=\"sprk-c-Icon--stroke-current-color\"\n                titleFontClass=\"sprk-b-TypeBodyFour\"\n              >\n                <p class=\"sprk-b-TypeBodyFour\">{{ toggle.body }}</p>\n              </sprk-toggle>\n            </div>\n          </div>\n\n          <div\n            *ngIf=\"disclaimerText\"\n            class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large\"\n          >\n            <p\n              *ngFor=\"let disclaimer of disclaimerText\"\n              class=\"sprk-o-Stack__item sprk-b-TypeBodyFour\"\n            >\n              {{ disclaimer.text }}\n            </p>\n          </div>\n\n          <ul\n            *ngIf=\"badgeLinks\"\n            class=\"\n              sprk-o-Stack__item\n              sprk-o-Stack__item--flex@m\n              sprk-o-Stack\n              sprk-o-Stack--split@xxs\n              sprk-o-Stack--medium\n              sprk-b-List\n              sprk-b-List--bare\"\n          >\n            <li *ngFor=\"let item of badgeLinks\" class=\"sprk-o-Stack__item\">\n              <a\n                sprkLink\n                variant=\"plain\"\n                href=\"{{ item.href }}\"\n                analyticsString=\"{{ item.analytics || item.analyticsString }}\"\n              >\n                <sprk-icon\n                  *ngIf=\"item.icon\"\n                  iconType=\"{{ item.icon }}\"\n                  additionalClasses=\"{{ item.iconCSS }}\"\n                ></sprk-icon>\n                <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                  item.iconScreenReaderText\n                }}</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </footer>\n    </div>\n  `\n})\nexport class SprkFooterComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * The heading for the \"Global\" section.\n   */\n  @Input()\n  globalHeading: string;\n  /**\n   * The heading for the \"Awards\" section.\n   */\n  @Input()\n  awardsHeading: string;\n  /**\n   * The heading for the \"Connect With Us\" section.\n   */\n  @Input()\n  connectHeading: string;\n  /**\n   * Array of\n   * [ISprkFooterGlobalLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build the\n   * links in the \"Global\" section.\n   */\n  @Input()\n  globalLinks: ISprkFooterGlobalLink[];\n  /**\n   * Array of\n   * [ISprkFooterLocalLinkColumn](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build\n   * the columns of links\n   * in the \"Site Links\" section.\n   */\n  @Input()\n  localLinks: ISprkFooterLocalLinkColumn[];\n  /**\n   * Array of\n   * [ISprkFooterSocialLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build the\n   * icon links in the \"Connect With Us section\".\n   */\n  @Input()\n  socialLinks: ISprkFooterSocialLink[];\n  /**\n   * Array of\n   * [ISprkFooterAward](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build the\n   * awards in the \"Awards\" section.\n   */\n  @Input()\n  awards: ISprkFooterAward[];\n  /**\n   * Array of\n   * [ISprkFooterBadgeLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build the\n   * icon links in the icon\n   * section in the bottom\n   * of the Footer.\n   */\n  @Input()\n  badgeLinks: ISprkFooterBadgeLink[];\n  /**\n   * Array of\n   * [ISprkDisclaimerText](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build disclaimer text in the\n   * of the Footer.\n   */\n  @Input()\n  disclaimerText: ISprkDisclaimerText[];\n  /**\n   * Array of\n   * [ISprkDisclaimerToggle](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build\n   * the disclamer toggle(s) in\n   * the the Footer.\n   */\n  @Input()\n  disclaimerToggle: ISprkDisclaimerToggle[];\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-o-CenteredColumn sprk-o-Stack sprk-o-Stack--misc-b'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkStackItemModule } from '../../directives/sprk-stack-item/sprk-stack-item.module';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkStackModule } from '../sprk-stack/sprk-stack.module';\nimport { SprkToggleModule } from '../sprk-toggle/sprk-toggle.module';\nimport { SprkFooterComponent } from './sprk-footer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkIconModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    SprkToggleModule,\n    SprkLinkDirectiveModule\n  ],\n  declarations: [SprkFooterComponent],\n  exports: [SprkFooterComponent]\n})\nexport class SprkFooterModule {}\n","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'sprk-list-item',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `\n})\nexport class SprkListItemComponent {\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  @ViewChild(TemplateRef, { static: true }) content: TemplateRef<any>;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkListItemComponent } from './sprk-list-item.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkListItemComponent],\n  exports: [SprkListItemComponent]\n})\nexport class SprkListItemModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-masthead-accordion',\n  template: `\n    <nav role=\"navigation\" [attr.data-id]=\"idString\">\n      <ul [ngClass]=\"getClasses()\">\n        <ng-content></ng-content>\n      </ul>\n    </nav>\n  `\n})\nexport class SprkMastheadAccordionComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-MastheadAccordion',\n      'sprk-b-List',\n      'sprk-b-List--bare'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../../sprk-icon/sprk-icon.module';\nimport {\n  SprkMastheadAccordionComponent\n} from './sprk-masthead-accordion.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule],\n  declarations: [SprkMastheadAccordionComponent],\n  exports: [SprkMastheadAccordionComponent]\n})\nexport class SprkMastheadAccordionModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { toggleAnimations } from '../../sprk-toggle/sprk-toggle-animations';\n\n@Component({\n  selector: 'sprk-masthead-accordion-item',\n  template: `\n    <li [ngClass]=\"getClasses()\">\n      <div\n        class=\"sprk-u-Position--relative sprk-o-Stack__item sprk-u-Width-100\"\n      >\n        <button\n          [attr.aria-controls]=\"accordion_controls_id\"\n          class=\"sprk-c-MastheadAccordion__summary\"\n          [attr.data-analytics]=\"analyticsString\"\n          [attr.data-id]=\"idString\"\n          (click)=\"toggleAccordion($event)\"\n          [attr.aria-expanded]=\"isOpen\"\n        >\n          <span [ngClass]=\"getHeadingClasses()\">\n            <sprk-icon\n              [iconType]=\"leadingIcon\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-c-Icon--toggle sprk-u-mrs\"\n              *ngIf=\"leadingIcon\"\n            ></sprk-icon>\n            {{ title }}\n          </span>\n\n          <sprk-icon\n            additionalClasses=\"sprk-c-MastheadAccordion__icon sprk-c-Icon--stroke-current-color sprk-c-Icon--toggle {{\n              iconStateClass\n            }}\"\n            [iconType]=\"currentIconType\"\n          ></sprk-icon>\n        </button>\n      </div>\n\n      <div [@toggleContent]=\"animState\">\n        <div [id]=\"accordion_controls_id\"><ng-content></ng-content></div>\n      </div>\n    </li>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkMastheadAccordionItemComponent implements OnInit {\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * heading.\n   */\n  @Input()\n  additionalHeadingClasses: string;\n  /**\n   * If `true`, the Masthead accordion item\n   * will be open when it is rendered.\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * If `true`, the Masthead ccordion item\n   * will be active when it is rendered.\n   */\n  @Input()\n  isActive: boolean;\n  /**\n   * The name of the icon to use\n   * for the clickable close icon.\n   */\n  @Input()\n  iconTypeClosed = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use\n   * for the clickable open icon.\n   */\n  @Input()\n  iconTypeOpen = 'chevron-up-circle-two-color';\n  /**\n   * Expects a name of an icon to use\n   * as a leading icon for the Masthead accordion item.\n   */\n  @Input()\n  leadingIcon: string;\n\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  accordion_controls_id = `accordionHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  public currentIconType = this.iconTypeClosed;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  accordionState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.currentIconType = this.iconTypeClosed)\n      : (this.currentIconType = this.iconTypeOpen);\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n  /**\n   * @ignore\n   */\n  toggleAccordion(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.accordionState();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-MastheadAccordion__item',\n      'sprk-u-Overflow--hidden'\n    ];\n\n    if (this.isOpen) {\n      classArray.push('sprk-c-MastheadAccordion__item--open');\n    }\n\n    if (this.isActive) {\n      classArray.push('sprk-c-MastheadAccordion__item--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getHeadingClasses(): string {\n    const classArray: string[] = ['sprk-c-MastheadAccordion__heading'];\n\n    if (this.additionalHeadingClasses) {\n      this.additionalHeadingClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit() {\n    this.accordionState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../../sprk-icon/sprk-icon.module';\nimport {\n  SprkMastheadAccordionItemComponent\n} from './sprk-masthead-accordion-item.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule],\n  declarations: [SprkMastheadAccordionItemComponent],\n  exports: [SprkMastheadAccordionItemComponent]\n})\nexport class SprkMastheadAccordionItemModule {}\n","import {\n  Component,\n  HostListener,\n  Input,\n  Renderer2,\n  AfterContentInit\n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport * as _ from 'lodash';\nimport {\n  ISprkNarrowNavLink,\n  ISprkNarrowSelector,\n  ISprkBigNavLink\n} from './sprk-masthead.interfaces';\n\n@Component({\n  selector: 'sprk-masthead',\n  template: `\n    <header [ngClass]=\"getClasses()\" role=\"banner\" [attr.data-id]=\"idString\">\n      <div\n        class=\"sprk-c-Masthead__content sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--split@xxs\"\n      >\n        <div\n          class=\"sprk-c-Masthead__menu sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <button\n            class=\"sprk-c-Menu\"\n            type=\"button\"\n            [attr.aria-expanded]=\"isNarrowNavOpen ? true : false\"\n            (click)=\"toggleNarrowNav($event)\"\n            [attr.aria-controls]=\"narrowNavId\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">Toggle Navigation</span>\n            <svg\n              [ngClass]=\"{\n                'sprk-c-Icon': true,\n                'sprk-c-Icon--l': true,\n                'sprk-c-Menu__icon': true,\n                'sprk-c-Menu__icon--open': isNarrowNavOpen\n              }\"\n              aria-hidden=\"true\"\n              viewBox=\"0 0 64 64\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g>\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--two\"\n                  d=\"m8 32h48\"\n                />\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--one\"\n                  d=\"m8 18.68h48\"\n                />\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--three\"\n                  d=\"m8 45.32h48\"\n                />\n              </g>\n            </svg>\n          </button>\n        </div>\n\n        <div\n          class=\"sprk-c-Masthead__branding sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <a sprkLink [attr.href]=\"logoHref\" variant=\"unstyled\">\n            <ng-content select=\"[logo-slot]\"></ng-content>\n            <span class=\"sprk-u-ScreenReaderText\">{{\n              logoLinkScreenReaderText\n            }}</span>\n          </a>\n        </div>\n\n        <div\n          class=\"sprk-c-Masthead__nav-item sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <ng-content select=\"[navItem-slot]\"></ng-content>\n        </div>\n        <nav\n          class=\"\n          sprk-c-Masthead__little-nav\n          sprk-o-Stack__item\n          sprk-o-Stack__item--flex@xxs\n          sprk-o-Stack\n          sprk-o-Stack--misc-a\n          sprk-o-Stack--split@xxs\n          sprk-o-Stack--end-row\"\n          role=\"navigation\"\n        >\n          <ng-content select=\"[little-nav-slot]\"></ng-content>\n\n          <ng-content select=\"[utility-slot]\"></ng-content>\n        </nav>\n      </div>\n\n      <div class=\"sprk-o-Stack__item\">\n        <nav\n          class=\"sprk-c-Masthead__big-nav\"\n          role=\"navigation\"\n          [attr.data-id]=\"idString\"\n          *ngIf=\"bigNavLinks\"\n        >\n          <ul [ngClass]=\"getSecondaryNavClasses()\">\n            <li\n              *ngFor=\"let link of bigNavLinks\"\n              [ngClass]=\"{\n                'sprk-c-Masthead__big-nav-item': true,\n                'sprk-o-Stack__item': true,\n                'sprk-c-Masthead__big-nav-item--open':\n                  link.focused && link.subNav\n              }\"\n              routerLinkActive=\"sprk-c-Masthead__big-nav-item--active\"\n              [attr.aria-haspopup]=\"link.subNav ? 'true' : null\"\n            >\n              <div *ngIf=\"link.subNav\">\n                <sprk-dropdown\n                  [choices]=\"link.subNav\"\n                  additionalTriggerClasses=\"sprk-b-Link--plain sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n                  additionalClasses=\"sprk-u-TextAlign--left\"\n                  triggerIconType=\"chevron-down\"\n                  [analyticsString]=\"link.analyticsString\"\n                  [triggerText]=\"link.text\"\n                ></sprk-dropdown>\n              </div>\n              <div *ngIf=\"!link.subNav\">\n                <a\n                  sprkLink\n                  variant=\"plain\"\n                  [analyticsString]=\"link.analyticsString\"\n                  class=\"sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n                  [attr.href]=\"link.href\"\n                >\n                  {{ link.text }}\n                </a>\n              </div>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <nav\n        *ngIf=\"isNarrowNavOpen\"\n        class=\"sprk-c-Masthead__narrow-nav\"\n        role=\"navigation\"\n        [id]=\"narrowNavId\"\n      >\n        <sprk-dropdown\n          *ngIf=\"narrowSelector\"\n          dropdownType=\"mastheadSelector\"\n          additionalClasses=\"sprk-c-Masthead__selector-dropdown\"\n          additionalTriggerClasses=\"\n            sprk-c-Masthead__selector\n            sprk-b-Link\n            sprk-b-Link--plain\n            sprk-o-Stack\n            sprk-o-Stack--split@xxs\n            sprk-o-Stack--center-column\"\n          additionalTriggerTextClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n          additionalIconClasses=\"sprk-Stack__item sprk-u-mrs\"\n          [triggerText]=\"narrowSelector['trigger'].text\"\n          selector=\"Select One\"\n          triggerIconType=\"chevron-down\"\n          [choices]=\"narrowSelector['choices']\"\n        >\n          <div\n            *ngIf=\"narrowSelector['footer']\"\n            class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n            sprkDropdownFooter\n          >\n            <a\n              sprkLink\n              variant=\"unstyled\"\n              [analyticsString]=\"narrowSelector['footer'].analyticsString\"\n              [attr.href]=\"narrowSelector['footer'].href\"\n              class=\"sprk-c-Button sprk-c-Button--tertiary\"\n            >\n              {{ narrowSelector['footer'].text }}\n            </a>\n          </div>\n        </sprk-dropdown>\n\n        <sprk-masthead-accordion [additionalClasses]=\"getNarrowNavClasses()\">\n          <div *ngFor=\"let narrowLink of narrowNavLinks\">\n            <div *ngIf=\"narrowLink.subNav\">\n              <sprk-masthead-accordion-item\n                iconTypeOpen=\"chevron-down\"\n                iconTypeClosed=\"chevron-down\"\n                [leadingIcon]=\"narrowLink.leadingIcon\"\n                [isActive]=\"narrowLink.active\"\n                [title]=\"narrowLink.text\"\n              >\n                <ul\n                  class=\"sprk-b-List sprk-b-List--bare sprk-c-MastheadAccordion__details\"\n                >\n                  <li\n                    class=\"sprk-c-MastheadAccordion__item\"\n                    *ngFor=\"let subNavLink of narrowLink.subNav\"\n                  >\n                    <a\n                      sprkLink\n                      variant=\"unstyled\"\n                      class=\"sprk-c-MastheadAccordion__summary\"\n                      [attr.href]=\"subNavLink.href\"\n                      [analyticsString]=\"subNavLink.analyticsString\"\n                    >\n                      <sprk-icon\n                        [iconType]=\"subNavLink.leadingIcon\"\n                        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                        *ngIf=\"subNavLink.leadingIcon\"\n                      ></sprk-icon>\n                      {{ subNavLink.text }}\n                    </a>\n                  </li>\n                </ul>\n              </sprk-masthead-accordion-item>\n            </div>\n            <div *ngIf=\"!narrowLink.subNav\">\n              <li\n                [ngClass]=\"{\n                  'sprk-c-MastheadAccordion__item': true,\n                  'sprk-c-MastheadAccordion__item--active': narrowLink.active\n                }\"\n              >\n                <a\n                  sprkLink\n                  variant=\"unstyled\"\n                  class=\"sprk-c-MastheadAccordion__summary\"\n                  [attr.href]=\"narrowLink.href\"\n                  [analyticsString]=\"narrowLink.analyticsString\"\n                >\n                  <span class=\"sprk-c-MastheadAccordion__heading\">\n                    <sprk-icon\n                      [iconType]=\"narrowLink.leadingIcon\"\n                      additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                      *ngIf=\"narrowLink.leadingIcon\"\n                    ></sprk-icon>\n                    {{ narrowLink.text }}\n                  </span>\n                </a>\n              </li>\n            </div>\n          </div>\n        </sprk-masthead-accordion>\n        <ng-content select=\"[narrowNavFooter]\"></ng-content>\n      </nav>\n    </header>\n  `\n})\nexport class SprkMastheadComponent implements AfterContentInit {\n  /**\n   * @ignore\n   */\n  constructor(private renderer: Renderer2, router: Router) {\n    router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        this.closeNarrowNav();\n      }\n    });\n  }\n\n /**\n  *  The `href` value of the logo.\n  */\n  @Input()\n  logoHref = '/';\n  /**\n   * The value supplied will be used as\n   * screen reader text that is visually hidden\n   * for the link that wraps the logo.\n   */\n  @Input()\n  logoLinkScreenReaderText = 'Go to the homepage';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * big navigation link container.\n   */\n  @Input()\n  additionalBigNavClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * narrow navigation container.\n   */\n  @Input()\n  additionalNarrowNavClasses: string;\n  /**\n   * Expects an array of\n   * [ISprkNarrowNavLink](https://github.com/sparkdesignsystem/spark-design-system/tree/master/src/angular/projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.interfaces.ts)\n   * to be\n   * represented in the narrow nav element\n   * of the Masthead component.\n   */\n  @Input()\n  narrowNavLinks: ISprkNarrowNavLink[];\n  /**\n   * Represents the initial state of the\n   * narrow nav element of the Masthead component.\n   */\n  @Input()\n  isNarrowNavOpen = false;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects an array of\n   * [ISprkBigNavLink](https://github.com/sparkdesignsystem/spark-design-system/tree/master/src/angular/projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.interfaces.ts)\n   * to be\n   * used to create the Big Navigation of\n   * the Masthead component.\n   */\n  @Input()\n  bigNavLinks: ISprkBigNavLink[];\n  /**\n   * Expects a [ISprkNarrowSelector](https://github.com/sparkdesignsystem/spark-design-system/tree/master/src/angular/projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.interfaces.ts)\n   * object that\n   * represents dropdown choices inside the dropdown\n   * rendered in the Narrow Navigation.\n   */\n  @Input()\n  narrowSelector: ISprkNarrowSelector;\n  /**\n   * A string that is used to set the `id` on the narrow nav\n   * and the `aria-controls` for the menu trigger button.\n   */\n  @Input()\n  narrowNavId = _.uniqueId(`sprk_masthead_narrow_nav_`);\n\n  /**\n   * @ignore\n   */\n  iconType = 'chevron-down';\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  controls_id = `sprk-narrow-navigation-item__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  isScrolled = false;\n  /**\n   * @ignore\n   */\n  isNarrowLayout = false;\n  /**\n   * @ignore\n   */\n  scrollDirection = 'up';\n  /**\n   * @ignore\n   */\n  isHidden = false;\n  /**\n   * @ignore\n   */\n  isNarrowOnResize = false;\n  /**\n   * @ignore\n   */\n  scrollPosition = 0;\n  /**\n   * @ignore\n   */\n  throttledCheckScrollDirection = _.throttle(this.checkScrollDirection, 500);\n  /**\n   * @ignore\n   */\n  throttledUpdateLayoutState = _.throttle(this.updateLayoutState, 500);\n\n  /**\n   * @ignore\n   * Closes the narrow navigation menu\n   * if it is left open when\n   * the viewport is expanded.\n   */\n  @HostListener('window:orientationchange')\n  handleResizeEvent() {\n    this.closeNarrowNav();\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('window:scroll', ['$event'])\n  onScroll(event): void {\n    window.scrollY >= 10 ? (this.isScrolled = true) : (this.isScrolled = false);\n    if (this.isNarrowLayout) {\n      this.throttledCheckScrollDirection();\n    }\n  }\n\n  /**\n   * @ignore\n   * Handles when viewport size changes to\n   * large while narrow nav is hidden.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event): void {\n    this.isNarrowOnResize = this.isElementVisible('.sprk-c-Masthead__menu');\n    this.throttledUpdateLayoutState();\n  }\n\n  /**\n   * @ignore\n   */\n  updateLayoutState() {\n    if (this.isNarrowLayout !== this.isNarrowOnResize) {\n      this.isNarrowLayout = this.isNarrowOnResize;\n\n      // If is not narrow on resize update, make sure it's visible\n      if (!this.isNarrowLayout) {\n        this.isHidden = false;\n      }\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterContentInit() {\n    this.isNarrowLayout = this.isElementVisible('.sprk-c-Masthead__menu');\n  }\n\n  /**\n   * @ignore\n   */\n  isElementVisible(selector) {\n    if (typeof window === 'undefined') { return; }\n    const element = document.querySelector(selector);\n    if (!element) {\n      return;\n    }\n    const elementDisplayValue = window.getComputedStyle(element).display;\n    const elementVisibilityValue = window.getComputedStyle(element).visibility;\n    const elementIsVisible =\n      elementDisplayValue === 'none' || elementVisibilityValue === 'hidden'\n        ? false\n        : true;\n    return elementIsVisible;\n  }\n\n  /**\n   * @ignore\n   */\n  scrollYDirection() {\n    if (typeof window !== 'undefined') {\n      const newScrollPos = window.scrollY;\n      if (newScrollPos < 0) {\n        return;\n      }\n      const diff = newScrollPos - this.scrollPosition;\n      const direction = diff > 0 ? 'down' : 'up';\n      this.scrollPosition = newScrollPos;\n      return direction;\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  checkScrollDirection() {\n    const newDirection = this.scrollYDirection();\n    if (this.scrollDirection !== newDirection) {\n      this.scrollDirection = newDirection;\n      this.scrollDirection === 'down'\n        ? (this.isHidden = true)\n        : (this.isHidden = false);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Masthead', 'sprk-o-Stack'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    if (this.isNarrowNavOpen) {\n      classArray.push('sprk-c-Masthead--open');\n    }\n\n    if (this.isScrolled) {\n      classArray.push('sprk-c-Masthead--scroll');\n    }\n\n    if (this.isHidden) {\n      classArray.push('sprk-c-Masthead--hidden');\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getNarrowNavClasses(): string {\n    const classArray: string[] = [];\n\n    if (this.additionalNarrowNavClasses) {\n      this.additionalNarrowNavClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getSecondaryNavClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Masthead__big-nav-items',\n      'sprk-o-Stack',\n      'sprk-o-Stack--misc-a',\n      'sprk-o-Stack--center-row',\n      'sprk-o-Stack--split@xxs',\n      'sprk-b-List',\n      'sprk-b-List--bare'\n    ];\n\n    if (this.additionalBigNavClasses) {\n      this.additionalBigNavClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  toggleNarrowNav(event): void {\n    event.preventDefault();\n    if (this.isNarrowNavOpen) {\n      this.closeNarrowNav();\n    } else {\n      this.openNarrowNav();\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  openNarrowNav(): void {\n    this.renderer.addClass(document.body, 'sprk-u-Overflow--hidden');\n    this.renderer.addClass(\n      document.body.parentElement,\n      'sprk-u-Overflow--hidden'\n    );\n    this.renderer.addClass(document.body, 'sprk-u-Height--100');\n    this.renderer.addClass(document.body.parentElement, 'sprk-u-Height--100');\n    this.isNarrowNavOpen = true;\n  }\n\n  /**\n   * @ignore\n   */\n  closeNarrowNav(): void {\n    this.renderer.removeClass(document.body, 'sprk-u-Overflow--hidden');\n    this.renderer.removeClass(\n      document.body.parentElement,\n      'sprk-u-Overflow--hidden'\n    );\n    this.renderer.removeClass(document.body, 'sprk-u-Height--100');\n    this.renderer.removeClass(\n      document.body.parentElement,\n      'sprk-u-Height--100'\n    );\n    this.isNarrowNavOpen = false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport {\n  SprkMastheadAccordionModule\n} from './sprk-masthead-accordion/sprk-masthead-accordion.module';\nimport {\n  SprkMastheadAccordionItemModule\n} from './sprk-masthead-accordion-item/sprk-masthead-accordion-item.module';\nimport { SprkMastheadComponent } from './sprk-masthead.component';\nimport { SprkDropdownModule } from '../sprk-dropdown/sprk-dropdown.module';\nimport { SprkAccordionModule } from '../sprk-accordion/sprk-accordion.module';\nimport {\n  SprkAccordionItemModule\n} from '../sprk-accordion-item/sprk-accordion-item.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkIconModule,\n    RouterModule,\n    SprkMastheadAccordionModule,\n    SprkMastheadAccordionItemModule,\n    SprkDropdownModule,\n    SprkAccordionModule,\n    SprkAccordionItemModule,\n    SprkLinkDirectiveModule,\n  ],\n  declarations: [SprkMastheadComponent],\n  exports: [SprkMastheadComponent],\n})\nexport class SprkMastheadModule {}\n","import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output\n} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'sprk-modal',\n  template: `\n    <div\n      *ngIf=\"isVisible\"\n      [ngClass]=\"{\n        'sprk-c-Modal': true,\n        'sprk-c-Modal--wait': modalType === 'wait'\n      }\"\n      role=\"dialog\"\n      tabindex=\"1\"\n      [attr.aria-labelledby]=\"heading_id\"\n      aria-modal=\"true\"\n      [attr.aria-describedby]=\"content_id\"\n      [attr.data-id]=\"idString\"\n    >\n      <div class=\"sprk-o-Stack sprk-o-Stack--large\">\n        <header class=\"sprk-o-Stack__item sprk-c-Modal__header\">\n          <h2\n            class=\"sprk-c-Modal__heading sprk-b-TypeDisplayFour\"\n            [id]=\"heading_id\"\n          >\n            {{ title }}\n          </h2>\n\n          <button\n            *ngIf=\"modalType != 'wait'\"\n            class=\"sprk-c-Modal__icon\"\n            type=\"button\"\n            aria-label=\"Close Modal\"\n            (click)=\"closeModal($event)\"\n          >\n            <sprk-icon\n              iconType=\"close\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n            ></sprk-icon>\n          </button>\n        </header>\n\n        <div\n          class=\"sprk-o-Stack__item sprk-c-Modal__body sprk-o-Stack sprk-o-Stack--medium\"\n        >\n          <div\n            *ngIf=\"modalType == 'wait'\"\n            class=\"sprk-o-Stack__item sprk-c-Spinner sprk-c-Spinner--circle sprk-c-Spinner--large sprk-c-Spinner--dark\"\n          ></div>\n          <ng-content></ng-content>\n        </div>\n\n        <footer\n          *ngIf=\"modalType === 'choice'\"\n          class=\"sprk-o-Stack__item sprk-c-Modal__footer\"\n        >\n          <button\n            class=\"sprk-c-Button sprk-u-mrm\"\n            [attr.data-analytics]=\"confirmAnalyticsString\"\n            (click)=\"emitConfirmClick($event)\"\n          >\n            {{ confirmText }}\n          </button>\n\n          <button\n            class=\"sprk-c-Button sprk-c-Button--tertiary\"\n            [attr.data-analytics]=\"cancelAnalyticsString\"\n            (click)=\"emitCancelClick($event)\"\n          >\n            {{ cancelText }}\n          </button>\n        </footer>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"isVisible\"\n      class=\"sprk-c-ModalMask\"\n      tabindex=\"-1\"\n      (click)=\"closeModal($event)\"\n    ></div>\n  `\n})\nexport class SprkModalComponent {\n  @Input()\n  title: string;\n  /**\n   * This determines the variant of the Modal.\n   * Can be `choice`, `info`, or `wait`.\n   */\n  @Input()\n  modalType: string;\n  /**\n   * The value supplied will be\n   * rendered as the text for the confirm button.\n   */\n  @Input()\n  confirmText = 'Confirm';\n  /**\n   * The value supplied will be rendered\n   * as the text for the cancel button.\n   */\n  @Input()\n  cancelText = 'Cancel';\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute\n   * on the confirm button. Intended\n   * for an outside library to capture data.\n   */\n  @Input()\n  confirmAnalyticsString: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute\n   * on the cancel button. Intended\n   * for an outside library to capture data.\n   */\n  @Input()\n  cancelAnalyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * If `true`, the Modal will be shown.\n   * If `false`, the modal will not be shown.\n   */\n  @Input()\n  isVisible = false;\n  /**\n   * When the Modal is closed the hide event is\n   * emitted and a callback function can\n   * be triggered if supplied.\n   */\n  @Output()\n  hide = new EventEmitter<any>();\n  /**\n   * Available when the Modal type is `choice`.\n   * The Modal will emit a confirm click event\n   * when the confirmation button is clicked.\n   * A callback function can be triggered if\n   * supplied.\n   */\n  @Output()\n  confirmClick = new EventEmitter<any>();\n  /**\n   * Available when the Modal type is `choice`.\n   * The Modal will emit a cancel click event\n   * when the cancel link is clicked.\n   * A callback function can be triggered if supplied.\n   */\n  @Output()\n  cancelClick = new EventEmitter<any>();\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  heading_id = `modalHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  content_id = `modalContent__${this.componentID}`;\n\n  /**\n   * @ignore\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.isVisible && event.key === 'Escape') {\n      this.closeModal(event);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  closeModal(event): void {\n    if (this.modalType !== 'wait') {\n      event.preventDefault();\n      this.hide.emit(event);\n    }\n  }\n\n  /**\n   * Emits an event when the confirmation\n   * button is clicked.\n   */\n  emitConfirmClick(event): void {\n    this.confirmClick.emit(event);\n  }\n\n  /**\n   * Emits an event when the cancel\n   * link is clicked.\n   */\n  emitCancelClick(event): void {\n    event.preventDefault();\n    this.cancelClick.emit(event);\n    this.closeModal(event);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkModalComponent } from './sprk-modal.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SprkIconModule],\n  declarations: [SprkModalComponent],\n  exports: [SprkModalComponent]\n})\nexport class SprkModalModule {}\n","import { Component, Input, ContentChildren, QueryList } from '@angular/core';\nimport { SprkListItemComponent } from '../sprk-list-item/sprk-list-item.component';\n\n@Component({\n  selector: 'sprk-ordered-list',\n  template: `\n    <ol [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <li\n        *ngFor=\"let item of items\"\n        [attr.data-analytics]=\"item.analyticsString\"\n        [attr.data-id]=\"item.idString\"\n        [ngClass]=\"item.additionalClasses\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item.content\"></ng-container>\n      </li>\n    </ol>\n  `\n})\nexport class SprkOrderedListComponent {\n  /**\n   * Will cause the appropriate variant type to render.\n   * Can be `bare` or `indented`.\n   */\n  @Input()\n  listType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * This component expects children\n   * components of `<sprk-list-item></<sprk-list-item>`.\n   */\n  @ContentChildren(SprkListItemComponent) items: QueryList<\n    SprkListItemComponent\n  >;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-List'];\n\n    switch (this.listType) {\n      case 'indented':\n        classArray.push('sprk-b-List--indented');\n        break;\n      case 'bare':\n        classArray.push('sprk-b-List--bare');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkOrderedListComponent } from './sprk-ordered-list.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkOrderedListComponent],\n  exports: [SprkOrderedListComponent]\n})\nexport class SprkOrderedListModule {}\n","import { Component, Input, ContentChildren, QueryList } from '@angular/core';\nimport { SprkListItemComponent } from '../sprk-list-item/sprk-list-item.component';\n\n@Component({\n  selector: 'sprk-unordered-list',\n  template: `\n    <ul [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <li\n        *ngFor=\"let item of items\"\n        [attr.data-analytics]=\"item.analyticsString\"\n        [attr.data-id]=\"item.idString\"\n        [ngClass]=\"item.additionalClasses\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item.content\"></ng-container>\n      </li>\n    </ul>\n  `\n})\nexport class SprkUnorderedListComponent {\n  /**\n   * This value determines what List variant is rendered.\n   * Can be `bare` or `indented`.\n   */\n  @Input()\n  listType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * This component expects children `<sprk-list-item></sprk-list-item>`\n   * components.\n   */\n  @ContentChildren(SprkListItemComponent) items: QueryList<\n    SprkListItemComponent\n  >;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [''];\n\n    switch (this.listType) {\n      case 'indented':\n        classArray.push('sprk-b-List');\n        classArray.push('sprk-b-List--indented');\n        break;\n      case 'bare':\n        classArray.push('sprk-b-List');\n        classArray.push('sprk-b-List--bare');\n        break;\n      case 'horizontal':\n        classArray.push('sprk-o-HorizontalList');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkUnorderedListComponent } from './sprk-unordered-list.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkUnorderedListComponent],\n  exports: [SprkUnorderedListComponent]\n})\nexport class SprkUnorderedListModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sprk-pagination',\n  template: `\n    <nav\n      aria-label=\"Pagination Navigation\"\n      [ngClass]=\"getClasses()\"\n      [attr.data-id]=\"idString\"\n    >\n      <sprk-unordered-list\n        listType=\"horizontal\"\n        additionalClasses=\"sprk-c-Pagination sprk-o-HorizontalList--spacing-medium\"\n      >\n        <sprk-list-item>\n          <a\n            sprkLink\n            variant=\"plain\"\n            (click)=\"goBack($event, currentPage)\"\n            [isDisabled]=\"currentPage === 1\"\n            class=\"sprk-c-Pagination__icon\"\n            [analyticsString]=\"analyticsStringLinkPrev\"\n            aria-label=\"Previous Page\"\n            href=\"#\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">{{ prevLinkText }}</span>\n            <sprk-icon\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n              iconType=\"chevron-left\"\n            ></sprk-icon>\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item *ngIf=\"showNumbers()\">\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, 1)\"\n            [ngClass]=\"{\n              'sprk-c-Pagination__link': true,\n              'sprk-c-Pagination__link--current': currentPage === 1\n            }\"\n            [analyticsString]=\"analyticsStringFirstLink\"\n            [attr.aria-current]=\"currentPage === 1\"\n            aria-label=\"Page 1\"\n          >\n            1\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage !== 2 && totalPages() === 3\"\n        >\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, 2)\"\n            class=\"sprk-c-Pagination__link\"\n            [attr.aria-current]=\"false\"\n            aria-label=\"Page 2\"\n          >\n            2\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage > 2 && totalPages() > 3\"\n        >\n          ...\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage > 1 && currentPage < totalPages()\"\n        >\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, currentPage)\"\n            class=\"sprk-c-Pagination__link sprk-c-Pagination__link--current\"\n            aria-current=\"true\"\n            [analyticsString]=\"analyticsStringSecondLink\"\n            attr.aria-label=\"Page {{ currentPage }}\"\n          >\n            {{ currentPage }}\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"\n            showNumbers() && currentPage < totalPages() - 1 && totalPages() > 3\n          \"\n        >\n          ...\n        </sprk-list-item>\n\n        <sprk-list-item *ngIf=\"showNumbers() && totalPages() > 1\">\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, totalPages())\"\n            [ngClass]=\"{\n              'sprk-c-Pagination__link': true,\n              'sprk-c-Pagination__link--current': currentPage === totalPages()\n            }\"\n            attr.aria-label=\"Page {{ totalPages() }}\"\n            [analyticsString]=\"analyticsStringThirdLink\"\n            [attr.aria-current]=\"currentPage === totalPages()\"\n          >\n            {{ totalPages() }}\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item>\n          <a\n            sprkLink\n            href=\"#\"\n            variant=\"plain\"\n            [isDisabled]=\"isLastPage()\"\n            (click)=\"goForward($event, currentPage)\"\n            class=\"sprk-c-Pagination__icon\"\n            [analyticsString]=\"analyticsStringLinkNext\"\n            aria-label=\"Next Page\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">{{ nextLinkText }}</span>\n            <sprk-icon\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n              iconType=\"chevron-right\"\n            ></sprk-icon>\n          </a>\n        </sprk-list-item>\n      </sprk-unordered-list>\n    </nav>\n  `\n})\nexport class SprkPaginationComponent {\n  /**\n   * If set to `pager`, the component will render\n   * in the Pager variant with no visible number\n   * links. Otherwise, the component will render in\n   * the Default variant if there three or fewer\n   * pages or in the Long variant if there are\n   * more than three pages.\n   */\n  @Input()\n  paginationType = 'default';\n  /**\n   * The total number of items in the\n   * paged data. This is used to calculate\n   * the number of pages.\n   */\n  @Input()\n  totalItems: number;\n  /**\n   * The total number of items\n   * to render per page. This is\n   * used to calculate the number of pages.\n   */\n  @Input()\n  itemsPerPage: number;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Screen reader text for the \"Next Page\" icon.\n   */\n  @Input()\n  nextLinkText = 'Next';\n  /**\n   * Screen reader text for the \"Previous Page\"\n   * icon.\n   */\n  @Input()\n  prevLinkText = 'Prev';\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the first link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringFirstLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the second link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringSecondLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the third link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringThirdLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the \"Next\" link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringLinkNext: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the \"Prev\" link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringLinkPrev: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  private _currentPage = 1;\n\n  /**\n   * The current page number.\n   * In the Default and Long variants,\n   * this value corresponds to the active page link.\n   */\n  @Input()\n  set currentPage(value: number) {\n    if (value > this.totalPages()) {\n      value = this.totalPages();\n    } else if (value < 1) {\n      value = 1;\n    }\n\n    this._currentPage = value;\n  }\n  get currentPage(): number {\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a function to run when the\n   * previous link is clicked.\n   * On click, `previousClick`\n   * will emit the click event and current page.\n   */\n  @Output()\n  previousClick = new EventEmitter();\n  /**\n   * Accepts a function\n   * to run when the next link is clicked.\n   * On click, `nextClick` will emit the click event and current page.\n   */\n  @Output()\n  nextClick = new EventEmitter();\n  /**\n   * Accepts a function to run when the individual page\n   * links are clicked. On click, `pageClick` will\n   * emit the click event and current page.\n   */\n  @Output()\n  pageClick = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  goToPage(event, page): void {\n    event.preventDefault();\n    this.currentPage = page;\n    this.pageClick.emit({ event, page });\n  }\n\n  /**\n   * @ignore\n   */\n  goBack(event, page): void {\n    event.preventDefault();\n    let newPage = page;\n\n    if (this.currentPage > 1) {\n      newPage = this.currentPage - 1;\n      this.currentPage = newPage;\n    }\n\n    // Page is still returning the old page. This allows us to\n    // close Issue 1401 without introducing a breaking change.\n    this.previousClick.emit({ event, page, newPage });\n  }\n\n  /**\n   * @ignore\n   */\n  goForward(event, page): void {\n    event.preventDefault();\n    let newPage = page;\n\n    if (this.currentPage < this.totalPages()) {\n      newPage = this.currentPage + 1;\n      this.currentPage = newPage;\n    }\n\n    // Page is still returning the old page. This allows us to\n    // close Issue 1401 without introducing a breaking change.\n    this.nextClick.emit({ event, page, newPage });\n  }\n\n  /**\n   * @ignore\n   * @returns total number of pages based on total\n   * number of items and the desired number of\n   * items to show per page.\n   */\n  totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  /**\n   * @ignore\n   * @returns true if currently on the last page.\n   */\n  isLastPage(): boolean {\n    return this.currentPage === this.totalPages();\n  }\n\n  /**\n   * @ignore\n   * @returns true if the component is in\n   * either the default or long variant.\n   */\n  showNumbers(): boolean {\n    return this.paginationType !== 'pager';\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [''];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport {\n  SprkUnorderedListModule\n} from '../sprk-unordered-list/sprk-unordered-list.module';\nimport { SprkListItemModule } from '../sprk-list-item/sprk-list-item.module';\nimport { SprkPaginationComponent } from './sprk-pagination.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkUnorderedListModule,\n    SprkIconModule,\n    SprkLinkDirectiveModule,\n    SprkListItemModule\n  ],\n  declarations: [SprkPaginationComponent],\n  exports: [SprkPaginationComponent]\n})\nexport class SprkPaginationModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-promo',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"isFlag && !mediaRev\"\n        [ngClass]=\"getClassesFlag()\"\n        [attr.href]=\"imgHref\"\n        [analyticsString]=\"flagLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Promo__image--flag\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </a>\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"imgSrc && !mediaRev && !isFlag\"\n        [attr.href]=\"imgHref\"\n        [analyticsString]=\"imgLinkAnalytics\"\n        [ngClass]=\"getClassesImg()\"\n      >\n        <img\n          class=\"sprk-c-Promo__image\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </a>\n\n      <div [ngClass]=\"getClassesContent()\">\n        <h3\n          *ngIf=\"title\"\n          class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item sprk-c-Promo__title\"\n        >\n          {{ title }}\n        </h3>\n\n        <div *ngIf=\"subtitle\" class=\"sprk-c-Promo__subtitle sprk-o-Stack__item\">\n          {{ subtitle }}\n        </div>\n\n        <div class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">\n          <ng-content></ng-content>\n        </div>\n\n        <div *ngIf=\"cta === 'button'\" class=\"sprk-o-Stack__item\">\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            [attr.href]=\"buttonHref\"\n            class=\"sprk-c-Button\"\n            [analyticsString]=\"buttonLinkAnalytics\"\n          >\n            {{ ctaText }}\n          </a>\n        </div>\n\n        <a\n          sprkLink\n          variant=\"simple\"\n          *ngIf=\"cta === 'link'\"\n          [attr.href]=\"ctaLinkHref\"\n          class=\"sprk-o-Stack__item\"\n          [analyticsString]=\"ctaLinkAnalytics\"\n        >\n          {{ ctaText }}\n        </a>\n      </div>\n\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"isFlag && mediaRev\"\n        [attr.href]=\"imgHref\"\n        [ngClass]=\"getClassesFlag()\"\n        [analyticsString]=\"flagLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Promo__image--flag\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </a>\n\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"imgSrc && mediaRev && !isFlag\"\n        [attr.href]=\"imgHref\"\n        [analyticsString]=\"imgLinkAnalytics\"\n        [ngClass]=\"getClassesImg()\"\n      >\n        <img\n          class=\"sprk-c-Promo__image\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </a>\n    </div>\n  `\n})\nexport class SprkPromoComponent {\n  /**\n   * The main heading on the Promo.\n   */\n  @Input()\n  title: string;\n  /**\n   * If supplied, this will be used as the\n   * text for a subtitle.\n   */\n  @Input()\n  subtitle: string;\n  /**\n   * Can be `link` or `button`.\n   * This determines the type for the call to action in the Promo body.\n   */\n  @Input()\n  cta: string;\n  /**\n   * This determines the text for the call to action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * This will be the `href` for the button\n   * if `cta` is set to `button`.\n   */\n  @Input()\n  buttonHref: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the\n   * call-to-action button if `cta` is set to `button`.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  buttonLinkAnalytics: string;\n  /**\n   * This will be the href for the the link if `cta` is set to `link`.\n   */\n  @Input()\n  ctaLinkHref: string;\n  /**\n   * The value supplied will be assigned to\n   * the `data-analytics` attribute on the\n   * call-to-action link if `cta` is set to\n   * `link`. This is intended for an\n   * outside library to capture data.\n   */\n  @Input()\n  ctaLinkAnalytics: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * content container.\n   */\n  @Input()\n  additionalClassesContent: string;\n  /**\n   * If `true`, the Flag Promo variant will be rendered.\n   */\n  @Input()\n  isFlag: boolean;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * link surrounding the image in the Flag variant.\n   */\n  @Input()\n  additionalClassesFlagLink: string;\n  /**\n   * If `isFlag` is set to `true`,\n   * the Promo will render with\n   * an anchor element containing the\n   * image specified in `imgSrc`. The value\n   * supplied here will be assigned to the `data-analytics`\n   * attribute on that anchor element.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  flagLinkAnalytics: string;\n  /**\n   * The source value for the Promo image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * The `alt` text for the Promo image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * The `href` value for the Promo image.\n   */\n  @Input()\n  imgHref: string;\n  /**\n   * If `imgSrc` is true and `isFlag` is `false`,\n   * the value supplied will be assigned to\n   * the `data-analytics` attribute on the\n   * anchor containing the Promo image.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  imgLinkAnalytics: string;\n  /**\n   * If `imgSrc` is true and `isFlag` is false,\n   * this string of additional classes will\n   * be added to the anchor containing the Promo\n   * image. This is intended for overrides.\n   */\n  @Input()\n  additionalClassesImgLink: string;\n  /**\n   * If `true`, the media will render\n   * on the right side of the Promo content.\n   */\n  @Input()\n  mediaRev: boolean;\n  /**\n   * If `true`, the Promo will be rendered\n   * with a border.\n   */\n  @Input()\n  hasBorder: boolean;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Promo',\n      'sprk-o-Stack',\n      'sprk-o-Stack--split@s'\n    ];\n\n    if (this.isFlag) {\n      classArray.push('sprk-c-Promo--flag');\n    }\n\n    if (this.hasBorder) {\n      classArray.push('sprk-c-Promo--bordered');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesFlag(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item--fourth@s',\n      'sprk-o-Stack__item'\n    ];\n\n    if (this.additionalClassesFlagLink) {\n      this.additionalClassesFlagLink.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesImg(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item',\n      'sprk-o-Stack__item--half@s'\n    ];\n\n    if (this.additionalClassesImgLink) {\n      this.additionalClassesImgLink.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesContent(): string {\n    const classArray: string[] = [\n      'sprk-c-Promo__content',\n      'sprk-o-Stack__item',\n      'sprk-o-Stack',\n      'sprk-o-Stack--large'\n    ];\n\n    if (this.isFlag) {\n      classArray.push('sprk-o-Stack__item--three-fourths@s');\n    } else {\n      if (this.imgSrc) {\n        classArray.push('sprk-o-Stack__item--half@s');\n      }\n    }\n\n    if (this.additionalClassesContent) {\n      this.additionalClassesContent.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkPromoComponent } from './sprk-promo.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkIconModule,\n    SprkLinkDirectiveModule\n  ],\n  declarations: [SprkPromoComponent],\n  exports: [SprkPromoComponent]\n})\nexport class SprkPromoModule {}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  QueryList\n} from '@angular/core';\nimport * as _ from 'lodash';\nimport {\n  SprkTabbedNavigationPanelDirective\n} from '../../directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive';\nimport {\n  SprkTabbedNavigationTabDirective\n} from '../../directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive';\n\n@Component({\n  selector: 'sprk-tabbed-navigation',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <div class=\"sprk-c-Tabs__buttons\" role=\"tablist\">\n        <ng-content select=\"[sprkTabbedNavigationTab]\"></ng-content>\n      </div>\n      <ng-content select=\"[sprkTabbedNavigationPane]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkTabbedNavigationComponent implements AfterContentInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * This component expects children `<button>` elements\n   * with the `SprkTabbedNavigationTabDirective` on them.\n   * These serve as the Tabs.\n   */\n  @ContentChildren(SprkTabbedNavigationTabDirective)\n  tabs: QueryList<SprkTabbedNavigationTabDirective>;\n  /**\n   * This component expects children `<div>` elements\n   * with the `SprkTabbedNavigationPanelDirective` on them.\n   * These serve as the Panels.\n   */\n  @ContentChildren(SprkTabbedNavigationPanelDirective)\n  panels: QueryList<SprkTabbedNavigationPanelDirective>;\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  activeClass = 'sprk-c-Tabs__button--active';\n\n  /**\n   * @ignore\n   */\n  @HostListener('click', ['$event'])\n  onClick($event) {\n    if ($event.target.classList.contains('sprk-c-Tabs__button')) {\n      const activePanel = this.panels.find(panel => {\n        return (\n          panel.ref.nativeElement.id ===\n          $event.target.getAttribute('aria-controls')\n        );\n      });\n\n      this.resetTabs(\n        this.tabs.map(tab => tab.ref.nativeElement),\n        this.panels.map(panel => panel.ref.nativeElement),\n        this.activeClass\n      );\n\n      this.setActiveTab(\n        $event.target,\n        activePanel.ref.nativeElement,\n        this.activeClass\n      );\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.ariaOrientation(window.innerWidth, this.ref.nativeElement);\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('keydown', ['$event'])\n  onKeydown($event) {\n    const isTabsButton = $event.target.classList.contains('sprk-c-Tabs__button');\n    if (!isTabsButton) {\n      return;\n    }\n\n    const keys = {\n      end: 35,\n      home: 36,\n      left: 37,\n      up: 38,\n      right: 39,\n      down: 40,\n      tab: 9\n    };\n\n    const tabElements = this.tabs.map(tab => tab.ref.nativeElement);\n    const panelElements = this.panels.map(panel => panel.ref.nativeElement);\n\n    if ($event.keyCode === keys.left || $event.keyCode === keys.up) {\n      this.incrementTab(tabElements, panelElements, this.activeClass, -1);\n    } else if ($event.keyCode === keys.right || $event.keyCode === keys.down) {\n      this.incrementTab(tabElements, panelElements, this.activeClass, 1);\n    } else if ($event.keyCode === keys.tab) {\n      if ($event.target.getAttribute('role') === 'tab') {\n        $event.preventDefault();\n        panelElements[\n          this.getActiveTabIndex(tabElements, this.activeClass)\n        ].focus();\n      }\n    } else if ($event.keyCode === keys.home) {\n      this.goToEndTab(tabElements, panelElements, this.activeClass, -1);\n    } else if ($event.keyCode === keys.end) {\n      this.goToEndTab(tabElements, panelElements, this.activeClass, 1);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Tabs'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterContentInit(): void {\n    let tabIDs = [];\n    let panelIDs = [];\n\n    if (this.tabs && this.panels) {\n      this.tabs.forEach((tab, index) => {\n        const tabID = `tabbed-navigation-${this.componentID}-tab-${index}`;\n        const panelID = `tabbed-navigation-${this.componentID}-panel-${index}`;\n\n        tab.ref.nativeElement.setAttribute('id', tabID);\n        tab.ref.nativeElement.setAttribute('aria-controls', panelID);\n        tabIDs.push(tabID);\n        panelIDs.push(panelID);\n      });\n\n      tabIDs = tabIDs.reverse();\n      panelIDs = panelIDs.reverse();\n\n      this.panels.forEach(panel => {\n        panel.ref.nativeElement.setAttribute('id', panelIDs.pop());\n        panel.ref.nativeElement.setAttribute('aria-labelledby', tabIDs.pop());\n      });\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ariaOrientation(width, element) {\n    // switch aria-orientation on mobile (based on _tabs.scss breakpoint)\n    if (width <= 736) {\n      element.setAttribute('aria-orientation', 'vertical');\n    } else {\n      element.setAttribute('aria-orientation', 'horizontal');\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getActiveTabIndex(tabs, activeClass) {\n    let activeIndex = null;\n    tabs.forEach((tab, index) => {\n      if (\n        tab.classList.contains(activeClass || 'sprk-c-Tabs__button--active')\n      ) {\n        activeIndex = index;\n      }\n    });\n\n    return activeIndex;\n  }\n\n  /**\n   * @ignore\n   */\n  resetTabs(tabs, tabpanels, activeClass) {\n    tabs.forEach(tab => {\n      tab.classList.remove(activeClass || 'sprk-c-Tabs__button--active');\n      tab.removeAttribute('tabindex');\n      tab.setAttribute('aria-selected', 'false');\n      tabpanels.forEach(panel => {\n        panel.classList.add('sprk-u-HideWhenJs');\n      });\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  incrementTab(tabs, tabpanels, activeClass, direction) {\n    let activeIndex = this.getActiveTabIndex(tabs, activeClass);\n\n    let foundNewIndex = false;\n\n    // Start looking for the next available tab\n    while (foundNewIndex === false) {\n      // if the next tab would be off the left of the tabstrip\n      if (activeIndex + direction < 0) {\n        // loop to the end and keep looking\n        activeIndex = tabs.length;\n\n      // if the next tab would be off the right of the tabstrip\n      } else if (activeIndex + direction >= tabs.length) {\n        // loop back to the beginning and keep looking\n        activeIndex = -1;\n\n      // If the next tab is not disabled\n      } else if (!tabs[activeIndex + direction].hasAttribute('disabled')) {\n        // move to the next tab\n        activeIndex += direction;\n        // stop looking for the correct tab\n        foundNewIndex = true;\n\n      } else {\n        // move to the next tab and keep looking\n        activeIndex += direction;\n      }\n    }\n\n    // deselect all tabs\n    this.resetTabs(tabs, tabpanels, activeClass);\n    // select the correct tab\n    this.setActiveTab(tabs[activeIndex], tabpanels[activeIndex], activeClass);\n  }\n\n  goToEndTab(tabs, tabpanels, activeClass, direction) {\n    let newActiveIndex;\n\n    // if direction is positive, go to the right-most tab\n    if (direction > 0) {\n      newActiveIndex = tabs.length - 1;\n\n    // else go to the left-most tab\n    } else {\n      newActiveIndex = 0;\n    }\n\n    let foundNewIndex = false;\n\n    // step through the tabs until we find one that isn't disabled\n    while (foundNewIndex === false) {\n\n      // if this tab is not disabled\n      if (!tabs[newActiveIndex].hasAttribute('disabled')) {\n\n        // stop looking for the correct tab\n        foundNewIndex = true;\n\n      // else step one tab away from the end and keep looking\n      } else {\n        newActiveIndex -= direction;\n      }\n    }\n\n    this.resetTabs(tabs, tabpanels, activeClass);\n    this.setActiveTab(tabs[newActiveIndex], tabpanels[newActiveIndex], activeClass);\n  }\n\n  /**\n   * @ignore\n   */\n  setActiveTab(tab, tabpanel, activeClass) {\n    tab.classList.add(activeClass || 'sprk-c-Tabs__button--active');\n    tab.setAttribute('tabindex', '0');\n    tab.setAttribute('aria-selected', 'true');\n    if (tabpanel) {\n      tabpanel.classList.remove('sprk-u-HideWhenJs');\n    }\n    tab.focus();\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {\n    this.ariaOrientation(window.innerWidth, this.ref.nativeElement);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTabbedNavigationComponent } from './sprk-tabbed-navigation.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTabbedNavigationComponent],\n  exports: [SprkTabbedNavigationComponent]\n})\nexport class SprkTabbedNavigationModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-table',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <table [ngClass]=\"getTableClasses()\">\n        <ng-content></ng-content>\n      </table>\n    </div>\n  `\n})\nexport class SprkTableComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component container element.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * `table` element.\n   */\n  @Input()\n  additionalTableClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-TableContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTableClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-Table',\n      'sprk-b-Table--spacing-medium',\n    ];\n\n    if (this.additionalTableClasses) {\n      this.additionalTableClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableComponent } from './sprk-table.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableComponent],\n  exports: [SprkTableComponent]\n})\nexport class SprkTableModule {}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Input,\n  HostBinding,\n  OnChanges,\n  Renderer2,\n  AfterViewInit,\n  SimpleChanges,\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkButton]'\n})\nexport class SprkButtonDirective implements OnInit, OnChanges, AfterViewInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef, private renderer: Renderer2) {}\n\n  /**\n   * Will show a spinner inside the\n   * button if set to `true`.\n   */\n  @Input() isSpinning = false;\n\n  /**\n   * Optional string value that is\n   * set for the `aria-label`\n   * when `isSpinning` is `true`.\n   */\n  @Input() spinningAriaLabel = 'Loading';\n\n  /**\n   *  Determines the coresponding button style.\n   */\n  @Input() variant: 'primary'| 'secondary' | 'tertiary' = 'primary';\n\n  // Always set the button class on the element\n  @HostBinding('class.sprk-c-Button') true;\n\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @HostBinding('attr.data-id')\n  @Input() idString: string;\n\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the element.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @HostBinding('attr.data-analytics')\n  @Input() analyticsString: string;\n\n  ngOnInit(): void {\n    if (this.variant === 'secondary') {\n      this.renderer.addClass(\n        this.ref.nativeElement,\n        'sprk-c-Button--secondary'\n      );\n    }\n    if (this.variant === 'tertiary') {\n      this.renderer.addClass(\n        this.ref.nativeElement,\n        'sprk-c-Button--tertiary'\n      );\n    }\n  }\n\n  /**\n   * Add spinner only after view has loaded.\n   * This is to allow time for the text\n   * content of the button to load so that\n   * the width value accounts for that text.\n   */\n  ngAfterViewInit() {\n    if (this.isSpinning) {\n      this.setSpinning(this.ref.nativeElement);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.isSpinning && !changes['isSpinning'].isFirstChange()) {\n      this.setSpinning(this.ref.nativeElement);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  setSpinning = (element) => {\n    const el = element;\n    const width = element.offsetWidth;\n    const ariaLabel = this.spinningAriaLabel;\n    let spinnerClass = 'sprk-c-Spinner sprk-c-Spinner--circle';\n    if (\n        el.classList.contains('sprk-c-Button--secondary') ||\n        this.variant === 'secondary') {\n      spinnerClass += ' sprk-c-Spinner--dark';\n    }\n    this.renderer.setAttribute(\n      el,\n      'data-sprk-spinner-text',\n      el.textContent,\n    );\n    this.renderer.setAttribute(\n      el,\n      'aria-label',\n      ariaLabel,\n    );\n    el.innerHTML = `<div class=\"${spinnerClass}\"></div>`;\n    el.setAttribute('data-sprk-has-spinner', 'true');\n    this.renderer.setAttribute(\n      el,\n      'data-sprk-has-spinner',\n      'true',\n    );\n    this.renderer.setAttribute(\n      el,\n      'style',\n      `width: ${width}px`,\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkButtonDirective } from './sprk-button.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkButtonDirective],\n  exports: [SprkButtonDirective]\n})\nexport class SprkButtonModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-award',\n  template: `\n    <sprk-stack\n      itemSpacing=\"medium\"\n      additionalClasses=\"{{ additionalClasses }}\"\n    >\n      <h2\n        sprkStackItem\n        [attr.data-id]=\"idString\"\n        class=\"\n          sprk-o-Stack__item\n          sprk-b-TypeDisplayFive\n          sprk-b-Measure sprk-b-Measure--narrow\n          sprk-u-TextAlign--center\n          sprk-o-Stack__item--center-column\n        \"\n      >\n        {{ title }}\n      </h2>\n\n      <div sprkStackItem [ngClass]=\"getClasses()\">\n        <div\n          [ngClass]=\"getImgContainerClasses()\"\n        >\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            class=\"sprk-o-Stack\"\n            [attr.href]=\"imgOneHref\"\n            [analyticsString]=\"analyticsStringImgOne\"\n          >\n            <img\n              [ngClass]=\"getClassesImgOne()\"\n              alt=\"{{ imgOneAlt }}\"\n              src=\"{{ imgOneSrc }}\"\n            />\n          </a>\n        </div>\n        <div\n          [ngClass]=\"getImgContainerClasses()\"\n        >\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            class=\"sprk-o-Stack\"\n            [attr.href]=\"imgTwoHref\"\n            [analyticsString]=\"analyticsStringImgTwo\"\n          >\n            <img\n              [ngClass]=\"getClassesImgTwo()\"\n              alt=\"{{ imgTwoAlt }}\"\n              src=\"{{ imgTwoSrc }}\"\n            />\n          </a>\n        </div>\n      </div>\n\n      <sprk-toggle\n        *ngIf=\"disclaimer !== 'false'\"\n        sprkStackItem\n        additionalClasses=\"sprk-o-Stack__item--start-column\"\n        toggleType=\"base\"\n        title=\"{{ disclaimerTitle }}\"\n        analyticsString=\"{{ analyticsStringDisclaimer }}\"\n      >\n        <p class=\"sprk-b-TypeBodyFour\">{{ disclaimerCopy }}</p>\n      </sprk-toggle>\n    </sprk-stack>\n  `\n})\nexport class SprkAwardComponent {\n  /**\n   * The relative size of the viewport that\n   * the Award component should switch\n   * from a stacked layout to a side by side\n   * layout. You will need to experiment\n   * with your content to see which value\n   * is the best fit. Can be `tiny`,\n   * `small`, `medium`, `large` or `huge`.\n   */\n  @Input()\n  splitAt: string;\n  /**\n   * The `alt` text that will be applied\n   * to the first image.\n   */\n  @Input()\n  imgOneAlt: string;\n  /**\n   * The image `href` value that will be\n   * applied to the first image.\n   */\n  @Input()\n  imgOneHref: string;\n  /**\n   * The image `href` value that will be\n   * applied to the second image.\n   */\n  @Input()\n  imgTwoHref: string;\n  /**\n   * The `alt` text that will be applied\n   * 'to the second image.\n   */\n  @Input()\n  imgTwoAlt: string;\n  /**\n   * The image source that will be\n   * applied to the first image.\n   */\n  @Input()\n  imgOneSrc: string;\n  /**\n   * The image source that will be\n   * applied to the second image.\n   */\n  @Input()\n  imgTwoSrc: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of the first image.\n   */\n  @Input()\n  analyticsStringImgOne: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of the second image.\n   */\n  @Input()\n  analyticsStringImgTwo: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of\n   * the clickable disclaimer.\n   */\n  @Input()\n  analyticsStringDisclaimer: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * first image.\n   */\n  @Input()\n  additionalClassesImgOne: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * second image.\n   */\n  @Input()\n  additionalClassesImgTwo: string;\n  /**\n   * The text that appears above the\n   * images and serves as the heading\n   * for the Award.\n   */\n  @Input()\n  title: string;\n  /**\n   * The text that will be the clickable\n   * title of the disclaimer toggle.\n   */\n  @Input()\n  disclaimerTitle: string;\n  /**\n   * The text that will be inside the\n   * disclaimer toggle.\n   */\n  @Input()\n  disclaimerCopy: string;\n  /**\n   * If `false`, the disclaimer\n   * toggle will not be rendered.\n   */\n  @Input()\n  disclaimer: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    // Handle the choice of item split\n    // breakpoint by adding CSS class\n    switch (this.splitAt) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--split@xs');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--split@s');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--split@m');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--split@l');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--split@xl');\n        break;\n      default:\n        break;\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getImgContainerClasses(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item'\n    ];\n\n    // Handle the choice of item split\n    // breakpoint by adding CSS class\n    switch (this.splitAt) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack__item--flex@xs');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack__item--flex@s');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack__item--flex@m');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack__item--flex@l');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack__item--flex@xl');\n        break;\n      default:\n        break;\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getClassesImgOne(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    if (this.additionalClassesImgOne) {\n      this.additionalClassesImgOne.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesImgTwo(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    if (this.additionalClassesImgTwo) {\n      this.additionalClassesImgTwo.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkStackModule } from '../sprk-stack/sprk-stack.module';\nimport { SprkStackItemModule } from '../../directives/sprk-stack-item/sprk-stack-item.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkToggleModule } from '../sprk-toggle/sprk-toggle.module';\nimport { SprkAwardComponent } from './sprk-award.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    SprkLinkDirectiveModule,\n    SprkToggleModule\n  ],\n  declarations: [SprkAwardComponent],\n  exports: [SprkAwardComponent]\n})\nexport class SprkAwardModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-card',\n  template: `\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'teaser'\"\n      [attr.data-id]=\"idString\"\n    >\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"media === 'img'\"\n        [href]=\"imgHref\"\n        class=\"sprk-o-Stack__item\"\n        [analyticsString]=\"imgLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Card__media\"\n          [attr.alt]=\"imgAlt\"\n          [attr.src]=\"imgSrc\"\n        />\n      </a>\n\n      <div\n        [ngClass]=\"{\n          'sprk-o-Stack__item': true,\n          'sprk-c-Card__content': true,\n          'sprk-o-Stack': true,\n          'sprk-o-Stack--medium': true,\n          'sprk-u-TextAlign--center': media === 'icon'\n        }\"\n      >\n        <a\n          sprkLink\n          variant=\"unstyled\"\n          *ngIf=\"media === 'icon'\"\n          [attr.href]=\"iconHref\"\n          class=\"sprk-o-Stack__item sprk-u-AbsoluteCenter\"\n          [analyticsString]=\"iconLinkAnalytics\"\n        >\n          <sprk-icon\n            [iconType]=\"iconType\"\n            [additionalClasses]=\"additionalClassesIcon\"\n          ></sprk-icon>\n        </a>\n\n        <h3 class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item\">{{ title }}</h3>\n\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n        <div class=\"sprk-o-Stack__item\">\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            [attr.href]=\"ctaHref\"\n            [ngClass]=\"getClassesCta()\"\n            [analyticsString]=\"ctaAnalytics\"\n          >\n            {{ ctaText }}\n            <sprk-icon\n              *ngIf=\"ctaIcon && (ctaType === 'link')\"\n              [iconType]=\"ctaIcon\"\n            ></sprk-icon>\n          </a>\n        </div>\n      </div>\n    </div>\n\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'base'\"\n      [attr.data-id]=\"idString\"\n    >\n      <ng-content></ng-content>\n    </div>\n\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'teaserHeading'\"\n      [attr.data-id]=\"idString\"\n    >\n      <h3\n        class=\"sprk-o-Stack__item sprk-c-Card__content sprk-b-TypeDisplayFive\"\n      >\n        {{ title }}\n      </h3>\n\n      <div\n        class=\"sprk-o-Stack__item sprk-c-Card__content sprk-o-Stack sprk-o-Stack--medium\"\n      >\n        <a\n          sprkLink\n          variant=\"unstyled\"\n          *ngIf=\"media === 'img'\"\n          [attr.href]=\"imgHref\"\n          class=\"sprk-o-Stack__item\"\n          [analyticsString]=\"imgLinkAnalytics\"\n        >\n          <img [attr.alt]=\"imgAlt\" [attr.src]=\"imgSrc\" />\n        </a>\n\n        <a\n          sprkLink\n          *ngIf=\"media === 'icon'\"\n          [attr.href]=\"iconHref\"\n          variant=\"unstyled\"\n          class=\"sprk-o-Stack__item sprk-o-Stack__item--center\"\n          [analyticsString]=\"iconLinkAnalytics\"\n        >\n          <sprk-icon\n            [iconType]=\"iconType\"\n            [additionalClasses]=\"additionalClassesIcon\"\n          ></sprk-icon>\n        </a>\n\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n        <div class=\"sprk-o-Stack__item\">\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            [attr.href]=\"ctaHref\"\n            [ngClass]=\"getClassesCta()\"\n            [analyticsString]=\"ctaAnalytics\"\n          >\n            {{ ctaText }}\n            <sprk-icon\n              *ngIf=\"ctaIcon && (ctaType === 'link')\"\n              [iconType]=\"ctaIcon\"\n            ></sprk-icon>\n          </a>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class SprkCardComponent {\n  /**\n   * The type of Card variant to render.\n   * The available values are `base`, `teaser`, and `teaserHeading`.\n   */\n  @Input()\n  cardType: 'base' | 'teaser' | 'teaserHeading' = 'base' ;\n  /**\n   * The main content\n   * of the Card. Placed between\n   * the title and call to action.\n   */\n  @Input()\n  body: string;\n  /**\n   * Determines which type of media will be rendered.\n   * The available values are `image` and `icon`.\n   */\n  @Input()\n  media: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon if the media type is icon.\n   */\n  @Input()\n  additionalClassesIcon: string;\n  /**\n   * The title of the Card.\n   */\n  @Input()\n  title: string;\n  /**\n   * If the `media` input is set to `image`,\n   * this is the text that will be applied to the\n   * `src` attribute of the image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * If the `media` input is set to `image`,\n   * this is the text that is applied to\n   * the `alt` attribute of the image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * If the `media` input is set to `icon`, this\n   * is used to supply the name of the icon to use.\n   */\n  @Input()\n  iconType: string;\n  /**\n   * If the `media` input is set to `icon`, this\n   * is used to supply the `href` for the icon.\n   */\n  @Input()\n  iconHref: string;\n  /**\n   * If the `media` input is set to `img`, this\n   * is used to supply the `href` of the image.\n   */\n  @Input()\n  imgHref: string;\n  /**\n   * Determines what icon `sprk-icon` renders\n   * next to the call-to-action link.\n   */\n  @Input()\n  ctaIcon: string;\n  /**\n   * Determines which type of call to action is rendered.\n   * The available values are `link` and `button`.\n   */\n  @Input()\n  ctaType: 'link' | 'button' = 'link';\n  /**\n   * The text content of the call to action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the call to action.\n   */\n  @Input()\n  ctaAnalytics: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the link surrounding the image.\n   */\n  @Input()\n  imgLinkAnalytics: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the link surrounding the icon.\n   */\n  @Input()\n  iconLinkAnalytics: string;\n  /**\n   * The `href` value for the call to action.\n   */\n  @Input()\n  ctaHref: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * call to action.\n   */\n  @Input()\n  additionalCtaClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClassesCta(): string {\n    const ctaClassArray: string[] = [];\n\n    if (this.ctaType === 'button') {\n      ctaClassArray.push('sprk-c-Button');\n    } else {\n      ctaClassArray.push('sprk-b-Link');\n      if (this.ctaIcon) {\n        ctaClassArray.push('sprk-b-Link--simple');\n        ctaClassArray.push('sprk-b-Link--has-icon');\n      }\n    }\n\n    if (this.additionalCtaClasses) {\n      this.additionalCtaClasses.split(' ').forEach(className => {\n        ctaClassArray.push(className);\n      });\n    }\n\n    return ctaClassArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesCard(): string {\n    const classArray: string[] = ['sprk-c-Card', 'sprk-o-Stack'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkCardComponent } from './sprk-card.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],\n  declarations: [SprkCardComponent],\n  exports: [SprkCardComponent]\n})\nexport class SprkCardModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-dictionary',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <dl class=\"sprk-c-Dictionary__keyvaluepairs\">\n        <div\n          *ngFor=\"let key of objectKeys(data)\"\n          class=\"sprk-c-Dictionary__keyvaluepair\"\n        >\n          <dt\n            class=\"sprk-c-Dictionary__key sprk-b-Label sprk-b-Label--no-input\"\n          >\n            {{ key }}\n          </dt>\n          <dd class=\"sprk-c-Dictionary__value\">{{ data[key] }}</dd>\n        </div>\n      </dl>\n    </div>\n  `\n})\nexport class SprkDictionaryComponent {\n  /**\n   * The collection of key-value pairs to be rendered\n   * into the component.\n   */\n  @Input()\n  data: object = {};\n  /**\n   * Determines the variant of the dictionary component to render.\n   * The only available option is `striped`.\n   * Supplying no value will cause the base variant to be used.\n   */\n  @Input()\n  dictionaryType = 'base';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * @ignore\n   * Used to grab all the keys from\n   * objects.\n   */\n  objectKeys = Object.keys;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Dictionary'];\n\n    if (this.dictionaryType === 'striped') {\n      classArray.push('sprk-c-Dictionary--striped');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkDictionaryComponent } from './sprk-dictionary.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkDictionaryComponent],\n  exports: [SprkDictionaryComponent]\n})\nexport class SprkDictionaryModule {}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sprk-highlight-board',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <img\n        *ngIf=\"type !== 'noImage'\"\n        class=\"sprk-c-HighlightBoard__image\"\n        src=\"{{ imgSrc }}\"\n        alt=\"{{ imgAlt }}\"\n      />\n\n      <sprk-stack\n        sprkStackItem\n        itemSpacing=\"large\"\n        additionalClasses=\"sprk-c-HighlightBoard__content\"\n      >\n        <h1\n          sprkStackItem\n          [ngClass]=\"{\n            'sprk-b-TypeDisplayTwo': type === 'noImage',\n            'sprk-b-TypeDisplayOne': type !== 'noImage',\n            'sprk-c-HighlightBoard__heading': true\n          }\"\n        >\n          {{ heading }}\n        </h1>\n\n        <sprk-stack\n          sprkStackItem\n          *ngIf=\"ctaText\"\n          itemSpacing=\"medium\"\n          splitAt=\"tiny\"\n          additionalClasses=\"sprk-o-Stack--center-column {{ centerBtns }}\"\n        >\n          <div sprkStackItem class=\"sprk-c-HighlightBoard__cta\">\n            <a\n              sprkLink\n              variant=\"unstyled\"\n              [attr.href]=\"ctaHref\"\n              class=\"sprk-c-Button sprk-c-Button--primary sprk-c-Button--full@sm\"\n              [analyticsString]=\"analyticsStringCta\"\n            >\n              {{ ctaText }}\n            </a>\n          </div>\n\n          <div\n            sprkStackItem\n            *ngIf=\"ctaText2\"\n            class=\"sprk-c-HighlightBoard__cta\"\n          >\n            <a\n              sprkLink\n              variant=\"unstyled\"\n              [attr.href]=\"ctaHref2\"\n              class=\"sprk-c-Button sprk-c-Button--secondary sprk-c-Button--full@sm\"\n              [analyticsString]=\"analyticsStringCta2\"\n            >\n              {{ ctaText2 }}\n            </a>\n          </div>\n        </sprk-stack>\n      </sprk-stack>\n    </div>\n  `\n})\nexport class SprkHighlightBoardComponent implements OnInit {\n  /**\n   * The value supplied will be rendered as the heading.\n   */\n  @Input()\n  heading: string;\n  /**\n   * The Highlight Board will use this as the\n   * source for the main image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * The Highlight Board will use this as\n   * the `alt` text for the main image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * The Highlight Board will use this as\n   * the text for the main call to action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * The Highlight Board will use this as the\n   * `href` for the main call to action.\n   */\n  @Input()\n  ctaHref: string;\n  /**\n   * The Highlight Board will use this as\n   * the text for the secondary call to action.\n   */\n  @Input()\n  ctaText2: string;\n  /**\n   * The Highlight Board will use this\n   * as the `href` for the secondary\n   * call to action.\n   */\n  @Input()\n  ctaHref2: string;\n  /**\n   * The value supplied will be assigned to\n   * the `data-analytics` attribute on the call to action.\n   * Intended for an outside library to capture data.\n   */\n  @Input()\n  analyticsStringCta: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the second\n   * call to action. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringCta2: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The variation of the\n   * Highlight Board that is rendered.\n   * Can be `noImage`, `stacked` or not\n   * set at all. The default if not set\n   * is the default variation of the Highlight Board.\n   */\n  @Input()\n  type: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  ngOnInit() {\n    if (!this.ctaText && this.ctaText2) {\n      console.warn(`\n        Spark Design System Warning - <sprk-highlight-board> Component:\n        A secondary call-to-action (CTA)\n        should not exist without a primary CTA.\n        If there is only one CTA, it must be set on\n        ctaText and ctaHref.\n      `);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  public centerBtns = '';\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-HighlightBoard'];\n\n    switch (this.type) {\n      case 'noImage':\n        this.centerBtns = 'sprk-o-Stack--center-row';\n        break;\n      case 'stacked':\n        this.centerBtns = 'sprk-o-Stack--center-row';\n        classArray.push(\n          'sprk-c-HighlightBoard--has-image sprk-c-HighlightBoard--stacked'\n        );\n        break;\n      default:\n        classArray.push('sprk-c-HighlightBoard--has-image');\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkStackModule } from '../sprk-stack/sprk-stack.module';\nimport { SprkStackItemModule } from '../../directives/sprk-stack-item/sprk-stack-item.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkHighlightBoardComponent } from './sprk-highlight-board.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    SprkLinkDirectiveModule\n  ],\n  declarations: [SprkHighlightBoardComponent],\n  exports: [SprkHighlightBoardComponent]\n})\nexport class SprkHighlightBoardModule {}\n","import { Directive, ElementRef, Input, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[sprkBox]'\n})\nexport class SprkBoxDirective {\n  /**\n   * Padding inside of the box component.\n   * Defaults to medium sizing when not provided.\n   * Refer to Class Modifiers section for default pixel values.\n   */\n  @Input() spacing:\n    | 'flush'\n    | 'tiny'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'huge'\n    | 'insetShortTiny'\n    | 'insetShortSmall'\n    | 'insetShortMedium'\n    | 'insetShortLarge'\n    | 'insetShortHuge'\n    | 'insetTallTiny'\n    | 'insetTallSmall'\n    | 'insetTallMedium'\n    | 'insetTallLarge'\n    | 'insetTallHuge'\n    | 'miscA'\n    | 'miscB'\n    | 'miscC'\n    | 'miscD';\n\n  @HostBinding('class.sprk-o-Box') true;\n\n  @HostBinding('class.sprk-o-Box--flush')\n  get flush() {\n    return this.spacing === 'flush';\n  }\n\n  @HostBinding('class.sprk-o-Box--tiny')\n  get tiny() {\n    return this.spacing === 'tiny';\n  }\n\n  @HostBinding('class.sprk-o-Box--small')\n  get small() {\n    return this.spacing === 'small';\n  }\n\n  @HostBinding('class.sprk-o-Box--medium')\n  get medium() {\n    return this.spacing === 'medium';\n  }\n\n  @HostBinding('class.sprk-o-Box--large')\n  get large() {\n    return this.spacing === 'large';\n  }\n\n  @HostBinding('class.sprk-o-Box--huge')\n  get huge() {\n    return this.spacing === 'huge';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-tiny')\n  get insetShortTiny() {\n    return this.spacing === 'insetShortTiny';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-small')\n  get insetShortSmall() {\n    return this.spacing === 'insetShortSmall';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-medium')\n  get insetShortMedium() {\n    return this.spacing === 'insetShortMedium';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-large')\n  get insetShortLarge() {\n    return this.spacing === 'insetShortLarge';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-huge')\n  get insetShortHuge() {\n    return this.spacing === 'insetShortHuge';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-tiny')\n  get insetTallTiny() {\n    return this.spacing === 'insetTallTiny';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-small')\n  get insetTallSmall() {\n    return this.spacing === 'insetTallSmall';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-medium')\n  get insetTallMedium() {\n    return this.spacing === 'insetTallMedium';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-large')\n  get insetTallLarge() {\n    return this.spacing === 'insetTallLarge';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-huge')\n  get insetTallHuge() {\n    return this.spacing === 'insetTallHuge';\n  }\n\n  @HostBinding('class.sprk-o-Box--misc-a')\n  get miscA() {\n    return this.spacing === 'miscA';\n  }\n\n  @HostBinding('class.sprk-o-Box--misc-b')\n  get miscB() {\n    return this.spacing === 'miscB';\n  }\n\n  @HostBinding('class.sprk-o-Box--misc-c')\n  get miscC() {\n    return this.spacing === 'miscC';\n  }\n\n  @HostBinding('class.sprk-o-Box--misc-d')\n  get miscD() {\n    return this.spacing === 'miscD';\n  }\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkBoxDirective } from './sprk-box.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkBoxDirective],\n  exports: [SprkBoxDirective]\n})\nexport class SprkBoxModule {}\n","import {\n  Directive,\n  Input,\n  HostBinding\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkText]'\n})\n\nexport class SprkTextDirective {\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  @Input()\n  variant: 'bodyOne' |\n    'bodyTwo' | 'bodyThree' |\n    'bodyFour';\n\n  @HostBinding('class.sprk-b-TypeBodyOne')\n  get textOne() {\n    return this.variant === 'bodyOne';\n  }\n  @HostBinding('class.sprk-b-TypeBodyTwo')\n  get textTwo() {\n    return this.variant === 'bodyTwo';\n  }\n  @HostBinding('class.sprk-b-TypeBodyThree')\n  get textThree() {\n    return this.variant === 'bodyThree';\n  }\n  @HostBinding('class.sprk-b-TypeBodyFour')\n  get textFour() {\n    return this.variant === 'bodyFour';\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { SprkTextDirective } from './sprk-text.directive';\n\n@NgModule({\n  declarations: [SprkTextDirective],\n  exports: [SprkTextDirective]\n})\nexport class SprkTextModule { }\n","import {\n  Directive,\n  Input,\n  HostBinding\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkHeading]'\n})\n\nexport class SprkHeadingDirective {\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  @Input()\n  variant: 'displayOne' |\n    'displayTwo' | 'displayThree' |\n    'displayFour' | 'displayFive' |\n    'displaySix' | 'displaySeven';\n\n  @HostBinding('class.sprk-b-TypeDisplayOne')\n  get headingOne() {\n    return this.variant === 'displayOne';\n  }\n  @HostBinding('class.sprk-b-TypeDisplayTwo')\n  get headingTwo() {\n    return this.variant === 'displayTwo';\n  }\n  @HostBinding('class.sprk-b-TypeDisplayThree')\n  get headingThree() {\n    return this.variant === 'displayThree';\n  }\n  @HostBinding('class.sprk-b-TypeDisplayFour')\n  get headingFour() {\n    return this.variant === 'displayFour';\n  }\n  @HostBinding('class.sprk-b-TypeDisplayFive')\n  get headingFive() {\n    return this.variant === 'displayFive';\n  }\n  @HostBinding('class.sprk-b-TypeDisplaySix')\n  get headingSix() {\n    return this.variant === 'displaySix';\n  }\n  @HostBinding('class.sprk-b-TypeDisplaySeven')\n  get headingSeven() {\n    return this.variant === 'displaySeven';\n  }\n\n  @HostBinding('class.sprk-b-PageTitle')\n  /**\n   * Value will be used to select\n   * the heading style.\n   */\n  @Input() isPageTitle = false;\n}\n","import { NgModule } from '@angular/core';\nimport { SprkHeadingDirective } from './sprk-heading.directive';\n\n@NgModule({\n  declarations: [SprkHeadingDirective],\n  exports: [SprkHeadingDirective]\n})\nexport class SprkHeadingModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-flag',\n  template: `\n    <div\n      [ngClass]=\"getClasses()\"\n      [attr.data-id]=\"idString\"\n    >\n      <div [ngClass]=\"getMediaClasses()\">\n        <ng-content select=\"[media-slot]\"></ng-content>\n      </div>\n      <div [ngClass]=\"getBodyClasses()\">\n        <ng-content select=\"[body-slot]\"></ng-content>\n      </div>\n    </div>\n  `\n})\n\nexport class SprkFlagComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component container.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * container of the media-slot.\n   */\n  @Input()\n  additionalMediaClasses: string;\n\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * container of the body-slot.\n   */\n  @Input()\n  additionalBodyClasses: string;\n\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * The Flag component will use this to decide where\n   * the media-slot is rendered in relation to the\n   * body-slot. The default is the media-slot is on\n   * the left of the body-slot. isReversed=\"true\" places the\n   * media-slot on the right of the body-slot.\n   */\n  @Input()\n  isReversed = false;\n\n  /**\n   * The Flag component will use this to stack\n   * the element at the `$sprk-flag-stacked-breakpoint`\n   */\n  @Input()\n  isStacked = false;\n\n  /**\n   * Determines how much space between the\n   * media and the body.\n   */\n  @Input()\n  spacing: 'flush' | 'tiny' | 'small' | 'medium' | 'large' | 'huge' = 'medium';\n\n  /**\n   * Determines the vertical alignment of content.\n   */\n  @Input()\n  verticalAlignment: 'top' | 'middle' | 'bottom' = 'top';\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-o-Flag'];\n\n    if (this.spacing !== 'medium') {\n      const spacingClasses = {\n        flush: 'sprk-o-Flag--flush',\n        tiny: 'sprk-o-Flag--tiny',\n        small: 'sprk-o-Flag--small',\n        large: 'sprk-o-Flag--large',\n        huge: 'sprk-o-Flag--huge',\n      };\n\n      classArray.push(spacingClasses[this.spacing]);\n    }\n\n    if (this.verticalAlignment !== 'top') {\n      const verticalAlignmentClasses = {\n        middle: 'sprk-o-Flag--middle',\n        bottom: 'sprk-o-Flag--bottom',\n      };\n\n      classArray.push(verticalAlignmentClasses[this.verticalAlignment]);\n    }\n\n    if (this.isReversed) {\n      classArray.push('sprk-o-Flag--rev');\n    }\n\n    if (this.isStacked) {\n      classArray.push('sprk-o-Flag--stacked');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getMediaClasses(): string {\n    const mediaClassArray: string[] = ['sprk-o-Flag__figure'];\n\n    if (this.additionalMediaClasses) {\n      this.additionalMediaClasses.split(' ').forEach(className => {\n        mediaClassArray.push(className);\n      });\n    }\n\n    return mediaClassArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getBodyClasses(): string {\n    const bodyClassArray: string[] = ['sprk-o-Flag__body'];\n\n    if (this.additionalBodyClasses) {\n      this.additionalBodyClasses.split(' ').forEach(className => {\n        bodyClassArray.push(className);\n      });\n    }\n\n    return bodyClassArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkFlagComponent } from './sprk-flag.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkFlagComponent],\n  exports: [SprkFlagComponent]\n})\n\nexport class SprkFlagModule {}\n","import { Directive, Input, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[sprkCenteredColumn]'\n})\nexport class SprkCenteredColumnDirective {\n\n  @HostBinding('class.sprk-o-CenteredColumn') true;\n\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @HostBinding('attr.data-id')\n  @Input() idString: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkCenteredColumnDirective } from './sprk-centered-column.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkCenteredColumnDirective],\n  exports: [SprkCenteredColumnDirective]\n})\nexport class SprkCenteredColumnModule {}\n","import { environment } from '../environment/environment';\nif (typeof window !== 'undefined') {\n  window['sprk'] = { version: { angular: environment.version } } || {};\n}\n\nimport { NgModule } from '@angular/core';\nimport { SprkFormatterDateModule } from './directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.module';\nimport { SprkFormatterMonetaryModule } from './directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.module';\nimport {\n  SprkFormatterPhoneNumberModule\n} from './directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.module';\nimport { SprkFormatterSsnModule } from './directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.module';\nimport { SprkDatepickerModule } from './directives/inputs/sprk-datepicker/sprk-datepicker.module';\nimport { SprkFieldErrorModule } from './directives/inputs/sprk-field-error/sprk-field-error.module';\nimport { SprkHelperTextModule } from './directives/inputs/sprk-helper-text/sprk-helper-text.module';\nimport { SprkInputModule } from './directives/inputs/sprk-input/sprk-input.module';\nimport { SprkLabelModule } from './directives/inputs/sprk-label/sprk-label.module';\nimport { SprkSelectionInputModule } from './directives/inputs/sprk-selection-input/sprk-selection-input.module';\nimport { SprkSelectionLabelModule } from './directives/inputs/sprk-selection-label/sprk-selection-label.module';\nimport { SprkStackItemModule } from './directives/sprk-stack-item/sprk-stack-item.module';\nimport { SprkTableEmptyHeadingModule } from './directives/sprk-table-empty-heading/sprk-table-empty-heading.module';\nimport { SprkTableGroupedColumnModule } from './directives/sprk-table-grouped-column/sprk-table-grouped-column.module';\nimport { SprkTableHeadModule } from './directives/sprk-table-head/sprk-table-head.module';\nimport { SprkTableRowHeadingModule } from './directives/sprk-table-row-heading/sprk-table-row-heading.module';\nimport {\n  SprkTabbedNavigationPanelModule\n} from './directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.module';\nimport { SprkTabbedNavigationTabModule } from './directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.module';\nimport { SparkInputContainerModule } from './components/inputs/sprk-input-container/sprk-input-container.module';\nimport { SprkHugeInputContainerModule } from './components/inputs/sprk-huge-input-container/sprk-huge-input-container.module';\nimport { SprkTextareaContainerModule } from './components/inputs/sprk-textarea-container/sprk-textarea-container.module';\nimport { SprkIconInputContainerModule } from './components/inputs/sprk-icon-input-container/sprk-icon-input-container.module';\nimport { SprkSelectionContainerModule } from './components/inputs/sprk-selection-container/sprk-selection-container.module';\nimport { SprkSelectionItemContainerModule } from './components/inputs/sprk-selection-item-container/sprk-selection-item-container.module';\nimport { SprkAccordionItemModule } from './components/sprk-accordion-item/sprk-accordion-item.module';\nimport { SprkAccordionModule } from './components/sprk-accordion/sprk-accordion.module';\nimport { SprkAlertModule } from './components/sprk-alert/sprk-alert.module';\nimport { SprkDividerModule } from './components/sprk-divider/sprk-divider.module';\nimport { SprkDropdownModule } from './components/sprk-dropdown/sprk-dropdown.module';\nimport { SprkFooterModule } from './components/sprk-footer/sprk-footer.module';\nimport { SprkIconModule } from './components/sprk-icon/sprk-icon.module';\nimport { SprkLinkModule } from './components/sprk-link/sprk-link.module';\nimport { SprkListItemModule } from './components/sprk-list-item/sprk-list-item.module';\nimport { SprkMastheadModule } from './components/sprk-masthead/sprk-masthead.module';\nimport { SprkModalModule } from './components/sprk-modal/sprk-modal.module';\nimport { SprkOrderedListModule } from './components/sprk-ordered-list/sprk-ordered-list.module';\nimport { SprkPaginationModule } from './components/sprk-pagination/sprk-pagination.module';\nimport { SprkPromoModule } from './components/sprk-promo/sprk-promo.module';\nimport { SprkStackModule } from './components/sprk-stack/sprk-stack.module';\nimport { SprkTabbedNavigationModule } from './components/sprk-tabbed-navigation/sprk-tabbed-navigation.module';\nimport { SprkTableModule } from './components/sprk-table/sprk-table.module';\nimport { SprkToggleModule } from './components/sprk-toggle/sprk-toggle.module';\nimport { SprkUnorderedListModule } from './components/sprk-unordered-list/sprk-unordered-list.module';\nimport { SprkButtonModule } from './directives/inputs/sprk-button/sprk-button.module';\nimport { SprkAwardModule } from './components/sprk-award/sprk-award.module';\nimport { SprkCardModule } from './components/sprk-card/sprk-card.module';\nimport { SprkDictionaryModule } from './components/sprk-dictionary/sprk-dictionary.module';\nimport { SprkHighlightBoardModule } from './components/sprk-highlight-board/sprk-highlight-board.module';\nimport { SprkBoxModule } from './directives/sprk-box/sprk-box.module';\nimport { SprkTextModule } from './directives/sprk-text/sprk-text.module';\nimport { SprkHeadingModule } from './directives/sprk-heading/sprk-heading.module';\nimport { SprkLinkDirectiveModule } from './directives/sprk-link/sprk-link.module';\nimport { SprkFlagModule } from './components/sprk-flag/sprk-flag.module';\nimport { SprkCenteredColumnModule } from './directives/sprk-centered-column/sprk-centered-column.module';\n\n@NgModule({\n  exports: [\n    SprkAlertModule,\n    SprkAccordionModule,\n    SprkAccordionItemModule,\n    SprkAwardModule,\n    SprkButtonModule,\n    SprkCardModule,\n    SprkDictionaryModule,\n    SprkDividerModule,\n    SprkDropdownModule,\n    SprkLinkModule,\n    SprkHighlightBoardModule,\n    SprkModalModule,\n    SprkOrderedListModule,\n    SprkUnorderedListModule,\n    SprkListItemModule,\n    SparkInputContainerModule,\n    SprkHugeInputContainerModule,\n    SprkTextareaContainerModule,\n    SprkIconInputContainerModule,\n    SprkSelectionContainerModule,\n    SprkSelectionItemContainerModule,\n    SprkMastheadModule,\n    SprkInputModule,\n    SprkSelectionInputModule,\n    SprkHelperTextModule,\n    SprkLabelModule,\n    SprkSelectionLabelModule,\n    SprkFieldErrorModule,\n    SprkFormatterPhoneNumberModule,\n    SprkFormatterDateModule,\n    SprkFormatterMonetaryModule,\n    SprkFormatterSsnModule,\n    SprkDatepickerModule,\n    SprkPromoModule,\n    SprkTableModule,\n    SprkTableHeadModule,\n    SprkTableGroupedColumnModule,\n    SprkTableEmptyHeadingModule,\n    SprkTableRowHeadingModule,\n    SprkTabbedNavigationTabModule,\n    SprkTabbedNavigationPanelModule,\n    SprkPaginationModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    SprkToggleModule,\n    SprkIconModule,\n    SprkFooterModule,\n    SprkTabbedNavigationModule,\n    SprkBoxModule,\n    SprkTextModule,\n    SprkHeadingModule,\n    SprkLinkDirectiveModule,\n    SprkFlagModule,\n    SprkCenteredColumnModule,\n  ]\n})\nexport class SparkAngularModule {}\n","/*\n * Public API Surface of spark-angular\n */\n\nexport * from './lib/spark-angular.module';\nexport {\n  toggleAnimations\n} from './lib/components/sprk-toggle/sprk-toggle-animations';\nexport {\n  SprkHugeInputContainerComponent\n} from './lib/components/inputs/sprk-huge-input-container/sprk-huge-input-container.component';\nexport {\n  SprkHugeInputContainerModule\n} from './lib/components/inputs/sprk-huge-input-container/sprk-huge-input-container.module';\nexport {\n  SprkIconInputContainerComponent\n} from './lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.component';\nexport {\n  SprkIconInputContainerModule\n} from './lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.module';\nexport {\n  SparkInputContainerComponent\n} from './lib/components/inputs/sprk-input-container/sprk-input-container.component';\nexport {\n  SparkInputContainerModule\n} from './lib/components/inputs/sprk-input-container/sprk-input-container.module';\nexport {\n  SprkSelectionContainerComponent\n} from './lib/components/inputs/sprk-selection-container/sprk-selection-container.component';\nexport {\n  SprkSelectionContainerModule\n} from './lib/components/inputs/sprk-selection-container/sprk-selection-container.module';\nexport {\n  SprkSelectionItemContainerComponent\n} from './lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.component';\nexport {\n  SprkSelectionItemContainerModule\n} from './lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.module';\nexport {\n  SprkTextareaContainerComponent\n} from './lib/components/inputs/sprk-textarea-container/sprk-textarea-container.component';\nexport {\n  SprkTextareaContainerModule\n} from './lib/components/inputs/sprk-textarea-container/sprk-textarea-container.module';\nexport {\n  SprkAccordionItemComponent\n} from './lib/components/sprk-accordion-item/sprk-accordion-item.component';\nexport {\n  SprkAccordionItemModule\n} from './lib/components/sprk-accordion-item/sprk-accordion-item.module';\nexport {\n  SprkAccordionComponent\n} from './lib/components/sprk-accordion/sprk-accordion.component';\nexport {\n  SprkAccordionModule\n} from './lib/components/sprk-accordion/sprk-accordion.module';\nexport {\n  SprkAlertComponent\n} from './lib/components/sprk-alert/sprk-alert.component';\nexport { SprkAlertModule } from './lib/components/sprk-alert/sprk-alert.module';\nexport {\n  SprkAwardComponent\n} from './lib/components/sprk-award/sprk-award.component';\nexport { SprkAwardModule } from './lib/components/sprk-award/sprk-award.module';\nexport {\n  SprkCardComponent\n} from './lib/components/sprk-card/sprk-card.component';\nexport { SprkCardModule } from './lib/components/sprk-card/sprk-card.module';\nexport {\n  SprkDictionaryComponent\n} from './lib/components/sprk-dictionary/sprk-dictionary.component';\nexport {\n  SprkDictionaryModule\n} from './lib/components/sprk-dictionary/sprk-dictionary.module';\nexport {\n  SprkDividerComponent\n} from './lib/components/sprk-divider/sprk-divider.component';\nexport {\n  SprkDividerModule\n} from './lib/components/sprk-divider/sprk-divider.module';\nexport {\n  SprkDropdownComponent\n} from './lib/components/sprk-dropdown/sprk-dropdown.component';\nexport {\n  SprkDropdownModule\n} from './lib/components/sprk-dropdown/sprk-dropdown.module';\nexport {\n  SprkFooterComponent\n} from './lib/components/sprk-footer/sprk-footer.component';\nexport {\n  SprkFooterModule\n} from './lib/components/sprk-footer/sprk-footer.module';\nexport {\n  SprkHighlightBoardComponent\n} from './lib/components/sprk-highlight-board/sprk-highlight-board.component';\nexport {\n  SprkHighlightBoardModule\n} from './lib/components/sprk-highlight-board/sprk-highlight-board.module';\nexport {\n  SprkIconComponent\n} from './lib/components/sprk-icon/sprk-icon.component';\nexport { SprkIconModule } from './lib/components/sprk-icon/sprk-icon.module';\nexport {\n  SprkLinkComponent\n} from './lib/components/sprk-link/sprk-link.component';\nexport { SprkLinkModule } from './lib/components/sprk-link/sprk-link.module';\nexport {\n  SprkListItemComponent\n} from './lib/components/sprk-list-item/sprk-list-item.component';\nexport {\n  SprkListItemModule\n} from './lib/components/sprk-list-item/sprk-list-item.module';\nexport {\n  SprkMastheadAccordionItemComponent\n} from './lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.component';\nexport {\n  SprkMastheadAccordionItemModule\n} from './lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.module';\nexport {\n  SprkMastheadAccordionComponent\n} from './lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.component';\nexport {\n  SprkMastheadAccordionModule\n} from './lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.module';\nexport {\n  SprkMastheadComponent\n} from './lib/components/sprk-masthead/sprk-masthead.component';\nexport {\n  SprkMastheadModule\n} from './lib/components/sprk-masthead/sprk-masthead.module';\nexport {\n  SprkModalComponent\n} from './lib/components/sprk-modal/sprk-modal.component';\nexport { SprkModalModule } from './lib/components/sprk-modal/sprk-modal.module';\nexport {\n  SprkOrderedListComponent\n} from './lib/components/sprk-ordered-list/sprk-ordered-list.component';\nexport {\n  SprkOrderedListModule\n} from './lib/components/sprk-ordered-list/sprk-ordered-list.module';\nexport {\n  SprkPaginationComponent\n} from './lib/components/sprk-pagination/sprk-pagination.component';\nexport {\n  SprkPaginationModule\n} from './lib/components/sprk-pagination/sprk-pagination.module';\nexport {\n  SprkPromoComponent\n} from './lib/components/sprk-promo/sprk-promo.component';\nexport { SprkPromoModule } from './lib/components/sprk-promo/sprk-promo.module';\nexport {\n  SprkStackComponent\n} from './lib/components/sprk-stack/sprk-stack.component';\nexport { SprkStackModule } from './lib/components/sprk-stack/sprk-stack.module';\nexport {\n  SprkTabbedNavigationComponent\n} from './lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.component';\nexport {\n  SprkTabbedNavigationModule\n} from './lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.module';\nexport {\n  SprkTableComponent\n} from './lib/components/sprk-table/sprk-table.component';\nexport { SprkTableModule } from './lib/components/sprk-table/sprk-table.module';\nexport {\n  SprkToggleComponent\n} from './lib/components/sprk-toggle/sprk-toggle.component';\nexport {\n  SprkToggleModule\n} from './lib/components/sprk-toggle/sprk-toggle.module';\nexport {\n  SprkUnorderedListComponent\n} from './lib/components/sprk-unordered-list/sprk-unordered-list.component';\nexport {\n  SprkUnorderedListModule\n} from './lib/components/sprk-unordered-list/sprk-unordered-list.module';\nexport {\n  SprkFormatterDateDirective\n} from './lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.directive';\nexport {\n  SprkFormatterDateModule\n} from './lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.module';\nexport {\n  SprkFormatterMonetaryDirective\n} from './lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.directive';\nexport {\n  SprkFormatterMonetaryModule\n} from './lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.module';\nexport {\n  SprkFormatterPhoneNumberDirective\n} from './lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.directive';\nexport {\n  SprkFormatterPhoneNumberModule\n} from './lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.module';\nexport {\n  SprkFormatterSsnDirective\n} from './lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.directive';\nexport {\n  SprkFormatterSsnModule\n} from './lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.module';\nexport {\n  SprkButtonDirective\n} from './lib/directives/inputs/sprk-button/sprk-button.directive';\nexport {\n  SprkButtonModule\n} from './lib/directives/inputs/sprk-button/sprk-button.module';\nexport {\n  SprkDatepickerDirective\n} from './lib/directives/inputs/sprk-datepicker/sprk-datepicker.directive';\nexport {\n  SprkDatepickerModule\n} from './lib/directives/inputs/sprk-datepicker/sprk-datepicker.module';\nexport {\n  SprkFieldErrorDirective\n} from './lib/directives/inputs/sprk-field-error/sprk-field-error.directive';\nexport {\n  SprkFieldErrorModule\n} from './lib/directives/inputs/sprk-field-error/sprk-field-error.module';\nexport {\n  SprkHelperTextDirective\n} from './lib/directives/inputs/sprk-helper-text/sprk-helper-text.directive';\nexport {\n  SprkHelperTextModule\n} from './lib/directives/inputs/sprk-helper-text/sprk-helper-text.module';\nexport {\n  SprkInputDirective\n} from './lib/directives/inputs/sprk-input/sprk-input.directive';\nexport {\n  SprkInputModule\n} from './lib/directives/inputs/sprk-input/sprk-input.module';\nexport {\n  SprkLabelDirective\n} from './lib/directives/inputs/sprk-label/sprk-label.directive';\nexport {\n  SprkLabelModule\n} from './lib/directives/inputs/sprk-label/sprk-label.module';\nexport {\n  SprkSelectionInputDirective\n} from './lib/directives/inputs/sprk-selection-input/sprk-selection-input.directive';\nexport {\n  SprkSelectionInputModule\n} from './lib/directives/inputs/sprk-selection-input/sprk-selection-input.module';\nexport {\n  SprkSelectionLabelDirective\n} from './lib/directives/inputs/sprk-selection-label/sprk-selection-label.directive';\nexport {\n  SprkSelectionLabelModule\n} from './lib/directives/inputs/sprk-selection-label/sprk-selection-label.module';\nexport {\n  SprkStackItemDirective\n} from './lib/directives/sprk-stack-item/sprk-stack-item.directive';\nexport {\n  SprkStackItemModule\n} from './lib/directives/sprk-stack-item/sprk-stack-item.module';\nexport {\n  SprkTableEmptyHeadingDirective\n} from './lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.directive';\nexport {\n  SprkTableEmptyHeadingModule\n} from './lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.module';\nexport {\n  SprkTableGroupedColumnDirective\n} from './lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.directive';\nexport {\n  SprkTableGroupedColumnModule\n} from './lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.module';\nexport {\n  SprkTableHeadDirective\n} from './lib/directives/sprk-table-head/sprk-table-head.directive';\nexport {\n  SprkTableHeadModule\n} from './lib/directives/sprk-table-head/sprk-table-head.module';\nexport {\n  SprkTableRowHeadingDirective\n} from './lib/directives/sprk-table-row-heading/sprk-table-row-heading.directive';\nexport {\n  SprkTableRowHeadingModule\n} from './lib/directives/sprk-table-row-heading/sprk-table-row-heading.module';\nexport {\n  SprkTabbedNavigationPanelDirective\n} from './lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive';\nexport {\n  SprkTabbedNavigationPanelModule\n} from './lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.module';\nexport {\n  SprkTabbedNavigationTabDirective\n} from './lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive';\nexport {\n  SprkTabbedNavigationTabModule\n} from './lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.module';\nexport {\n  SprkIconInputContainerComponent as Éµbu\n} from './lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.component';\nexport {\n  SprkIconInputContainerModule as Éµbt\n} from './lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.module';\nexport {\n  SparkInputContainerComponent as Éµbn\n} from './lib/components/inputs/sprk-input-container/sprk-input-container.component';\nexport {\n  SparkInputContainerModule as Éµbm\n} from './lib/components/inputs/sprk-input-container/sprk-input-container.module';\nexport {\n  SprkSelectionContainerComponent as Éµbw\n} from './lib/components/inputs/sprk-selection-container/sprk-selection-container.component';\nexport {\n  SprkSelectionContainerModule as Éµbv\n} from './lib/components/inputs/sprk-selection-container/sprk-selection-container.module';\nexport {\n  SprkSelectionItemContainerComponent as Éµbx\n} from './lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.component';\nexport {\n  SprkSelectionItemContainerModule as Éµca\n} from './lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.module';\nexport {\n  SprkTextareaContainerComponent as Éµbs\n} from './lib/components/inputs/sprk-textarea-container/sprk-textarea-container.component';\nexport {\n  SprkTextareaContainerModule as Éµbr\n} from './lib/components/inputs/sprk-textarea-container/sprk-textarea-container.module';\nexport {\n  SprkAccordionItemComponent as Éµj\n} from './lib/components/sprk-accordion-item/sprk-accordion-item.component';\nexport {\n  SprkAccordionItemModule as Éµi\n} from './lib/components/sprk-accordion-item/sprk-accordion-item.module';\nexport {\n  SprkAccordionComponent as Éµh\n} from './lib/components/sprk-accordion/sprk-accordion.component';\nexport {\n  SprkAccordionModule as Éµe\n} from './lib/components/sprk-accordion/sprk-accordion.module';\nexport {\n  SprkAlertComponent as Éµd\n} from './lib/components/sprk-alert/sprk-alert.component';\nexport {\n  SprkAlertModule as Éµa\n} from './lib/components/sprk-alert/sprk-alert.module';\nexport {\n  SprkAwardComponent as Éµr\n} from './lib/components/sprk-award/sprk-award.component';\nexport {\n  SprkAwardModule as Éµk\n} from './lib/components/sprk-award/sprk-award.module';\nexport {\n  SprkCardComponent as Éµv\n} from './lib/components/sprk-card/sprk-card.component';\nexport {\n  SprkCardModule as Éµu\n} from './lib/components/sprk-card/sprk-card.module';\nexport {\n  SprkDictionaryComponent as Éµx\n} from './lib/components/sprk-dictionary/sprk-dictionary.component';\nexport {\n  SprkDictionaryModule as Éµw\n} from './lib/components/sprk-dictionary/sprk-dictionary.module';\nexport {\n  SprkDividerComponent as Éµz\n} from './lib/components/sprk-divider/sprk-divider.component';\nexport {\n  SprkDividerModule as Éµy\n} from './lib/components/sprk-divider/sprk-divider.module';\nexport {\n  SprkDropdownComponent as Éµbb\n} from './lib/components/sprk-dropdown/sprk-dropdown.component';\nexport {\n  SprkDropdownModule as Éµba\n} from './lib/components/sprk-dropdown/sprk-dropdown.module';\nexport {\n  SprkFooterComponent as Éµdr\n} from './lib/components/sprk-footer/sprk-footer.component';\nexport {\n  SprkFooterModule as Éµdq\n} from './lib/components/sprk-footer/sprk-footer.module';\nexport {\n  SprkHighlightBoardComponent as Éµbd\n} from './lib/components/sprk-highlight-board/sprk-highlight-board.component';\nexport {\n  SprkHighlightBoardModule as Éµbc\n} from './lib/components/sprk-highlight-board/sprk-highlight-board.module';\nexport {\n  SprkIconComponent as Éµc\n} from './lib/components/sprk-icon/sprk-icon.component';\nexport {\n  SprkIconModule as Éµb\n} from './lib/components/sprk-icon/sprk-icon.module';\nexport {\n  SprkLinkComponent as Éµg\n} from './lib/components/sprk-link/sprk-link.component';\nexport {\n  SprkLinkModule as Éµf\n} from './lib/components/sprk-link/sprk-link.module';\nexport {\n  SprkListItemComponent as Éµbl\n} from './lib/components/sprk-list-item/sprk-list-item.component';\nexport {\n  SprkListItemModule as Éµbk\n} from './lib/components/sprk-list-item/sprk-list-item.module';\nexport {\n  SprkMastheadAccordionItemComponent as Éµcf\n} from './lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.component';\nexport {\n  SprkMastheadAccordionItemModule as Éµce\n} from './lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.module';\nexport {\n  SprkMastheadAccordionComponent as Éµcd\n} from './lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.component';\nexport {\n  SprkMastheadAccordionModule as Éµcc\n} from './lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.module';\nexport {\n  SprkMastheadComponent as Éµcg\n} from './lib/components/sprk-masthead/sprk-masthead.component';\nexport {\n  SprkMastheadModule as Éµcb\n} from './lib/components/sprk-masthead/sprk-masthead.module';\nexport {\n  SprkModalComponent as Éµbf\n} from './lib/components/sprk-modal/sprk-modal.component';\nexport {\n  SprkModalModule as Éµbe\n} from './lib/components/sprk-modal/sprk-modal.module';\nexport {\n  SprkOrderedListComponent as Éµbh\n} from './lib/components/sprk-ordered-list/sprk-ordered-list.component';\nexport {\n  SprkOrderedListModule as Éµbg\n} from './lib/components/sprk-ordered-list/sprk-ordered-list.module';\nexport {\n  SprkPaginationComponent as Éµdp\n} from './lib/components/sprk-pagination/sprk-pagination.component';\nexport {\n  SprkPaginationModule as Éµdo\n} from './lib/components/sprk-pagination/sprk-pagination.module';\nexport {\n  SprkPromoComponent as Éµcz\n} from './lib/components/sprk-promo/sprk-promo.component';\nexport {\n  SprkPromoModule as Éµcy\n} from './lib/components/sprk-promo/sprk-promo.module';\nexport {\n  SprkStackComponent as Éµm\n} from './lib/components/sprk-stack/sprk-stack.component';\nexport {\n  SprkStackModule as Éµl\n} from './lib/components/sprk-stack/sprk-stack.module';\nexport {\n  SprkTabbedNavigationComponent as Éµdt\n} from './lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.component';\nexport {\n  SprkTabbedNavigationModule as Éµds\n} from './lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.module';\nexport {\n  SprkTableComponent as Éµdb\n} from './lib/components/sprk-table/sprk-table.component';\nexport {\n  SprkTableModule as Éµda\n} from './lib/components/sprk-table/sprk-table.module';\nexport {\n  SprkToggleComponent as Éµq\n} from './lib/components/sprk-toggle/sprk-toggle.component';\nexport {\n  SprkToggleModule as Éµp\n} from './lib/components/sprk-toggle/sprk-toggle.module';\nexport {\n  SprkUnorderedListComponent as Éµbj\n} from './lib/components/sprk-unordered-list/sprk-unordered-list.component';\nexport {\n  SprkUnorderedListModule as Éµbi\n} from './lib/components/sprk-unordered-list/sprk-unordered-list.module';\nexport {\n  SprkFormatterDateDirective as Éµcr\n} from './lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.directive';\nexport {\n  SprkFormatterDateModule as Éµcq\n} from './lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.module';\nexport {\n  SprkFormatterMonetaryDirective as Éµct\n} from './lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.directive';\nexport {\n  SprkFormatterMonetaryModule as Éµcs\n} from './lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.module';\nexport {\n  SprkFormatterPhoneNumberDirective as Éµcp\n} from './lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.directive';\nexport {\n  SprkFormatterPhoneNumberModule as Éµco\n} from './lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.module';\nexport {\n  SprkFormatterSsnDirective as Éµcv\n} from './lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.directive';\nexport {\n  SprkFormatterSsnModule as Éµcu\n} from './lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.module';\nexport {\n  SprkButtonDirective as Éµt\n} from './lib/directives/inputs/sprk-button/sprk-button.directive';\nexport {\n  SprkButtonModule as Éµs\n} from './lib/directives/inputs/sprk-button/sprk-button.module';\nexport {\n  SprkDatepickerDirective as Éµcx\n} from './lib/directives/inputs/sprk-datepicker/sprk-datepicker.directive';\nexport {\n  SprkDatepickerModule as Éµcw\n} from './lib/directives/inputs/sprk-datepicker/sprk-datepicker.module';\nexport {\n  SprkFieldErrorDirective as Éµbq\n} from './lib/directives/inputs/sprk-field-error/sprk-field-error.directive';\nexport {\n  SprkFieldErrorModule as Éµcn\n} from './lib/directives/inputs/sprk-field-error/sprk-field-error.module';\nexport {\n  SprkHelperTextDirective as Éµck\n} from './lib/directives/inputs/sprk-helper-text/sprk-helper-text.directive';\nexport {\n  SprkHelperTextModule as Éµcj\n} from './lib/directives/inputs/sprk-helper-text/sprk-helper-text.module';\nexport {\n  SprkInputDirective as Éµbp\n} from './lib/directives/inputs/sprk-input/sprk-input.directive';\nexport {\n  SprkInputModule as Éµch\n} from './lib/directives/inputs/sprk-input/sprk-input.module';\nexport {\n  SprkLabelDirective as Éµbo\n} from './lib/directives/inputs/sprk-label/sprk-label.directive';\nexport {\n  SprkLabelModule as Éµcl\n} from './lib/directives/inputs/sprk-label/sprk-label.module';\nexport {\n  SprkSelectionInputDirective as Éµbz\n} from './lib/directives/inputs/sprk-selection-input/sprk-selection-input.directive';\nexport {\n  SprkSelectionInputModule as Éµci\n} from './lib/directives/inputs/sprk-selection-input/sprk-selection-input.module';\nexport {\n  SprkSelectionLabelDirective as Éµby\n} from './lib/directives/inputs/sprk-selection-label/sprk-selection-label.directive';\nexport {\n  SprkSelectionLabelModule as Éµcm\n} from './lib/directives/inputs/sprk-selection-label/sprk-selection-label.module';\nexport {\n  SprkStackItemDirective as Éµo\n} from './lib/directives/sprk-stack-item/sprk-stack-item.directive';\nexport {\n  SprkStackItemModule as Éµn\n} from './lib/directives/sprk-stack-item/sprk-stack-item.module';\nexport {\n  SprkTableEmptyHeadingDirective as Éµdh\n} from './lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.directive';\nexport {\n  SprkTableEmptyHeadingModule as Éµdg\n} from './lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.module';\nexport {\n  SprkTableGroupedColumnDirective as Éµdf\n} from './lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.directive';\nexport {\n  SprkTableGroupedColumnModule as Éµde\n} from './lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.module';\nexport {\n  SprkTableHeadDirective as Éµdd\n} from './lib/directives/sprk-table-head/sprk-table-head.directive';\nexport {\n  SprkTableHeadModule as Éµdc\n} from './lib/directives/sprk-table-head/sprk-table-head.module';\nexport {\n  SprkTableRowHeadingDirective as Éµdj\n} from './lib/directives/sprk-table-row-heading/sprk-table-row-heading.directive';\nexport {\n  SprkTableRowHeadingModule as Éµdi\n} from './lib/directives/sprk-table-row-heading/sprk-table-row-heading.module';\nexport {\n  SprkTabbedNavigationPanelDirective as Éµdn\n} from './lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive';\nexport {\n  SprkTabbedNavigationPanelModule as Éµdm\n} from './lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.module';\nexport {\n  SprkTabbedNavigationTabDirective as Éµdl\n} from './lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive';\nexport {\n  SprkTabbedNavigationTabModule as Éµdk\n} from './lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.module';\nexport {\n  SprkCenteredColumnDirective\n} from './lib/directives/sprk-centered-column/sprk-centered-column.directive';\nexport {\n  SprkCenteredColumnModule\n} from './lib/directives/sprk-centered-column/sprk-centered-column.module';\nexport {\n  SprkFlagComponent\n} from './lib/components/sprk-flag/sprk-flag.component';\nexport {\n  SprkFlagModule\n} from './lib/components/sprk-flag/sprk-flag.module';\nexport {\n  SprkLinkDirective\n} from './lib/directives/sprk-link/sprk-link.directive';\nexport {\n  SprkLinkDirectiveModule\n} from './lib/directives/sprk-link/sprk-link.module';\nexport {\n  SprkTextDirective\n} from './lib/directives/sprk-text/sprk-text.directive';\nexport {\n  SprkTextModule\n} from './lib/directives/sprk-text/sprk-text.module';\nexport {\n  SprkHeadingDirective\n} from './lib/directives/sprk-heading/sprk-heading.directive';\nexport {\n  SprkHeadingModule\n} from './lib/directives/sprk-heading/sprk-heading.module';\nexport {\n  SprkBoxDirective\n} from './lib/directives/sprk-box/sprk-box.directive';\nexport {\n  SprkBoxModule\n} from './lib/directives/sprk-box/sprk-box.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}