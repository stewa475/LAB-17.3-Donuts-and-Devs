import { __decorate, __metadata } from 'tslib';
import { ElementRef, HostListener, Directive, NgModule, Input, ContentChild, Component, Renderer2, ContentChildren, QueryList, HostBinding, EventEmitter, Output, ViewChild, TemplateRef } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule, Router, NavigationEnd } from '@angular/router';
import TinyDatePicker from 'tiny-date-picker';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { uniqueId, throttle } from 'lodash';
import uniqueId$1 from 'lodash/uniqueId';
import { trigger, state, style, transition, animate } from '@angular/animations';
import 'focus-visible';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/router';

const _c0 = [[["", "sprkLabel", ""]], [["", "sprkInput", ""]], [["", "sprk-select-icon", ""]], [["sprk-selection-item-container"]], [["", "sprkHelperText", ""]], [["", "sprkFieldError", ""]]];
const _c1 = ["[sprkLabel]", "[sprkInput]", "[sprk-select-icon]", "sprk-selection-item-container", "[sprkHelperText]", "[sprkFieldError]"];
const _c2 = [[["", "sprkInput", ""]], [["", "sprkLabel", ""]], [["", "sprk-select-icon", ""]], [["sprk-selection-item-container"]], [["", "sprkHelperText", ""]], [["", "sprkFieldError", ""]]];
const _c3 = ["[sprkInput]", "[sprkLabel]", "[sprk-select-icon]", "sprk-selection-item-container", "[sprkHelperText]", "[sprkFieldError]"];
const _c4 = [[["", "sprkLabel", ""]], [["", "sprkInput", ""]], [["sprk-selection-item-container"]], [["", "sprkHelperText", ""]], [["", "sprkFieldError", ""]]];
const _c5 = ["[sprkLabel]", "[sprkInput]", "sprk-selection-item-container", "[sprkHelperText]", "[sprkFieldError]"];
const _c6 = [[["", "sprkLabel", ""]], [["", "sprk-input-icon", ""]], [["", "sprkInput", ""]], [["sprk-selection-item-container"]], [["", "sprkHelperText", ""]], [["", "sprkFieldError", ""]]];
const _c7 = ["[sprkLabel]", "[sprk-input-icon]", "[sprkInput]", "sprk-selection-item-container", "[sprkHelperText]", "[sprkFieldError]"];
const _c8 = [[["", "sprkSelectionInput", ""]], [["", "sprkSelectionLabel", ""]], "*"];
const _c9 = ["[sprkSelectionInput]", "[sprkSelectionLabel]", "*"];
const _c10 = [[["", "sprkLabel", ""]], [["sprk-selection-item-container"]], [["", "sprkHelperText", ""]], [["", "sprkFieldError", ""]], "*"];
const _c11 = ["[sprkLabel]", "sprk-selection-item-container", "[sprkHelperText]", "[sprkFieldError]", "*"];
function SprkAccordionItemComponent_sprk_icon_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 5);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("iconType", ctx_r0.leadingIcon);
} }
const _c12 = ["*"];
function SprkAlertComponent_div_0_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 6);
    ɵngcc0.ɵɵlistener("click", function SprkAlertComponent_div_0_button_5_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(2); return ctx_r2.alertDismiss($event); });
    ɵngcc0.ɵɵelement(1, "sprk-icon", 7);
    ɵngcc0.ɵɵelementEnd();
} }
function SprkAlertComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelement(2, "sprk-icon", 3);
    ɵngcc0.ɵɵelementStart(3, "p", 4);
    ɵngcc0.ɵɵprojection(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, SprkAlertComponent_div_0_button_5_Template, 2, 0, "button", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getClassesAlertContainer());
    ɵngcc0.ɵɵattribute("data-analytics", ctx_r0.analyticsString)("data-id", ctx_r0.idString);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("iconType", ctx_r0.icon);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.dismissible !== false);
} }
function SprkDropdownComponent_div_8_div_1_h2_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h2", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.title, " ");
} }
function SprkDropdownComponent_div_8_div_1_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function SprkDropdownComponent_div_8_div_1_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(3); return ctx_r5.toggle($event); });
    ɵngcc0.ɵɵelementStart(1, "span", 13);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "sprk-icon", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r4.title);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.selector);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("additionalClasses", "sprk-c-Icon--stroke-current-color sprk-u-mls sprk-c-Icon--toggle sprk-Stack__item ", ctx_r4.additionalIconClasses, "");
    ɵngcc0.ɵɵproperty("iconType", ctx_r4.triggerIconType);
} }
function SprkDropdownComponent_div_8_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtemplate(1, SprkDropdownComponent_div_8_div_1_h2_1_Template, 2, 1, "h2", 9);
    ɵngcc0.ɵɵtemplate(2, SprkDropdownComponent_div_8_div_1_a_2_Template, 4, 4, "a", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.selector && !ctx_r1.title);
} }
function SprkDropdownComponent_div_8_li_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div");
} }
const _c13 = function (a1) { return { "sprk-c-Dropdown__link": true, "sprk-c-Dropdown__link--active": a1 }; };
function SprkDropdownComponent_div_8_li_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const choice_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("analyticsString", choice_r7.analyticsString)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c13, choice_r7.active));
    ɵngcc0.ɵɵattribute("href", choice_r7.href, ɵngcc0.ɵɵsanitizeUrl)("aria-label", choice_r7.text);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", choice_r7.text, " ");
} }
function SprkDropdownComponent_div_8_li_3_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 18);
    ɵngcc0.ɵɵelementStart(1, "p", 19);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "p");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const choice_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("analyticsString", choice_r7.analyticsString)("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c13, choice_r7.active));
    ɵngcc0.ɵɵattribute("href", choice_r7.href, ɵngcc0.ɵɵsanitizeUrl)("aria-label", choice_r7.content.title);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(choice_r7.content.title);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(choice_r7.content.infoLine1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(choice_r7.content.infoLine2);
} }
function SprkDropdownComponent_div_8_li_3_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 14);
    ɵngcc0.ɵɵlistener("click", function SprkDropdownComponent_div_8_li_3_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.choiceClick($event); });
    ɵngcc0.ɵɵtemplate(1, SprkDropdownComponent_div_8_li_3_div_1_Template, 1, 0, "div", 15);
    ɵngcc0.ɵɵtemplate(2, SprkDropdownComponent_div_8_li_3_ng_template_2_Template, 2, 7, "ng-template", null, 16, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, SprkDropdownComponent_div_8_li_3_ng_template_4_Template, 7, 9, "ng-template", null, 17, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const choice_r7 = ctx.$implicit;
    const i_r8 = ctx.index;
    const _r10 = ɵngcc0.ɵɵreference(3);
    const _r12 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵattribute("data-sprk-dropdown-choice-index", i_r8)("aria-selected", choice_r7.active);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", choice_r7.content)("ngIfThen", _r12)("ngIfElse", _r10);
} }
function SprkDropdownComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 0);
    ɵngcc0.ɵɵtemplate(1, SprkDropdownComponent_div_8_div_1_Template, 3, 2, "div", 5);
    ɵngcc0.ɵɵelementStart(2, "ul", 6);
    ɵngcc0.ɵɵtemplate(3, SprkDropdownComponent_div_8_li_3_Template, 6, 5, "li", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵprojection(4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getClasses());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.dropdownType === "mastheadSelector" || ctx_r0.title || ctx_r0.selector);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r0.title ? ctx_r0.title : ctx_r0.screenReaderText || "My Choices");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.choices);
} }
const _c14 = [[["", "sprkDropdownFooter", ""]]];
const _c15 = function (a0) { return { "sprk-c-MastheadMask": a0 }; };
const _c16 = function (a0) { return { "sprk-o-Box": a0 }; };
const _c17 = ["[sprkDropdownFooter]"];
function SprkFooterComponent_div_3_div_3_sprk_icon_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 21);
} if (rf & 2) {
    const item_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("iconType", item_r7.icon);
    ɵngcc0.ɵɵpropertyInterpolate("additionalClasses", item_r7.iconCSS);
} }
function SprkFooterComponent_div_3_div_3_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 22);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r7.iconScreenReaderText);
} }
function SprkFooterComponent_div_3_div_3_img_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 23);
} if (rf & 2) {
    const item_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵclassMap(item_r7.imgCSS);
    ɵngcc0.ɵɵpropertyInterpolate("src", item_r7.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵpropertyInterpolate("alt", item_r7.imgAlt);
} }
function SprkFooterComponent_div_3_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "div", 15);
    ɵngcc0.ɵɵelementStart(2, "a", 16);
    ɵngcc0.ɵɵtemplate(3, SprkFooterComponent_div_3_div_3_sprk_icon_3_Template, 1, 2, "sprk-icon", 17);
    ɵngcc0.ɵɵtemplate(4, SprkFooterComponent_div_3_div_3_span_4_Template, 2, 1, "span", 18);
    ɵngcc0.ɵɵtemplate(5, SprkFooterComponent_div_3_div_3_img_5_Template, 1, 5, "img", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "p", 20);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r7 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("href", item_r7.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵpropertyInterpolate("analyticsString", item_r7.analytics || item_r7.analyticsString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r7.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r7.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r7.imgSrc);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r7.text, " ");
} }
function SprkFooterComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵelementStart(1, "h3", 12);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, SprkFooterComponent_div_3_div_3_Template, 8, 6, "div", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.globalHeading, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.globalLinks);
} }
function SprkFooterComponent_div_5_div_1_li_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 15);
    ɵngcc0.ɵɵelementStart(1, "a", 28);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const link_r17 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("href", link_r17.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵpropertyInterpolate("analyticsString", link_r17.analyticsString || link_r17.analytics);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", link_r17.text, " ");
} }
function SprkFooterComponent_div_5_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 25);
    ɵngcc0.ɵɵelementStart(1, "h3", 12);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "ul", 26);
    ɵngcc0.ɵɵtemplate(4, SprkFooterComponent_div_5_div_1_li_4_Template, 3, 3, "li", 27);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r15 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r15.heading, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", item_r15.links);
} }
function SprkFooterComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtemplate(1, SprkFooterComponent_div_5_div_1_Template, 5, 2, "div", 24);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.localLinks);
} }
function SprkFooterComponent_div_6_ul_4_li_1_sprk_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 21);
} if (rf & 2) {
    const item_r20 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("iconType", item_r20.icon);
    ɵngcc0.ɵɵpropertyInterpolate("additionalClasses", item_r20.iconCSS);
} }
function SprkFooterComponent_div_6_ul_4_li_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 22);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r20 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r20.iconScreenReaderText);
} }
function SprkFooterComponent_div_6_ul_4_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 15);
    ɵngcc0.ɵɵelementStart(1, "a", 16);
    ɵngcc0.ɵɵtemplate(2, SprkFooterComponent_div_6_ul_4_li_1_sprk_icon_2_Template, 1, 2, "sprk-icon", 17);
    ɵngcc0.ɵɵtemplate(3, SprkFooterComponent_div_6_ul_4_li_1_span_3_Template, 2, 1, "span", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r20 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("href", item_r20.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵpropertyInterpolate("analyticsString", item_r20.analytics || item_r20.analyticsString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r20.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r20.icon);
} }
function SprkFooterComponent_div_6_ul_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 32);
    ɵngcc0.ɵɵtemplate(1, SprkFooterComponent_div_6_ul_4_li_1_Template, 4, 4, "li", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r18.socialLinks);
} }
function SprkFooterComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 29);
    ɵngcc0.ɵɵelementStart(1, "h3", 12);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 30);
    ɵngcc0.ɵɵtemplate(4, SprkFooterComponent_div_6_ul_4_Template, 2, 1, "ul", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.connectHeading, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.socialLinks);
} }
function SprkFooterComponent_div_9_div_4_img_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 23);
} if (rf & 2) {
    const award_r27 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵclassMap(award_r27.imgCSS);
    ɵngcc0.ɵɵpropertyInterpolate("src", award_r27.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵpropertyInterpolate("alt", award_r27.imgAlt);
} }
function SprkFooterComponent_div_9_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵelementStart(1, "a", 35);
    ɵngcc0.ɵɵtemplate(2, SprkFooterComponent_div_9_div_4_img_2_Template, 1, 5, "img", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const award_r27 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("href", award_r27.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵpropertyInterpolate("analyticsString", award_r27.analytics || award_r27.analyticsString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", award_r27.imgSrc);
} }
function SprkFooterComponent_div_9_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵelementStart(1, "sprk-toggle", 36);
    ɵngcc0.ɵɵelementStart(2, "p", 37);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const toggle_r30 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", toggle_r30.title);
    ɵngcc0.ɵɵpropertyInterpolate("analyticsString", toggle_r30.analytics || toggle_r30.analyticsString);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(toggle_r30.body);
} }
function SprkFooterComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 33);
    ɵngcc0.ɵɵelementStart(1, "h3", 12);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 34);
    ɵngcc0.ɵɵtemplate(4, SprkFooterComponent_div_9_div_4_Template, 3, 3, "div", 27);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, SprkFooterComponent_div_9_div_5_Template, 4, 3, "div", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.awardsHeading, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.awards);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.disclaimerToggle);
} }
function SprkFooterComponent_div_10_p_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 20);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const disclaimer_r32 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", disclaimer_r32.text, " ");
} }
function SprkFooterComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 33);
    ɵngcc0.ɵɵtemplate(1, SprkFooterComponent_div_10_p_1_Template, 2, 1, "p", 38);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r4.disclaimerText);
} }
function SprkFooterComponent_ul_11_li_1_sprk_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 21);
} if (rf & 2) {
    const item_r34 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("iconType", item_r34.icon);
    ɵngcc0.ɵɵpropertyInterpolate("additionalClasses", item_r34.iconCSS);
} }
function SprkFooterComponent_ul_11_li_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 22);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r34 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r34.iconScreenReaderText);
} }
function SprkFooterComponent_ul_11_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 15);
    ɵngcc0.ɵɵelementStart(1, "a", 16);
    ɵngcc0.ɵɵtemplate(2, SprkFooterComponent_ul_11_li_1_sprk_icon_2_Template, 1, 2, "sprk-icon", 17);
    ɵngcc0.ɵɵtemplate(3, SprkFooterComponent_ul_11_li_1_span_3_Template, 2, 1, "span", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r34 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("href", item_r34.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵpropertyInterpolate("analyticsString", item_r34.analytics || item_r34.analyticsString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r34.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r34.icon);
} }
function SprkFooterComponent_ul_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 32);
    ɵngcc0.ɵɵtemplate(1, SprkFooterComponent_ul_11_li_1_Template, 4, 4, "li", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.badgeLinks);
} }
function SprkListItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function SprkMastheadAccordionItemComponent_sprk_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 6);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("iconType", ctx_r0.leadingIcon);
} }
function SprkMastheadComponent_nav_22_li_2_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "sprk-dropdown", 21);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const link_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("choices", link_r3.subNav)("analyticsString", link_r3.analyticsString)("triggerText", link_r3.text);
} }
function SprkMastheadComponent_nav_22_li_2_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "a", 22);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const link_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("analyticsString", link_r3.analyticsString);
    ɵngcc0.ɵɵattribute("href", link_r3.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", link_r3.text, " ");
} }
const _c18 = function (a2) { return { "sprk-c-Masthead__big-nav-item": true, "sprk-o-Stack__item": true, "sprk-c-Masthead__big-nav-item--open": a2 }; };
function SprkMastheadComponent_nav_22_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 19);
    ɵngcc0.ɵɵtemplate(1, SprkMastheadComponent_nav_22_li_2_div_1_Template, 2, 3, "div", 20);
    ɵngcc0.ɵɵtemplate(2, SprkMastheadComponent_nav_22_li_2_div_2_Template, 3, 3, "div", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const link_r3 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c18, link_r3.focused && link_r3.subNav));
    ɵngcc0.ɵɵattribute("aria-haspopup", link_r3.subNav ? "true" : null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", link_r3.subNav);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !link_r3.subNav);
} }
function SprkMastheadComponent_nav_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "nav", 16);
    ɵngcc0.ɵɵelementStart(1, "ul", 17);
    ɵngcc0.ɵɵtemplate(2, SprkMastheadComponent_nav_22_li_2_Template, 3, 6, "li", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("data-id", ctx_r0.idString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getSecondaryNavClasses());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.bigNavLinks);
} }
function SprkMastheadComponent_nav_23_sprk_dropdown_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 29);
    ɵngcc0.ɵɵelementStart(1, "a", 30);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r10.narrowSelector["footer"].analyticsString);
    ɵngcc0.ɵɵattribute("href", ctx_r10.narrowSelector["footer"].href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r10.narrowSelector["footer"].text, " ");
} }
function SprkMastheadComponent_nav_23_sprk_dropdown_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "sprk-dropdown", 27);
    ɵngcc0.ɵɵtemplate(1, SprkMastheadComponent_nav_23_sprk_dropdown_1_div_1_Template, 3, 3, "div", 28);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("triggerText", ctx_r8.narrowSelector["trigger"].text)("choices", ctx_r8.narrowSelector["choices"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.narrowSelector["footer"]);
} }
function SprkMastheadComponent_nav_23_div_3_div_1_li_3_sprk_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 37);
} if (rf & 2) {
    const subNavLink_r15 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("iconType", subNavLink_r15.leadingIcon);
} }
function SprkMastheadComponent_nav_23_div_3_div_1_li_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 34);
    ɵngcc0.ɵɵelementStart(1, "a", 35);
    ɵngcc0.ɵɵtemplate(2, SprkMastheadComponent_nav_23_div_3_div_1_li_3_sprk_icon_2_Template, 1, 1, "sprk-icon", 36);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const subNavLink_r15 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("analyticsString", subNavLink_r15.analyticsString);
    ɵngcc0.ɵɵattribute("href", subNavLink_r15.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", subNavLink_r15.leadingIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", subNavLink_r15.text, " ");
} }
function SprkMastheadComponent_nav_23_div_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "sprk-masthead-accordion-item", 31);
    ɵngcc0.ɵɵelementStart(2, "ul", 32);
    ɵngcc0.ɵɵtemplate(3, SprkMastheadComponent_nav_23_div_3_div_1_li_3_Template, 4, 4, "li", 33);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const narrowLink_r11 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("leadingIcon", narrowLink_r11.leadingIcon)("isActive", narrowLink_r11.active)("title", narrowLink_r11.text);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", narrowLink_r11.subNav);
} }
function SprkMastheadComponent_nav_23_div_3_div_2_sprk_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 37);
} if (rf & 2) {
    const narrowLink_r11 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("iconType", narrowLink_r11.leadingIcon);
} }
const _c19 = function (a1) { return { "sprk-c-MastheadAccordion__item": true, "sprk-c-MastheadAccordion__item--active": a1 }; };
function SprkMastheadComponent_nav_23_div_3_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "li", 17);
    ɵngcc0.ɵɵelementStart(2, "a", 35);
    ɵngcc0.ɵɵelementStart(3, "span", 38);
    ɵngcc0.ɵɵtemplate(4, SprkMastheadComponent_nav_23_div_3_div_2_sprk_icon_4_Template, 1, 1, "sprk-icon", 36);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const narrowLink_r11 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c19, narrowLink_r11.active));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("analyticsString", narrowLink_r11.analyticsString);
    ɵngcc0.ɵɵattribute("href", narrowLink_r11.href, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", narrowLink_r11.leadingIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", narrowLink_r11.text, " ");
} }
function SprkMastheadComponent_nav_23_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, SprkMastheadComponent_nav_23_div_3_div_1_Template, 4, 4, "div", 20);
    ɵngcc0.ɵɵtemplate(2, SprkMastheadComponent_nav_23_div_3_div_2_Template, 6, 7, "div", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const narrowLink_r11 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", narrowLink_r11.subNav);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !narrowLink_r11.subNav);
} }
function SprkMastheadComponent_nav_23_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "nav", 23);
    ɵngcc0.ɵɵtemplate(1, SprkMastheadComponent_nav_23_sprk_dropdown_1_Template, 2, 3, "sprk-dropdown", 24);
    ɵngcc0.ɵɵelementStart(2, "sprk-masthead-accordion", 25);
    ɵngcc0.ɵɵtemplate(3, SprkMastheadComponent_nav_23_div_3_Template, 3, 2, "div", 26);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵprojection(4, 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("id", ctx_r1.narrowNavId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.narrowSelector);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("additionalClasses", ctx_r1.getNarrowNavClasses());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.narrowNavLinks);
} }
const _c20 = [[["", "logo-slot", ""]], [["", "navItem-slot", ""]], [["", "little-nav-slot", ""]], [["", "utility-slot", ""]], [["", "narrowNavFooter", ""]]];
const _c21 = function (a3) { return { "sprk-c-Icon": true, "sprk-c-Icon--l": true, "sprk-c-Menu__icon": true, "sprk-c-Menu__icon--open": a3 }; };
const _c22 = ["[logo-slot]", "[navItem-slot]", "[little-nav-slot]", "[utility-slot]", "[narrowNavFooter]"];
function SprkModalComponent_div_0_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function SprkModalComponent_div_0_button_5_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.closeModal($event); });
    ɵngcc0.ɵɵelement(1, "sprk-icon", 11);
    ɵngcc0.ɵɵelementEnd();
} }
function SprkModalComponent_div_0_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 12);
} }
function SprkModalComponent_div_0_footer_9_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "footer", 13);
    ɵngcc0.ɵɵelementStart(1, "button", 14);
    ɵngcc0.ɵɵlistener("click", function SprkModalComponent_div_0_footer_9_Template_button_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.emitConfirmClick($event); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 15);
    ɵngcc0.ɵɵlistener("click", function SprkModalComponent_div_0_footer_9_Template_button_click_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.emitCancelClick($event); });
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("data-analytics", ctx_r4.confirmAnalyticsString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.confirmText, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("data-analytics", ctx_r4.cancelAnalyticsString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.cancelText, " ");
} }
const _c23 = function (a1) { return { "sprk-c-Modal": true, "sprk-c-Modal--wait": a1 }; };
function SprkModalComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵelementStart(2, "header", 4);
    ɵngcc0.ɵɵelementStart(3, "h2", 5);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, SprkModalComponent_div_0_button_5_Template, 2, 0, "button", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 7);
    ɵngcc0.ɵɵtemplate(7, SprkModalComponent_div_0_div_7_Template, 1, 0, "div", 8);
    ɵngcc0.ɵɵprojection(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, SprkModalComponent_div_0_footer_9_Template, 5, 4, "footer", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c23, ctx_r0.modalType === "wait"));
    ɵngcc0.ɵɵattribute("aria-labelledby", ctx_r0.heading_id)("aria-describedby", ctx_r0.content_id)("data-id", ctx_r0.idString);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("id", ctx_r0.heading_id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.title, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.modalType != "wait");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.modalType == "wait");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.modalType === "choice");
} }
function SprkModalComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵlistener("click", function SprkModalComponent_div_1_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.closeModal($event); });
    ɵngcc0.ɵɵelementEnd();
} }
function SprkOrderedListComponent_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 0);
    ɵngcc0.ɵɵelementContainer(1, 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", item_r1.additionalClasses);
    ɵngcc0.ɵɵattribute("data-analytics", item_r1.analyticsString)("data-id", item_r1.idString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", item_r1.content);
} }
function SprkUnorderedListComponent_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 0);
    ɵngcc0.ɵɵelementContainer(1, 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", item_r1.additionalClasses);
    ɵngcc0.ɵɵattribute("data-analytics", item_r1.analyticsString)("data-id", item_r1.idString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", item_r1.content);
} }
const _c24 = function (a1) { return { "sprk-c-Pagination__link": true, "sprk-c-Pagination__link--current": a1 }; };
function SprkPaginationComponent_sprk_list_item_7_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "sprk-list-item");
    ɵngcc0.ɵɵelementStart(1, "a", 8);
    ɵngcc0.ɵɵlistener("click", function SprkPaginationComponent_sprk_list_item_7_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.goToPage($event, 1); });
    ɵngcc0.ɵɵtext(2, " 1 ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c24, ctx_r0.currentPage === 1))("analyticsString", ctx_r0.analyticsStringFirstLink);
    ɵngcc0.ɵɵattribute("aria-current", ctx_r0.currentPage === 1);
} }
function SprkPaginationComponent_sprk_list_item_8_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "sprk-list-item");
    ɵngcc0.ɵɵelementStart(1, "a", 9);
    ɵngcc0.ɵɵlistener("click", function SprkPaginationComponent_sprk_list_item_8_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.goToPage($event, 2); });
    ɵngcc0.ɵɵtext(2, " 2 ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-current", false);
} }
function SprkPaginationComponent_sprk_list_item_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "sprk-list-item");
    ɵngcc0.ɵɵtext(1, " ... ");
    ɵngcc0.ɵɵelementEnd();
} }
function SprkPaginationComponent_sprk_list_item_10_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "sprk-list-item");
    ɵngcc0.ɵɵelementStart(1, "a", 10);
    ɵngcc0.ɵɵlistener("click", function SprkPaginationComponent_sprk_list_item_10_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.goToPage($event, ctx_r10.currentPage); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattributeInterpolate1("aria-label", "Page ", ctx_r3.currentPage, "");
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r3.analyticsStringSecondLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.currentPage, " ");
} }
function SprkPaginationComponent_sprk_list_item_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "sprk-list-item");
    ɵngcc0.ɵɵtext(1, " ... ");
    ɵngcc0.ɵɵelementEnd();
} }
function SprkPaginationComponent_sprk_list_item_12_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "sprk-list-item");
    ɵngcc0.ɵɵelementStart(1, "a", 11);
    ɵngcc0.ɵɵlistener("click", function SprkPaginationComponent_sprk_list_item_12_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.goToPage($event, ctx_r12.totalPages()); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattributeInterpolate1("aria-label", "Page ", ctx_r5.totalPages(), "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c24, ctx_r5.currentPage === ctx_r5.totalPages()))("analyticsString", ctx_r5.analyticsStringThirdLink);
    ɵngcc0.ɵɵattribute("aria-current", ctx_r5.currentPage === ctx_r5.totalPages());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.totalPages(), " ");
} }
function SprkPromoComponent_a_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 8);
    ɵngcc0.ɵɵelement(1, "img", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getClassesFlag())("analyticsString", ctx_r0.flagLinkAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r0.imgHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("alt", ctx_r0.imgAlt);
    ɵngcc0.ɵɵpropertyInterpolate("src", ctx_r0.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
} }
function SprkPromoComponent_a_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 10);
    ɵngcc0.ɵɵelement(1, "img", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r1.imgLinkAnalytics)("ngClass", ctx_r1.getClassesImg());
    ɵngcc0.ɵɵattribute("href", ctx_r1.imgHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("alt", ctx_r1.imgAlt);
    ɵngcc0.ɵɵpropertyInterpolate("src", ctx_r1.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
} }
function SprkPromoComponent_h3_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h3", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.title, " ");
} }
function SprkPromoComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.subtitle, " ");
} }
function SprkPromoComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "a", 15);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r4.buttonLinkAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r4.buttonHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.ctaText, " ");
} }
function SprkPromoComponent_a_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 16);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r5.ctaLinkAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r5.ctaLinkHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.ctaText, " ");
} }
function SprkPromoComponent_a_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 8);
    ɵngcc0.ɵɵelement(1, "img", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r6.getClassesFlag())("analyticsString", ctx_r6.flagLinkAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r6.imgHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("alt", ctx_r6.imgAlt);
    ɵngcc0.ɵɵpropertyInterpolate("src", ctx_r6.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
} }
function SprkPromoComponent_a_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 10);
    ɵngcc0.ɵɵelement(1, "img", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r7.imgLinkAnalytics)("ngClass", ctx_r7.getClassesImg());
    ɵngcc0.ɵɵattribute("href", ctx_r7.imgHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("alt", ctx_r7.imgAlt);
    ɵngcc0.ɵɵpropertyInterpolate("src", ctx_r7.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
} }
const _c25 = [[["", "sprkTabbedNavigationTab", ""]], [["", "sprkTabbedNavigationPane", ""]], "*"];
const _c26 = ["[sprkTabbedNavigationTab]", "[sprkTabbedNavigationPane]", "*"];
function SprkAwardComponent_sprk_toggle_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "sprk-toggle", 7);
    ɵngcc0.ɵɵelementStart(1, "p", 8);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r0.disclaimerTitle);
    ɵngcc0.ɵɵpropertyInterpolate("analyticsString", ctx_r0.analyticsStringDisclaimer);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.disclaimerCopy);
} }
function SprkCardComponent_div_0_a_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 9);
    ɵngcc0.ɵɵelement(1, "img", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("href", ctx_r3.imgHref, ɵngcc0.ɵɵsanitizeUrl)("analyticsString", ctx_r3.imgLinkAnalytics);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("alt", ctx_r3.imgAlt)("src", ctx_r3.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
} }
function SprkCardComponent_div_0_a_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 11);
    ɵngcc0.ɵɵelement(1, "sprk-icon", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r4.iconLinkAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r4.iconHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("iconType", ctx_r4.iconType)("additionalClasses", ctx_r4.additionalClassesIcon);
} }
function SprkCardComponent_div_0_sprk_icon_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 13);
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("iconType", ctx_r5.ctaIcon);
} }
const _c27 = function (a4) { return { "sprk-o-Stack__item": true, "sprk-c-Card__content": true, "sprk-o-Stack": true, "sprk-o-Stack--medium": true, "sprk-u-TextAlign--center": a4 }; };
function SprkCardComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, SprkCardComponent_div_0_a_1_Template, 2, 4, "a", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 1);
    ɵngcc0.ɵɵtemplate(3, SprkCardComponent_div_0_a_3_Template, 2, 4, "a", 3);
    ɵngcc0.ɵɵelementStart(4, "h3", 4);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "p", 5);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 6);
    ɵngcc0.ɵɵelementStart(9, "a", 7);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵtemplate(11, SprkCardComponent_div_0_sprk_icon_11_Template, 1, 1, "sprk-icon", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getClassesCard());
    ɵngcc0.ɵɵattribute("data-id", ctx_r0.idString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.media === "img");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c27, ctx_r0.media === "icon"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.media === "icon");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.body);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getClassesCta())("analyticsString", ctx_r0.ctaAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r0.ctaHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.ctaText, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.ctaIcon && ctx_r0.ctaType === "link");
} }
function SprkCardComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.getClassesCard());
    ɵngcc0.ɵɵattribute("data-id", ctx_r1.idString);
} }
function SprkCardComponent_div_2_a_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 18);
    ɵngcc0.ɵɵelement(1, "img");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r6.imgLinkAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r6.imgHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("alt", ctx_r6.imgAlt)("src", ctx_r6.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
} }
function SprkCardComponent_div_2_a_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 19);
    ɵngcc0.ɵɵelement(1, "sprk-icon", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r7.iconLinkAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r7.iconHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("iconType", ctx_r7.iconType)("additionalClasses", ctx_r7.additionalClassesIcon);
} }
function SprkCardComponent_div_2_sprk_icon_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "sprk-icon", 13);
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("iconType", ctx_r8.ctaIcon);
} }
function SprkCardComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "h3", 14);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 15);
    ɵngcc0.ɵɵtemplate(4, SprkCardComponent_div_2_a_4_Template, 2, 4, "a", 16);
    ɵngcc0.ɵɵtemplate(5, SprkCardComponent_div_2_a_5_Template, 2, 4, "a", 17);
    ɵngcc0.ɵɵelementStart(6, "p", 5);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 6);
    ɵngcc0.ɵɵelementStart(9, "a", 7);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵtemplate(11, SprkCardComponent_div_2_sprk_icon_11_Template, 1, 1, "sprk-icon", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.getClassesCard());
    ɵngcc0.ɵɵattribute("data-id", ctx_r2.idString);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.title, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.media === "img");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.media === "icon");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.body);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.getClassesCta())("analyticsString", ctx_r2.ctaAnalytics);
    ɵngcc0.ɵɵattribute("href", ctx_r2.ctaHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.ctaText, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.ctaIcon && ctx_r2.ctaType === "link");
} }
function SprkDictionaryComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelementStart(1, "dt", 4);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "dd", 5);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const key_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", key_r1, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data[key_r1]);
} }
function SprkHighlightBoardComponent_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 5);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("src", ctx_r0.imgSrc, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵpropertyInterpolate("alt", ctx_r0.imgAlt);
} }
function SprkHighlightBoardComponent_sprk_stack_5_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelementStart(1, "a", 10);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r2.analyticsStringCta2);
    ɵngcc0.ɵɵattribute("href", ctx_r2.ctaHref2, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.ctaText2, " ");
} }
function SprkHighlightBoardComponent_sprk_stack_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "sprk-stack", 6);
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵelementStart(2, "a", 8);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SprkHighlightBoardComponent_sprk_stack_5_div_4_Template, 3, 3, "div", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate1("additionalClasses", "sprk-o-Stack--center-column ", ctx_r1.centerBtns, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("analyticsString", ctx_r1.analyticsStringCta);
    ɵngcc0.ɵɵattribute("href", ctx_r1.ctaHref, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.ctaText, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.ctaText2);
} }
const _c28 = function (a0, a1) { return { "sprk-b-TypeDisplayTwo": a0, "sprk-b-TypeDisplayOne": a1, "sprk-c-HighlightBoard__heading": true }; };
const _c29 = [[["", "media-slot", ""]], [["", "body-slot", ""]]];
const _c30 = ["[media-slot]", "[body-slot]"];
const environment = {
    version: '10.0.0'
};

let SprkFormatterDateDirective = class SprkFormatterDateDirective {
    constructor(ref) {
        this.ref = ref;
    }
    onFocus(value) {
        this.ref.nativeElement.value = this.formatDate(value);
    }
    formatDate(value) {
        const m = value.match(
        // tslint:disable-next-line:max-line-length
        /^(((0[13578]|1[02])([/-]?)(0[1-9]|[12]\d|3[01])|(0[469]|11)([/-]?)(0[1-9]|[12]\d|30)|02([/-]?)((0[1-9])|[12]\d))(\4|\7|\9)[12]\d{3})?$/);
        let newValue = '';
        const cleanValue = value.replace(/[/-]/g, '');
        if (m) {
            for (let i = 0; i < cleanValue.length; i += 1) {
                if (i === 1 || i === 3) {
                    newValue += `${cleanValue[i]}/`;
                }
                else {
                    newValue += cleanValue[i];
                }
            }
            return newValue;
        }
        else {
            return value;
        }
    }
};
SprkFormatterDateDirective.ɵfac = function SprkFormatterDateDirective_Factory(t) { return new (t || SprkFormatterDateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkFormatterDateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkFormatterDateDirective, selectors: [["", "sprkFormatterDate", ""]], hostBindings: function SprkFormatterDateDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("input", function SprkFormatterDateDirective_input_HostBindingHandler($event) { return ctx.onFocus($event.target.value); });
    } } });
SprkFormatterDateDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    HostListener('input', ['$event.target.value']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkFormatterDateDirective.prototype, "onFocus", null);
SprkFormatterDateDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkFormatterDateDirective);

let SprkFormatterDateModule = class SprkFormatterDateModule {
};
SprkFormatterDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkFormatterDateModule });
SprkFormatterDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkFormatterDateModule_Factory(t) { return new (t || SprkFormatterDateModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkFormatterMonetaryDirective = class SprkFormatterMonetaryDirective {
    constructor(ref) {
        this.ref = ref;
    }
    onBlur(value) {
        this.ref.nativeElement.value = this.formatMonetary(value);
    }
    formatMonetary(value) {
        let number;
        if (this.ref.nativeElement.validity.valid) {
            number = Number(value.replace(/[\$,]/g, ''));
            if (isNaN(number)) {
                return value;
            }
            return number
                .toLocaleString('en-US', { style: 'currency', currency: 'USD' })
                .replace(/\$/g, '');
        }
        return value;
    }
};
SprkFormatterMonetaryDirective.ɵfac = function SprkFormatterMonetaryDirective_Factory(t) { return new (t || SprkFormatterMonetaryDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkFormatterMonetaryDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkFormatterMonetaryDirective, selectors: [["", "sprkFormatterMonetary", ""]], hostBindings: function SprkFormatterMonetaryDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("blur", function SprkFormatterMonetaryDirective_blur_HostBindingHandler() { return ctx.onBlur(ctx.ref.nativeElement.value); });
    } } });
SprkFormatterMonetaryDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    HostListener('blur', ['this.ref.nativeElement.value']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkFormatterMonetaryDirective.prototype, "onBlur", null);
SprkFormatterMonetaryDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkFormatterMonetaryDirective);

let SprkFormatterMonetaryModule = class SprkFormatterMonetaryModule {
};
SprkFormatterMonetaryModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkFormatterMonetaryModule });
SprkFormatterMonetaryModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkFormatterMonetaryModule_Factory(t) { return new (t || SprkFormatterMonetaryModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkFormatterPhoneNumberDirective = class SprkFormatterPhoneNumberDirective {
    constructor(ref) {
        this.ref = ref;
    }
    onFocus(value) {
        this.ref.nativeElement.value = this.formatPhone(value);
    }
    formatPhone(value) {
        const newValue = `${value}`.replace(/\D/g, '');
        const m = newValue.match(/^(\d{3})(\d{3})(\d{4})$/);
        if (m) {
            return `(${m[1]}) ${m[2]}-${m[3]}`;
        }
        else {
            return value;
        }
    }
};
SprkFormatterPhoneNumberDirective.ɵfac = function SprkFormatterPhoneNumberDirective_Factory(t) { return new (t || SprkFormatterPhoneNumberDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkFormatterPhoneNumberDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkFormatterPhoneNumberDirective, selectors: [["", "sprkFormatterPhoneNumber", ""]], hostBindings: function SprkFormatterPhoneNumberDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("input", function SprkFormatterPhoneNumberDirective_input_HostBindingHandler($event) { return ctx.onFocus($event.target.value); });
    } } });
SprkFormatterPhoneNumberDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    HostListener('input', ['$event.target.value']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkFormatterPhoneNumberDirective.prototype, "onFocus", null);
SprkFormatterPhoneNumberDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkFormatterPhoneNumberDirective);

let SprkFormatterPhoneNumberModule = class SprkFormatterPhoneNumberModule {
};
SprkFormatterPhoneNumberModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkFormatterPhoneNumberModule });
SprkFormatterPhoneNumberModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkFormatterPhoneNumberModule_Factory(t) { return new (t || SprkFormatterPhoneNumberModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkFormatterSsnDirective = class SprkFormatterSsnDirective {
    constructor(ref) {
        this.ref = ref;
    }
    onFocus(value) {
        this.ref.nativeElement.value = this.formatSSN(value);
    }
    formatSSN(value) {
        const m = value.match(/(^(?!666|000|9\d{2})\d{3}([-]{0,1})(?!00)\d{2}\1(?!0{4})\2\d{4}$)|^$/);
        if (m) {
            let val = value.trim().replace(/[ -]/g, '');
            let newVal = '';
            const sizes = [3, 2, 4];
            sizes.forEach(size => {
                if (val.length > size) {
                    newVal += `${val.substr(0, size)}-`;
                    val = val.substr(size);
                }
            });
            newVal += val;
            return newVal;
        }
        return value;
    }
};
SprkFormatterSsnDirective.ɵfac = function SprkFormatterSsnDirective_Factory(t) { return new (t || SprkFormatterSsnDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkFormatterSsnDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkFormatterSsnDirective, selectors: [["", "sprkFormatterSsn", ""]], hostBindings: function SprkFormatterSsnDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("input", function SprkFormatterSsnDirective_input_HostBindingHandler($event) { return ctx.onFocus($event.target.value); });
    } } });
SprkFormatterSsnDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    HostListener('input', ['$event.target.value']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkFormatterSsnDirective.prototype, "onFocus", null);
SprkFormatterSsnDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkFormatterSsnDirective);

let SprkFormatterSsnModule = class SprkFormatterSsnModule {
};
SprkFormatterSsnModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkFormatterSsnModule });
SprkFormatterSsnModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkFormatterSsnModule_Factory(t) { return new (t || SprkFormatterSsnModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkDatepickerDirective = class SprkDatepickerDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    ngOnInit() {
        const input = this.ref.nativeElement;
        const tdpConfig = {
            mode: 'dp-below',
            lang: {
                days: ['S', 'M', 'T', 'W', 'T', 'F', 'S']
            },
            min: '01/1/2008',
            max: '01/1/2068',
            format: date => date
                .toLocaleDateString('en-US', {
                month: '2-digit',
                day: '2-digit',
                year: 'numeric'
            })
                .replace(/[^ -~]/g, '')
        };
        if (TinyDatePicker) {
            TinyDatePicker(input, Object.assign(Object.assign({}, tdpConfig), this.sprkDatePickerConfig)).on('select', () => {
                let event;
                if (typeof (Event) === 'function') {
                    event = new Event('input');
                }
                else {
                    event = document.createEvent('Event');
                    event.initEvent('input', true, true);
                }
                this.ref.nativeElement.dispatchEvent(event);
                this.ref.nativeElement.focus();
            });
        }
    }
};
SprkDatepickerDirective.ɵfac = function SprkDatepickerDirective_Factory(t) { return new (t || SprkDatepickerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkDatepickerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkDatepickerDirective, selectors: [["", "sprkDatepicker", ""]], inputs: { sprkDatePickerConfig: "sprkDatePickerConfig" } });
SprkDatepickerDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkDatepickerDirective.prototype, "sprkDatePickerConfig", void 0);
SprkDatepickerDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkDatepickerDirective);

let SprkDatepickerModule = class SprkDatepickerModule {
};
SprkDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkDatepickerModule });
SprkDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkDatepickerModule_Factory(t) { return new (t || SprkDatepickerModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkFieldErrorDirective = class SprkFieldErrorDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-ErrorContainer'];
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(item => {
            this.ref.nativeElement.classList.add(item);
        });
    }
};
SprkFieldErrorDirective.ɵfac = function SprkFieldErrorDirective_Factory(t) { return new (t || SprkFieldErrorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkFieldErrorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkFieldErrorDirective, selectors: [["", "sprkFieldError", ""]] });
SprkFieldErrorDirective.ctorParameters = () => [
    { type: ElementRef }
];
SprkFieldErrorDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkFieldErrorDirective);

let SprkFieldErrorModule = class SprkFieldErrorModule {
};
SprkFieldErrorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkFieldErrorModule });
SprkFieldErrorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkFieldErrorModule_Factory(t) { return new (t || SprkFieldErrorModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkHelperTextDirective = class SprkHelperTextDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-HelperText'];
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(item => {
            this.ref.nativeElement.classList.add(item);
        });
    }
};
SprkHelperTextDirective.ɵfac = function SprkHelperTextDirective_Factory(t) { return new (t || SprkHelperTextDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkHelperTextDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkHelperTextDirective, selectors: [["", "sprkHelperText", ""]] });
SprkHelperTextDirective.ctorParameters = () => [
    { type: ElementRef }
];
SprkHelperTextDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkHelperTextDirective);

let SprkHelperTextModule = class SprkHelperTextModule {
};
SprkHelperTextModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkHelperTextModule });
SprkHelperTextModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkHelperTextModule_Factory(t) { return new (t || SprkHelperTextModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkInputDirective = class SprkInputDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    OnChange($event) {
        const value = this.ref.nativeElement.value;
        if (value.length > 0) {
            this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');
        }
        else {
            this.ref.nativeElement.classList.remove('sprk-b-Input--has-floating-label');
        }
    }
    ngOnInit() {
        if (this.ref.nativeElement.nodeName === 'SELECT') {
            this.ref.nativeElement.classList.add('sprk-b-Select');
        }
        else if (this.ref.nativeElement.nodeName === 'TEXTAREA') {
            this.ref.nativeElement.classList.add('sprk-b-TextInput');
            this.ref.nativeElement.classList.add('sprk-b-TextArea');
        }
        else {
            this.ref.nativeElement.classList.add('sprk-b-TextInput');
        }
        if (this.ref.nativeElement.value.length > 0) {
            this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');
        }
        this.ref.nativeElement.classList.add('sprk-u-Width-100');
    }
};
SprkInputDirective.ɵfac = function SprkInputDirective_Factory(t) { return new (t || SprkInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkInputDirective, selectors: [["", "sprkInput", ""]], hostBindings: function SprkInputDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("change", function SprkInputDirective_change_HostBindingHandler($event) { return ctx.OnChange($event); });
    } } });
SprkInputDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    HostListener('change', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkInputDirective.prototype, "OnChange", null);
SprkInputDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkInputDirective);

let SprkInputModule = class SprkInputModule {
};
SprkInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkInputModule });
SprkInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkInputModule_Factory(t) { return new (t || SprkInputModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkLabelDirective = class SprkLabelDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-Label'];
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(item => {
            this.ref.nativeElement.classList.add(item);
        });
    }
};
SprkLabelDirective.ɵfac = function SprkLabelDirective_Factory(t) { return new (t || SprkLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkLabelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkLabelDirective, selectors: [["", "sprkLabel", ""]] });
SprkLabelDirective.ctorParameters = () => [
    { type: ElementRef }
];
SprkLabelDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkLabelDirective);

let SprkLabelModule = class SprkLabelModule {
};
SprkLabelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkLabelModule });
SprkLabelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkLabelModule_Factory(t) { return new (t || SprkLabelModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkSelectionInputDirective = class SprkSelectionInputDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-SelectionInput'];
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(item => {
            this.ref.nativeElement.classList.add(item);
        });
    }
};
SprkSelectionInputDirective.ɵfac = function SprkSelectionInputDirective_Factory(t) { return new (t || SprkSelectionInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkSelectionInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkSelectionInputDirective, selectors: [["", "sprkSelectionInput", ""]] });
SprkSelectionInputDirective.ctorParameters = () => [
    { type: ElementRef }
];
SprkSelectionInputDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkSelectionInputDirective);

let SprkSelectionInputModule = class SprkSelectionInputModule {
};
SprkSelectionInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkSelectionInputModule });
SprkSelectionInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkSelectionInputModule_Factory(t) { return new (t || SprkSelectionInputModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkSelectionLabelDirective = class SprkSelectionLabelDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-Label', 'sprk-b-Label--inline'];
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(item => {
            this.ref.nativeElement.classList.add(item);
        });
    }
};
SprkSelectionLabelDirective.ɵfac = function SprkSelectionLabelDirective_Factory(t) { return new (t || SprkSelectionLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkSelectionLabelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkSelectionLabelDirective, selectors: [["", "sprkSelectionLabel", ""]] });
SprkSelectionLabelDirective.ctorParameters = () => [
    { type: ElementRef }
];
SprkSelectionLabelDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkSelectionLabelDirective);

let SprkSelectionLabelModule = class SprkSelectionLabelModule {
};
SprkSelectionLabelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkSelectionLabelModule });
SprkSelectionLabelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkSelectionLabelModule_Factory(t) { return new (t || SprkSelectionLabelModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkStackItemDirective = class SprkStackItemDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    ngOnInit() {
        this.ref.nativeElement.classList.add('sprk-o-Stack__item');
    }
};
SprkStackItemDirective.ɵfac = function SprkStackItemDirective_Factory(t) { return new (t || SprkStackItemDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkStackItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkStackItemDirective, selectors: [["", "sprkStackItem", ""]] });
SprkStackItemDirective.ctorParameters = () => [
    { type: ElementRef }
];
SprkStackItemDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkStackItemDirective);

let SprkStackItemModule = class SprkStackItemModule {
};
SprkStackItemModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkStackItemModule });
SprkStackItemModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkStackItemModule_Factory(t) { return new (t || SprkStackItemModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkTableEmptyHeadingDirective = class SprkTableEmptyHeadingDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-Table__empty-heading'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(className => {
            this.ref.nativeElement.classList.add(className);
        });
    }
};
SprkTableEmptyHeadingDirective.ɵfac = function SprkTableEmptyHeadingDirective_Factory(t) { return new (t || SprkTableEmptyHeadingDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkTableEmptyHeadingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkTableEmptyHeadingDirective, selectors: [["", "sprkTableEmptyHeading", ""]], inputs: { additionalClasses: "additionalClasses" } });
SprkTableEmptyHeadingDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTableEmptyHeadingDirective.prototype, "additionalClasses", void 0);
SprkTableEmptyHeadingDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkTableEmptyHeadingDirective);

let SprkTableEmptyHeadingModule = class SprkTableEmptyHeadingModule {
};
SprkTableEmptyHeadingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTableEmptyHeadingModule });
SprkTableEmptyHeadingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTableEmptyHeadingModule_Factory(t) { return new (t || SprkTableEmptyHeadingModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkTableGroupedColumnDirective = class SprkTableGroupedColumnDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-Table__grouped-column'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(className => {
            this.ref.nativeElement.classList.add(className);
        });
    }
};
SprkTableGroupedColumnDirective.ɵfac = function SprkTableGroupedColumnDirective_Factory(t) { return new (t || SprkTableGroupedColumnDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkTableGroupedColumnDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkTableGroupedColumnDirective, selectors: [["", "sprkTableGroupedColumn", ""]], inputs: { additionalClasses: "additionalClasses" } });
SprkTableGroupedColumnDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTableGroupedColumnDirective.prototype, "additionalClasses", void 0);
SprkTableGroupedColumnDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkTableGroupedColumnDirective);

let SprkTableGroupedColumnModule = class SprkTableGroupedColumnModule {
};
SprkTableGroupedColumnModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTableGroupedColumnModule });
SprkTableGroupedColumnModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTableGroupedColumnModule_Factory(t) { return new (t || SprkTableGroupedColumnModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkTableHeadDirective = class SprkTableHeadDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-Table__head'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(className => {
            this.ref.nativeElement.classList.add(className);
        });
    }
};
SprkTableHeadDirective.ɵfac = function SprkTableHeadDirective_Factory(t) { return new (t || SprkTableHeadDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkTableHeadDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkTableHeadDirective, selectors: [["", "sprkTableHead", ""]], inputs: { additionalClasses: "additionalClasses" } });
SprkTableHeadDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTableHeadDirective.prototype, "additionalClasses", void 0);
SprkTableHeadDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkTableHeadDirective);

let SprkTableHeadModule = class SprkTableHeadModule {
};
SprkTableHeadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTableHeadModule });
SprkTableHeadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTableHeadModule_Factory(t) { return new (t || SprkTableHeadModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkTableRowHeadingDirective = class SprkTableRowHeadingDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-Table__row-heading'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(className => {
            this.ref.nativeElement.classList.add(className);
        });
    }
};
SprkTableRowHeadingDirective.ɵfac = function SprkTableRowHeadingDirective_Factory(t) { return new (t || SprkTableRowHeadingDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkTableRowHeadingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkTableRowHeadingDirective, selectors: [["", "sprkTableRowHeading", ""]], inputs: { additionalClasses: "additionalClasses" } });
SprkTableRowHeadingDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTableRowHeadingDirective.prototype, "additionalClasses", void 0);
SprkTableRowHeadingDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkTableRowHeadingDirective);

let SprkTableRowHeadingModule = class SprkTableRowHeadingModule {
};
SprkTableRowHeadingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTableRowHeadingModule });
SprkTableRowHeadingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTableRowHeadingModule_Factory(t) { return new (t || SprkTableRowHeadingModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkTabbedNavigationPanelDirective = class SprkTabbedNavigationPanelDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Tabs__content'];
        if (!this.defaultActive) {
            classArray.push('sprk-u-HideWhenJs');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray;
    }
    ngOnInit() {
        this.ref.nativeElement.setAttribute('role', 'tabpanel');
        this.ref.nativeElement.setAttribute('tabindex', '0');
        this.getClasses().forEach(item => {
            this.ref.nativeElement.classList.add(item);
        });
    }
};
SprkTabbedNavigationPanelDirective.ɵfac = function SprkTabbedNavigationPanelDirective_Factory(t) { return new (t || SprkTabbedNavigationPanelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkTabbedNavigationPanelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkTabbedNavigationPanelDirective, selectors: [["", "sprkTabbedNavigationPanel", ""]], inputs: { additionalClasses: "additionalClasses", defaultActive: "defaultActive" } });
SprkTabbedNavigationPanelDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTabbedNavigationPanelDirective.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkTabbedNavigationPanelDirective.prototype, "defaultActive", void 0);
SprkTabbedNavigationPanelDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkTabbedNavigationPanelDirective);

let SprkTabbedNavigationPanelModule = class SprkTabbedNavigationPanelModule {
};
SprkTabbedNavigationPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTabbedNavigationPanelModule });
SprkTabbedNavigationPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTabbedNavigationPanelModule_Factory(t) { return new (t || SprkTabbedNavigationPanelModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkTabbedNavigationTabDirective = class SprkTabbedNavigationTabDirective {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Tabs__button'];
        if (this.defaultActive) {
            classArray.push('sprk-c-Tabs__button--active');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray;
    }
    ngOnInit() {
        this.getClasses().forEach(item => {
            this.ref.nativeElement.classList.add(item);
        });
        this.ref.nativeElement.setAttribute('role', 'tab');
        this.ref.nativeElement.setAttribute('aria-selected', this.defaultActive ? 'true' : 'false');
        if (this.analyticsString) {
            this.ref.nativeElement.setAttribute('data-analytics', this.analyticsString);
        }
    }
};
SprkTabbedNavigationTabDirective.ɵfac = function SprkTabbedNavigationTabDirective_Factory(t) { return new (t || SprkTabbedNavigationTabDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkTabbedNavigationTabDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkTabbedNavigationTabDirective, selectors: [["", "sprkTabbedNavigationTab", ""]], inputs: { additionalClasses: "additionalClasses", defaultActive: "defaultActive", analyticsString: "analyticsString" } });
SprkTabbedNavigationTabDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTabbedNavigationTabDirective.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkTabbedNavigationTabDirective.prototype, "defaultActive", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTabbedNavigationTabDirective.prototype, "analyticsString", void 0);
SprkTabbedNavigationTabDirective = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkTabbedNavigationTabDirective);

let SprkTabbedNavigationTabModule = class SprkTabbedNavigationTabModule {
};
SprkTabbedNavigationTabModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTabbedNavigationTabModule });
SprkTabbedNavigationTabModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTabbedNavigationTabModule_Factory(t) { return new (t || SprkTabbedNavigationTabModule)(); }, imports: [[CommonModule, RouterModule]] });

let SparkInputContainerComponent = class SparkInputContainerComponent {
    constructor() {
        /**
         * @ignore
         */
        this.id = uniqueId();
        /**
         * @ignore
         */
        this.input_id = `input_${this.id}`;
        /**
         * @ignore
         */
        this.error_id = `error_${this.id}`;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-InputContainer'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    ngOnInit() {
        if (this.label && this.input) {
            this.label.ref.nativeElement.setAttribute('for', this.input_id);
            this.input.ref.nativeElement.id = this.input_id;
        }
        if (this.input && this.error) {
            this.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            this.error.ref.nativeElement.id = this.error_id;
        }
    }
};
SparkInputContainerComponent.ɵfac = function SparkInputContainerComponent_Factory(t) { return new (t || SparkInputContainerComponent)(); };
SparkInputContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SparkInputContainerComponent, selectors: [["sprk-input-container"]], contentQueries: function SparkInputContainerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkLabelDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkInputDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkFieldErrorDirective, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.label = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.error = _t.first);
    } }, inputs: { additionalClasses: "additionalClasses", iconContainerClasses: "iconContainerClasses" }, ngContentSelectors: _c1, decls: 7, vars: 1, consts: [[3, "ngClass"]], template: function SparkInputContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵprojection(3, 2);
        ɵngcc0.ɵɵprojection(4, 3);
        ɵngcc0.ɵɵprojection(5, 4);
        ɵngcc0.ɵɵprojection(6, 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SparkInputContainerComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SparkInputContainerComponent.prototype, "iconContainerClasses", void 0);
__decorate([
    ContentChild(SprkLabelDirective, { static: true }),
    __metadata("design:type", SprkLabelDirective)
], SparkInputContainerComponent.prototype, "label", void 0);
__decorate([
    ContentChild(SprkInputDirective, { static: true }),
    __metadata("design:type", SprkInputDirective)
], SparkInputContainerComponent.prototype, "input", void 0);
__decorate([
    ContentChild(SprkFieldErrorDirective, { static: true }),
    __metadata("design:type", SprkFieldErrorDirective)
], SparkInputContainerComponent.prototype, "error", void 0);

let SparkInputContainerModule = class SparkInputContainerModule {
};
SparkInputContainerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SparkInputContainerModule });
SparkInputContainerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SparkInputContainerModule_Factory(t) { return new (t || SparkInputContainerModule)(); }, imports: [[CommonModule, RouterModule, FormsModule, ReactiveFormsModule]] });

let SprkHugeInputContainerComponent = class SprkHugeInputContainerComponent {
    constructor() {
        /**
         * @ignore
         */
        this.id = uniqueId();
        /**
         * @ignore
         */
        this.input_id = `input_${this.id}`;
        /**
         * @ignore
         */
        this.error_id = `error_${this.id}`;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-b-InputContainer',
            'sprk-b-InputContainer--huge'
        ];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    ngOnInit() {
        if (this.label && this.input) {
            this.label.ref.nativeElement.setAttribute('for', this.input_id);
            this.input.ref.nativeElement.id = this.input_id;
        }
        if (this.input && this.error) {
            this.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            this.error.ref.nativeElement.id = this.error_id;
        }
    }
};
SprkHugeInputContainerComponent.ɵfac = function SprkHugeInputContainerComponent_Factory(t) { return new (t || SprkHugeInputContainerComponent)(); };
SprkHugeInputContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkHugeInputContainerComponent, selectors: [["sprk-huge-input-container"]], contentQueries: function SprkHugeInputContainerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkLabelDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkInputDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkFieldErrorDirective, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.label = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.error = _t.first);
    } }, inputs: { additionalClasses: "additionalClasses", iconContainerClasses: "iconContainerClasses" }, ngContentSelectors: _c3, decls: 7, vars: 1, consts: [[3, "ngClass"]], template: function SprkHugeInputContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c2);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵprojection(3, 2);
        ɵngcc0.ɵɵprojection(4, 3);
        ɵngcc0.ɵɵprojection(5, 4);
        ɵngcc0.ɵɵprojection(6, 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHugeInputContainerComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHugeInputContainerComponent.prototype, "iconContainerClasses", void 0);
__decorate([
    ContentChild(SprkLabelDirective, { static: true }),
    __metadata("design:type", SprkLabelDirective)
], SprkHugeInputContainerComponent.prototype, "label", void 0);
__decorate([
    ContentChild(SprkInputDirective, { static: true }),
    __metadata("design:type", SprkInputDirective)
], SprkHugeInputContainerComponent.prototype, "input", void 0);
__decorate([
    ContentChild(SprkFieldErrorDirective, { static: true }),
    __metadata("design:type", SprkFieldErrorDirective)
], SprkHugeInputContainerComponent.prototype, "error", void 0);

let SprkHugeInputContainerModule = class SprkHugeInputContainerModule {
};
SprkHugeInputContainerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkHugeInputContainerModule });
SprkHugeInputContainerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkHugeInputContainerModule_Factory(t) { return new (t || SprkHugeInputContainerModule)(); }, imports: [[CommonModule, RouterModule, FormsModule, ReactiveFormsModule]] });

let SprkTextareaContainerComponent = class SprkTextareaContainerComponent {
    constructor() {
        /**
         * @ignore
         */
        this.id = uniqueId();
        /**
         * @ignore
         */
        this.input_id = `input_${this.id}`;
        /**
         * @ignore
         */
        this.error_id = `error_${this.id}`;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-b-InputContainer',
            'sprk-b-InputContainer--textarea'
        ];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    ngOnInit() {
        if (this.label && this.input) {
            this.label.ref.nativeElement.setAttribute('for', this.input_id);
            this.input.ref.nativeElement.id = this.input_id;
        }
        if (this.input && this.error) {
            this.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            this.error.ref.nativeElement.id = this.error_id;
        }
    }
};
SprkTextareaContainerComponent.ɵfac = function SprkTextareaContainerComponent_Factory(t) { return new (t || SprkTextareaContainerComponent)(); };
SprkTextareaContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkTextareaContainerComponent, selectors: [["sprk-textarea-container"]], contentQueries: function SprkTextareaContainerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkLabelDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkInputDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkFieldErrorDirective, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.label = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.error = _t.first);
    } }, inputs: { additionalClasses: "additionalClasses", iconContainerClasses: "iconContainerClasses" }, ngContentSelectors: _c5, decls: 6, vars: 1, consts: [[3, "ngClass"]], template: function SprkTextareaContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c4);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵprojection(3, 2);
        ɵngcc0.ɵɵprojection(4, 3);
        ɵngcc0.ɵɵprojection(5, 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTextareaContainerComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTextareaContainerComponent.prototype, "iconContainerClasses", void 0);
__decorate([
    ContentChild(SprkLabelDirective, { static: true }),
    __metadata("design:type", SprkLabelDirective)
], SprkTextareaContainerComponent.prototype, "label", void 0);
__decorate([
    ContentChild(SprkInputDirective, { static: true }),
    __metadata("design:type", SprkInputDirective)
], SprkTextareaContainerComponent.prototype, "input", void 0);
__decorate([
    ContentChild(SprkFieldErrorDirective, { static: true }),
    __metadata("design:type", SprkFieldErrorDirective)
], SprkTextareaContainerComponent.prototype, "error", void 0);

let SprkTextareaContainerModule = class SprkTextareaContainerModule {
};
SprkTextareaContainerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTextareaContainerModule });
SprkTextareaContainerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTextareaContainerModule_Factory(t) { return new (t || SprkTextareaContainerModule)(); }, imports: [[CommonModule, RouterModule, FormsModule, ReactiveFormsModule]] });

let SprkIconInputContainerComponent = class SprkIconInputContainerComponent {
    constructor() {
        /**
         * @ignore
         */
        this.id = uniqueId();
        /**
         * @ignore
         */
        this.input_id = `input_${this.id}`;
        /**
         * @ignore
         */
        this.error_id = `error_${this.id}`;
    }
    /**
     * @ignore
     */
    getIconContainerClasses() {
        const classArray = ['sprk-b-InputContainer__icon-container'];
        if (this.iconContainerClasses) {
            this.iconContainerClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-InputContainer'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    ngOnInit() {
        if (this.label && this.input) {
            this.label.ref.nativeElement.setAttribute('for', this.input_id);
            this.input.ref.nativeElement.id = this.input_id;
        }
        if (this.input && this.error) {
            this.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            this.error.ref.nativeElement.id = this.error_id;
        }
    }
};
SprkIconInputContainerComponent.ɵfac = function SprkIconInputContainerComponent_Factory(t) { return new (t || SprkIconInputContainerComponent)(); };
SprkIconInputContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkIconInputContainerComponent, selectors: [["sprk-icon-input-container"]], contentQueries: function SprkIconInputContainerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkLabelDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkInputDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkFieldErrorDirective, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.label = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.error = _t.first);
    } }, inputs: { additionalClasses: "additionalClasses", iconContainerClasses: "iconContainerClasses" }, ngContentSelectors: _c7, decls: 8, vars: 2, consts: [[3, "ngClass"]], template: function SprkIconInputContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c6);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵprojection(3, 1);
        ɵngcc0.ɵɵprojection(4, 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(5, 3);
        ɵngcc0.ɵɵprojection(6, 4);
        ɵngcc0.ɵɵprojection(7, 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getIconContainerClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkIconInputContainerComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkIconInputContainerComponent.prototype, "iconContainerClasses", void 0);
__decorate([
    ContentChild(SprkLabelDirective, { static: true }),
    __metadata("design:type", SprkLabelDirective)
], SprkIconInputContainerComponent.prototype, "label", void 0);
__decorate([
    ContentChild(SprkInputDirective, { static: true }),
    __metadata("design:type", SprkInputDirective)
], SprkIconInputContainerComponent.prototype, "input", void 0);
__decorate([
    ContentChild(SprkFieldErrorDirective, { static: true }),
    __metadata("design:type", SprkFieldErrorDirective)
], SprkIconInputContainerComponent.prototype, "error", void 0);

let SprkIconInputContainerModule = class SprkIconInputContainerModule {
};
SprkIconInputContainerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkIconInputContainerModule });
SprkIconInputContainerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkIconInputContainerModule_Factory(t) { return new (t || SprkIconInputContainerModule)(); }, imports: [[CommonModule, RouterModule, FormsModule, ReactiveFormsModule]] });

let SprkSelectionItemContainerComponent = class SprkSelectionItemContainerComponent {
    constructor(renderer) {
        this.renderer = renderer;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-SelectionContainer'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    addInputTypeClasses() {
        const inputType = this.input.ref.nativeElement.type;
        if (inputType === 'checkbox') {
            this.renderer.addClass(this.input.ref.nativeElement, 'sprk-b-Checkbox__input');
            this.renderer.addClass(this.label.ref.nativeElement, 'sprk-b-Checkbox__label');
        }
        if (inputType === 'radio') {
            this.renderer.addClass(this.input.ref.nativeElement, 'sprk-b-Radio__input');
            this.renderer.addClass(this.label.ref.nativeElement, 'sprk-b-Radio__label');
        }
    }
    /**
     * @ignore
     */
    generateIdForInput() {
        let inputId = this.input.ref.nativeElement.id;
        const labelFor = this.label.ref.nativeElement.htmlFor;
        // Warn if 'for' exists but the 'id' does not
        if (labelFor && !inputId) {
            console.warn(`Spark Design System Warning - The value of 'for' (${labelFor}) on the label expects a matching 'id' on the input.`);
            return;
        }
        // Warn if 'for' and 'id' both exist but don't match
        if (inputId && labelFor && inputId !== labelFor) {
            console.warn(`Spark Design System Warning - The value of 'for' (${labelFor}) on the label should match the 'id' on the input (${inputId}).`);
            return;
        }
        // If we don't have a valid id, generate one with lodash
        if (!inputId) {
            inputId = uniqueId$1(`sprk_input_`);
            this.renderer.setProperty(this.input.ref.nativeElement, 'id', inputId);
            this.renderer.setAttribute(this.label.ref.nativeElement, 'for', inputId);
        }
    }
    ngOnInit() {
        if (this.label && this.input) {
            this.generateIdForInput();
            this.addInputTypeClasses();
        }
    }
};
SprkSelectionItemContainerComponent.ɵfac = function SprkSelectionItemContainerComponent_Factory(t) { return new (t || SprkSelectionItemContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
SprkSelectionItemContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkSelectionItemContainerComponent, selectors: [["sprk-selection-item-container"]], contentQueries: function SprkSelectionItemContainerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkSelectionLabelDirective, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, SprkSelectionInputDirective, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.label = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
    } }, inputs: { additionalClasses: "additionalClasses" }, ngContentSelectors: _c9, decls: 4, vars: 1, consts: [[3, "ngClass"]], template: function SprkSelectionItemContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c8);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵprojection(3, 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
SprkSelectionItemContainerComponent.ctorParameters = () => [
    { type: Renderer2 }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkSelectionItemContainerComponent.prototype, "additionalClasses", void 0);
__decorate([
    ContentChild(SprkSelectionLabelDirective, { static: true }),
    __metadata("design:type", SprkSelectionLabelDirective)
], SprkSelectionItemContainerComponent.prototype, "label", void 0);
__decorate([
    ContentChild(SprkSelectionInputDirective, { static: true }),
    __metadata("design:type", SprkSelectionInputDirective)
], SprkSelectionItemContainerComponent.prototype, "input", void 0);
SprkSelectionItemContainerComponent = __decorate([ __metadata("design:paramtypes", [Renderer2])
], SprkSelectionItemContainerComponent);

let SprkSelectionContainerComponent = class SprkSelectionContainerComponent {
    constructor() {
        /**
         * @ignore
         */
        this.id = uniqueId();
        /**
         * @ignore
         */
        this.error_id = `error_${this.id}`;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-InputContainer'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    ngAfterContentInit() {
        if (this.selectionItems && this.error) {
            this.selectionItems.forEach(item => {
                item.input.ref.nativeElement.setAttribute('aria-describedby', this.error_id);
            });
            this.error.ref.nativeElement.id = this.error_id;
        }
    }
};
SprkSelectionContainerComponent.ɵfac = function SprkSelectionContainerComponent_Factory(t) { return new (t || SprkSelectionContainerComponent)(); };
SprkSelectionContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkSelectionContainerComponent, selectors: [["sprk-selection-container"]], contentQueries: function SprkSelectionContainerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, SprkLabelDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, SprkFieldErrorDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, SprkSelectionItemContainerComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.label = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.error = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectionItems = _t);
    } }, inputs: { additionalClasses: "additionalClasses" }, ngContentSelectors: _c11, decls: 8, vars: 1, consts: [[3, "ngClass"], [1, "sprk-b-Fieldset"], [1, "sprk-b-Legend"]], template: function SprkSelectionContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c10);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "fieldset", 1);
        ɵngcc0.ɵɵelementStart(2, "legend", 2);
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(4, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(5, 2);
        ɵngcc0.ɵɵprojection(6, 3);
        ɵngcc0.ɵɵprojection(7, 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkSelectionContainerComponent.prototype, "additionalClasses", void 0);
__decorate([
    ContentChild(SprkLabelDirective, { static: false }),
    __metadata("design:type", SprkLabelDirective)
], SprkSelectionContainerComponent.prototype, "label", void 0);
__decorate([
    ContentChild(SprkFieldErrorDirective, { static: false }),
    __metadata("design:type", SprkFieldErrorDirective)
], SprkSelectionContainerComponent.prototype, "error", void 0);
__decorate([
    ContentChildren(SprkSelectionItemContainerComponent),
    __metadata("design:type", QueryList)
], SprkSelectionContainerComponent.prototype, "selectionItems", void 0);

let SprkSelectionContainerModule = class SprkSelectionContainerModule {
};
SprkSelectionContainerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkSelectionContainerModule });
SprkSelectionContainerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkSelectionContainerModule_Factory(t) { return new (t || SprkSelectionContainerModule)(); }, imports: [[CommonModule, RouterModule, FormsModule, ReactiveFormsModule]] });

let SprkSelectionItemContainerModule = class SprkSelectionItemContainerModule {
};
SprkSelectionItemContainerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkSelectionItemContainerModule });
SprkSelectionItemContainerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkSelectionItemContainerModule_Factory(t) { return new (t || SprkSelectionItemContainerModule)(); }, imports: [[CommonModule, RouterModule, FormsModule, ReactiveFormsModule]] });

let SprkIconComponent = class SprkIconComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Icon'];
        this.icon = `#${this.iconType}`;
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkIconComponent.ɵfac = function SprkIconComponent_Factory(t) { return new (t || SprkIconComponent)(); };
SprkIconComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkIconComponent, selectors: [["sprk-icon"]], inputs: { iconType: "iconType", additionalClasses: "additionalClasses", idString: "idString" }, decls: 2, vars: 3, consts: [["viewBox", "0 0 64 64", 3, "ngClass"]], template: function SprkIconComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(0, "svg", 0);
        ɵngcc0.ɵɵelement(1, "use");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("href", ctx.icon, null, "xlink");
    } }, directives: [ɵngcc1.NgClass], styles: ["[_nghost-%COMP%] { line-height: 1; }"] });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkIconComponent.prototype, "iconType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkIconComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkIconComponent.prototype, "idString", void 0);

let SprkIconModule = class SprkIconModule {
};
SprkIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkIconModule });
SprkIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkIconModule_Factory(t) { return new (t || SprkIconModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkLinkDirective = class SprkLinkDirective {
    /**
     * @ignore
     */
    constructor(renderer, el) {
        this.renderer = renderer;
        this.el = el;
    }
    ngOnInit() {
        if (this.variant !== 'unstyled') {
            this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link');
        }
        if (this.variant === 'simple' || this.variant === 'icon') {
            this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--simple');
        }
        if (this.variant === 'icon') {
            this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--has-icon');
        }
        if (this.variant === 'plain') {
            this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--plain');
        }
    }
};
SprkLinkDirective.ɵfac = function SprkLinkDirective_Factory(t) { return new (t || SprkLinkDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkLinkDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkLinkDirective, selectors: [["", "sprkLink", ""]], hostVars: 4, hostBindings: function SprkLinkDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("data-analytics", ctx.analyticsString)("data-id", ctx.idString);
        ɵngcc0.ɵɵclassProp("sprk-b-Link--disabled", ctx.isDisabled);
    } }, inputs: { variant: "variant", isDisabled: "isDisabled", analyticsString: "analyticsString", idString: "idString" } });
SprkLinkDirective.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkDirective.prototype, "variant", void 0);
__decorate([
    HostBinding('class.sprk-b-Link--disabled'),
    Input(),
    __metadata("design:type", Boolean)
], SprkLinkDirective.prototype, "isDisabled", void 0);
__decorate([
    HostBinding('attr.data-analytics'),
    Input(),
    __metadata("design:type", String)
], SprkLinkDirective.prototype, "analyticsString", void 0);
__decorate([
    HostBinding('attr.data-id'),
    Input(),
    __metadata("design:type", String)
], SprkLinkDirective.prototype, "idString", void 0);
SprkLinkDirective = __decorate([ __metadata("design:paramtypes", [Renderer2, ElementRef])
], SprkLinkDirective);

let SprkLinkDirectiveModule = class SprkLinkDirectiveModule {
};
SprkLinkDirectiveModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkLinkDirectiveModule });
SprkLinkDirectiveModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkLinkDirectiveModule_Factory(t) { return new (t || SprkLinkDirectiveModule)(); }, imports: [[CommonModule]] });

const toggleAnimations = {
    toggleContent: trigger('toggleContent', [
        state('closed', style({
            height: '0',
            overflow: 'hidden',
            visibility: 'hidden',
        })),
        state('open', style({
            height: '*',
            visibility: 'visible',
        })),
        transition('open <=> closed', animate('300ms ease-in'))
    ])
};

let SprkAccordionItemComponent = class SprkAccordionItemComponent {
    constructor() {
        /**
         * The Accordion item will use this to decide
         * if it should be open or closed on first render.
         * (Interacting with the toggle will override this input.)
         */
        this.isOpen = false;
        /**
         * The name of the icon to use for
         * a closed Accordion item.
         */
        this.iconTypeClosed = 'chevron-up-circle-two-color';
        /**
         * The name of the icon to use for
         * an open Accordion item.
         */
        this.iconTypeOpen = 'chevron-up-circle-two-color';
        /**
         * @ignore
         */
        this.componentID = uniqueId();
        /**
         * @ignore
         */
        this.accordion_controls_id = `accordionHeading__${this.componentID}`;
        /**
         * @ignore
         */
        this.currentIconType = this.iconTypeClosed;
        /**
         * @ignore
         */
        this.iconStateClass = '';
        /**
         * @ignore
         */
        this.animState = 'closed';
    }
    /**
     * @ignore
     */
    accordionState() {
        this.isOpen === false
            ? (this.animState = 'closed')
            : (this.animState = 'open');
        this.isOpen === false
            ? (this.currentIconType = this.iconTypeClosed)
            : (this.currentIconType = this.iconTypeOpen);
        this.isOpen === false
            ? (this.iconStateClass = '')
            : (this.iconStateClass = 'sprk-c-Icon--open');
    }
    /**
     * @ignore
     */
    toggleAccordion(event) {
        event.preventDefault();
        this.isOpen = !this.isOpen;
        this.accordionState();
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-c-Accordion__item',
            'sprk-u-Overflow--hidden'
        ];
        if (this.isOpen) {
            classArray.push('sprk-c-Accordion__item--open');
        }
        if (this.isActive) {
            classArray.push('sprk-c-Accordion__item--active');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getHeadingClasses() {
        const classArray = ['sprk-c-Accordion__heading'];
        if (this.additionalHeadingClasses) {
            this.additionalHeadingClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    ngOnInit() {
        this.accordionState();
    }
};
SprkAccordionItemComponent.ɵfac = function SprkAccordionItemComponent_Factory(t) { return new (t || SprkAccordionItemComponent)(); };
SprkAccordionItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkAccordionItemComponent, selectors: [["sprk-accordion-item"]], inputs: { isOpen: "isOpen", iconTypeClosed: "iconTypeClosed", iconTypeOpen: "iconTypeOpen", title: "title", analyticsString: "analyticsString", idString: "idString", additionalClasses: "additionalClasses", additionalHeadingClasses: "additionalHeadingClasses", isActive: "isActive", leadingIcon: "leadingIcon" }, ngContentSelectors: _c12, decls: 9, vars: 12, consts: [[3, "ngClass"], ["sprkLink", "", "variant", "unstyled", "href", "#", 1, "sprk-c-Accordion__summary", 3, "analyticsString", "idString", "click"], ["additionalClasses", "sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-u-mrs", 3, "iconType", 4, "ngIf"], [3, "additionalClasses", "iconType"], [1, "sprk-c-Accordion__content", "sprk-b-TypeBodyTwo", 3, "id"], ["additionalClasses", "sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-u-mrs", 3, "iconType"]], template: function SprkAccordionItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function SprkAccordionItemComponent_Template_button_click_1_listener($event) { return ctx.toggleAccordion($event); });
        ɵngcc0.ɵɵelementStart(2, "span", 0);
        ɵngcc0.ɵɵtemplate(3, SprkAccordionItemComponent_sprk_icon_3_Template, 1, 1, "sprk-icon", 2);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "sprk-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div");
        ɵngcc0.ɵɵelementStart(7, "div", 4);
        ɵngcc0.ɵɵprojection(8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("analyticsString", ctx.analyticsString)("idString", ctx.idString);
        ɵngcc0.ɵɵattribute("aria-controls", ctx.accordion_controls_id)("aria-expanded", ctx.isOpen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getHeadingClasses());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.leadingIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.title, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate1("additionalClasses", "sprk-c-Accordion__icon sprk-c-Icon--toggle sprk-c-Icon--l ", ctx.iconStateClass, "");
        ɵngcc0.ɵɵproperty("iconType", ctx.currentIconType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("@toggleContent", ctx.animState);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.accordion_controls_id);
    } }, directives: [ɵngcc1.NgClass, SprkLinkDirective, ɵngcc1.NgIf, SprkIconComponent], encapsulation: 2, data: { animation: [toggleAnimations.toggleContent] } });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAccordionItemComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAccordionItemComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAccordionItemComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAccordionItemComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAccordionItemComponent.prototype, "additionalHeadingClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkAccordionItemComponent.prototype, "isOpen", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkAccordionItemComponent.prototype, "isActive", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkAccordionItemComponent.prototype, "iconTypeClosed", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkAccordionItemComponent.prototype, "iconTypeOpen", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAccordionItemComponent.prototype, "leadingIcon", void 0);

let SprkAccordionItemModule = class SprkAccordionItemModule {
};
SprkAccordionItemModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkAccordionItemModule });
SprkAccordionItemModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkAccordionItemModule_Factory(t) { return new (t || SprkAccordionItemModule)(); }, imports: [[CommonModule, SprkIconModule, SprkLinkDirectiveModule]] });

let SprkLinkComponent = 
/**
 * @deprecate This component will be removed in
 * a future release in favor of the `sprkLink` directive.
 * Please use the Spark Link
 * directive.
 */
class SprkLinkComponent {
    /**
     * @ignore
     */
    constructor(router) {
        this.router = router;
        /**
         * By default, the component determines if
         * the `href` is an external or internal link
         * by looking for the `:` character in the
         * `href` string. If external link functionality
         * is desired with an `href` value that contains
         * a `:` set this input to true. This overrides
         * the default and avoids using the Angular Router.
         */
        this.isExternal = false;
    }
    ngOnInit() {
        // This message is split up like this so that we can keep the line
        // length down in the editor while also logging a single unformatted
        // line of text in the console.
        const message = 'Spark Design System Warning: Spark Link has been ' +
            'refactored to be an Angular Directive. The old Angular Component ' +
            'version has been deprecated. This version will be permanently removed ' +
            'from Spark in our Summer 2020 release. To update to the new version, ' +
            'replace any instance of the <sprk-link> component in your codebase with ' +
            'the new Directive syntax.';
        console.warn(message);
        // Sets the default href if none provided
        if (this.href === '' || this.href === null || this.href === undefined) {
            this.href = '#';
            return;
        }
        // Build jump link's href
        if (this.isJumpLink(this.href)) {
            this.href = `${this.getPathWithoutHash(this.router.url)}${this.href}`;
        }
    }
    /**
     * @ignore
     */
    isExternalLink(value) {
        return new RegExp('^.*:', 'i').test(value);
    }
    /**
     * @ignore
     */
    isJumpLinkWithPage(value) {
        return new RegExp('^.*#.+', 'i').test(value);
    }
    /**
     * @ignore
     */
    isJumpLink(value) {
        return new RegExp('^#.+', 'i').test(value);
    }
    /**
     * @ignore
     */
    isNoActionLink(value) {
        return value === '#';
    }
    /**
     * @ignore
     */
    getPathWithoutHash(value) {
        return value.split('#')[0];
    }
    /**
     * @ignore
     */
    scrollToId() {
        const elementID = this.href.split('#').pop();
        const element = document.getElementById(elementID);
        if (element) {
            element.scrollIntoView();
        }
    }
    /**
     * @ignore
     */
    handleClick(event) {
        // Let browser handle route if external Link
        if (this.isExternalLink(this.href) || this.isExternal) {
            return;
        }
        event.preventDefault();
        // Prevent default and return
        if (this.isNoActionLink(this.href)) {
            return;
        }
        else if (this.isJumpLinkWithPage(this.href)) {
            if (this.getPathWithoutHash(this.href) ===
                this.getPathWithoutHash(this.router.url)) {
                this.scrollToId();
            }
            else {
                this.router.navigateByUrl(this.href);
            }
        }
        else {
            this.router.navigateByUrl(this.href);
        }
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [];
        switch (this.linkType) {
            case 'unstyled':
                break;
            case 'simple':
                classArray.push('sprk-b-Link sprk-b-Link--simple');
                break;
            case 'plain':
                classArray.push('sprk-b-Link sprk-b-Link--plain');
                break;
            case 'icon':
                classArray.push('sprk-b-Link sprk-b-Link--simple sprk-b-Link--has-icon');
                break;
            default:
                classArray.push('sprk-b-Link');
                break;
        }
        if (this.isDisabled) {
            classArray.push('sprk-b-Link--disabled');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkLinkComponent.ɵfac = function SprkLinkComponent_Factory(t) { return new (t || SprkLinkComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router)); };
SprkLinkComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkLinkComponent, selectors: [["sprk-link"]], inputs: { isExternal: "isExternal", href: "href", linkType: "linkType", idString: "idString", role: "role", id: "id", ariaControls: "ariaControls", ariaLabelledby: "ariaLabelledby", ariaSelected: "ariaSelected", ariaHidden: "ariaHidden", ariaCurrent: "ariaCurrent", ariaExpanded: "ariaExpanded", ariaHasPopUp: "ariaHasPopUp", ariaLabel: "ariaLabel", analyticsString: "analyticsString", target: "target", additionalClasses: "additionalClasses", isDisabled: "isDisabled" }, ngContentSelectors: _c12, decls: 2, vars: 16, consts: [[3, "ngClass", "href", "click"]], template: function SprkLinkComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵlistener("click", function SprkLinkComponent_Template_a_click_0_listener($event) { return ctx.handleClick($event); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses())("href", ctx.href, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵattribute("data-analytics", ctx.analyticsString)("target", ctx.target)("data-id", ctx.idString)("disabled", ctx.isDisabled)("aria-controls", ctx.ariaControls)("aria-label", ctx.ariaLabel)("aria-labelledby", ctx.ariaLabelledby)("aria-haspopup", ctx.ariaHasPopUp)("role", ctx.role)("id", ctx.id)("aria-current", ctx.ariaCurrent)("aria-expanded", ctx.ariaExpanded)("aria-hidden", ctx.ariaHidden)("aria-selected", ctx.ariaSelected);
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
SprkLinkComponent.ctorParameters = () => [
    { type: Router }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "linkType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "href", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "role", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "id", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "ariaControls", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "ariaSelected", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "ariaCurrent", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "ariaExpanded", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "ariaHasPopUp", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "target", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkLinkComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkLinkComponent.prototype, "isDisabled", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkLinkComponent.prototype, "isExternal", void 0);
SprkLinkComponent = __decorate([ __metadata("design:paramtypes", [Router])
], SprkLinkComponent);

let SprkLinkModule = class SprkLinkModule {
};
SprkLinkModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkLinkModule });
SprkLinkModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkLinkModule_Factory(t) { return new (t || SprkLinkModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkAccordionComponent = class SprkAccordionComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Accordion', 'sprk-o-VerticalList'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkAccordionComponent.ɵfac = function SprkAccordionComponent_Factory(t) { return new (t || SprkAccordionComponent)(); };
SprkAccordionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkAccordionComponent, selectors: [["sprk-accordion"]], inputs: { additionalClasses: "additionalClasses" }, ngContentSelectors: _c12, decls: 2, vars: 1, consts: [[3, "ngClass"]], template: function SprkAccordionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAccordionComponent.prototype, "additionalClasses", void 0);

let SprkAccordionModule = class SprkAccordionModule {
};
SprkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkAccordionModule });
SprkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkAccordionModule_Factory(t) { return new (t || SprkAccordionModule)(); }, imports: [[CommonModule, RouterModule, SprkIconModule, SprkLinkModule]] });

let SprkAlertComponent = class SprkAlertComponent {
    constructor() {
        /**
         * @ignore
         */
        this.visible = true;
    }
    /**
     * @ignore
     */
    getClassesAlertContainer() {
        const alertClassArray = ['sprk-c-Alert'];
        switch (this.alertType) {
            case 'success':
                alertClassArray.push('sprk-c-Alert--success');
                this.icon = 'check-mark';
                break;
            case 'info':
                alertClassArray.push('sprk-c-Alert--info');
                this.icon = 'bell';
                break;
            case 'fail':
                alertClassArray.push('sprk-c-Alert--fail');
                this.icon = 'exclamation';
                break;
            default:
                break;
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                alertClassArray.push(className);
            });
        }
        return alertClassArray.join(' ');
    }
    /**
     * When the dismiss button is clicked
     * this method sets the visable state to `false`
     * and hides the Alert component.
     */
    alertDismiss(event) {
        this.visible = false;
    }
};
SprkAlertComponent.ɵfac = function SprkAlertComponent_Factory(t) { return new (t || SprkAlertComponent)(); };
SprkAlertComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkAlertComponent, selectors: [["sprk-alert"]], inputs: { alertType: "alertType", analyticsString: "analyticsString", idString: "idString", additionalClasses: "additionalClasses", dismissible: "dismissible" }, ngContentSelectors: _c12, decls: 1, vars: 1, consts: [["role", "alert", 3, "ngClass", 4, "ngIf"], ["role", "alert", 3, "ngClass"], [1, "sprk-c-Alert__content"], ["additionalClasses", "sprk-c-Alert__icon sprk-c-Icon--l sprk-c-Icon--stroke-current-color", "aria-hidden", "true", 3, "iconType"], [1, "sprk-c-Alert__text"], ["class", "sprk-c-Alert__icon sprk-c-Alert__icon--dismiss", "type", "button", "title", "Dismiss", 3, "click", 4, "ngIf"], ["type", "button", "title", "Dismiss", 1, "sprk-c-Alert__icon", "sprk-c-Alert__icon--dismiss", 3, "click"], ["iconType", "close", "additionalClasses", "sprk-c-Icon--stroke-current-color", "aria-hidden", "true"]], template: function SprkAlertComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, SprkAlertComponent_div_0_Template, 6, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.visible);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, SprkIconComponent], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAlertComponent.prototype, "alertType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAlertComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAlertComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAlertComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkAlertComponent.prototype, "dismissible", void 0);

let SprkAlertModule = class SprkAlertModule {
};
SprkAlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkAlertModule });
SprkAlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkAlertModule_Factory(t) { return new (t || SprkAlertModule)(); }, imports: [[CommonModule, RouterModule, SprkIconModule]] });

let SprkDividerComponent = class SprkDividerComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Divider'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkDividerComponent.ɵfac = function SprkDividerComponent_Factory(t) { return new (t || SprkDividerComponent)(); };
SprkDividerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkDividerComponent, selectors: [["sprk-divider"]], inputs: { additionalClasses: "additionalClasses", idString: "idString" }, decls: 1, vars: 2, consts: [[3, "ngClass"]], template: function SprkDividerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDividerComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDividerComponent.prototype, "idString", void 0);

let SprkDividerModule = class SprkDividerModule {
};
SprkDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkDividerModule });
SprkDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkDividerModule_Factory(t) { return new (t || SprkDividerModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkDropdownComponent = class SprkDropdownComponent {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
        /**
         * The variant of the Dropdown to render.
         */
        this.dropdownType = 'base';
        /**
         * If `true`, the Dropdown will be open when rendered.
         */
        this.isOpen = false;
        /**
         * The event that is
         * emitted from the Dropdown when a choice
         * is clicked. The event contains the value
         * of the choice that was clicked.
         */
        this.choiceMade = new EventEmitter();
    }
    /**
     * @ignore
     */
    toggle(event) {
        event.preventDefault();
        this.isOpen = !this.isOpen;
    }
    onClick(event) {
        if (!this.ref.nativeElement.contains(event.target) ||
            event.target.classList.contains('sprk-c-MastheadMask')) {
            this.hideDropdown();
        }
    }
    onFocusin(event) {
        /* istanbul ignore else: angular focus event isnt setting e.target */
        if (!this.ref.nativeElement.contains(event.target) ||
            event.target.classList.contains('sprk-c-MastheadMask')) {
            this.hideDropdown();
        }
    }
    /**
     * @ignore
     */
    choiceClick(event) {
        this.clearActiveChoices();
        const choiceIndex = event.currentTarget.getAttribute('data-sprk-dropdown-choice-index');
        const clickedChoice = this.choices[choiceIndex];
        if (this.dropdownType === 'informational' ||
            this.dropdownType === 'mastheadSelector') {
            this.setActiveChoice(event);
            this.updateTriggerText(event);
        }
        this.hideDropdown();
        this.choiceMade.emit(clickedChoice['value']);
    }
    /**
     * @ignore
     */
    setActiveChoice(event) {
        const choiceIndex = event.currentTarget.getAttribute('data-sprk-dropdown-choice-index');
        this.choices[choiceIndex]['active'] = true;
    }
    /**
     * @ignore
     */
    updateTriggerText(event) {
        const choiceIndex = event.currentTarget.getAttribute('data-sprk-dropdown-choice-index');
        this.triggerText = this.choices[choiceIndex]['value'];
    }
    /**
     * @ignore
     */
    clearActiveChoices() {
        this.choices.forEach((choice) => {
            choice['active'] = false;
        });
    }
    /**
     * @ignore
     */
    hideDropdown() {
        this.isOpen = false;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Dropdown'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getTriggerClasses() {
        const classArray = [];
        if (this.additionalTriggerClasses) {
            this.additionalTriggerClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getTriggerTextClasses() {
        const classArray = [''];
        if (this.additionalTriggerTextClasses) {
            this.additionalTriggerTextClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkDropdownComponent.ɵfac = function SprkDropdownComponent_Factory(t) { return new (t || SprkDropdownComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkDropdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkDropdownComponent, selectors: [["sprk-dropdown"]], hostBindings: function SprkDropdownComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SprkDropdownComponent_click_HostBindingHandler($event) { return ctx.onClick($event); }, false, ɵngcc0.ɵɵresolveDocument)("focusin", function SprkDropdownComponent_focusin_HostBindingHandler($event) { return ctx.onFocusin($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { dropdownType: "dropdownType", isOpen: "isOpen", triggerText: "triggerText", additionalClasses: "additionalClasses", additionalIconClasses: "additionalIconClasses", additionalTriggerClasses: "additionalTriggerClasses", additionalTriggerTextClasses: "additionalTriggerTextClasses", idString: "idString", analyticsString: "analyticsString", title: "title", selector: "selector", choices: "choices", triggerIconType: "triggerIconType", screenReaderText: "screenReaderText" }, outputs: { choiceMade: "choiceMade" }, ngContentSelectors: _c17, decls: 9, vars: 16, consts: [[3, "ngClass"], ["sprkLink", "", "aria-haspopup", "listbox", "href", "#", 3, "ngClass", "idString", "analyticsString", "click"], [1, "sprk-u-ScreenReaderText"], [3, "iconType", "additionalClasses"], [3, "ngClass", 4, "ngIf"], ["class", "sprk-c-Dropdown__header", 4, "ngIf"], ["role", "listbox", 1, "sprk-c-Dropdown__links"], ["class", "sprk-c-Dropdown__item", "role", "option", 3, "click", 4, "ngFor", "ngForOf"], [1, "sprk-c-Dropdown__header"], ["class", "sprk-c-Dropdown__title sprk-b-TypeBodyTwo", 4, "ngIf"], ["sprkLink", "", "variant", "plain", "class", "sprk-o-Stack sprk-o-Stack--split@xxs sprk-o-Stack--center-column sprk-u-Width-100", "href", "#", 3, "click", 4, "ngIf"], [1, "sprk-c-Dropdown__title", "sprk-b-TypeBodyTwo"], ["sprkLink", "", "variant", "plain", "href", "#", 1, "sprk-o-Stack", "sprk-o-Stack--split@xxs", "sprk-o-Stack--center-column", "sprk-u-Width-100", 3, "click"], [1, "sprk-c-Dropdown__title", "sprk-b-TypeBodyTwo", "sprk-o-Stack__item", "sprk-o-Stack__item--flex@xxs"], ["role", "option", 1, "sprk-c-Dropdown__item", 3, "click"], [4, "ngIf", "ngIfThen", "ngIfElse"], ["link", ""], ["content", ""], ["sprkLink", "", "variant", "unstyled", 3, "analyticsString", "ngClass"], [1, "sprk-b-TypeBodyOne"]], template: function SprkDropdownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c14);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵelementStart(2, "a", 1);
        ɵngcc0.ɵɵlistener("click", function SprkDropdownComponent_Template_a_click_2_listener($event) { return ctx.toggle($event); });
        ɵngcc0.ɵɵelementStart(3, "span", 0);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "span", 2);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "sprk-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, SprkDropdownComponent_div_8_Template, 5, 4, "div", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c15, ctx.isOpen && ctx.dropdownType === "mastheadSelector"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(14, _c16, ctx.dropdownType === "mastheadSelector"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getTriggerClasses())("idString", ctx.idString)("analyticsString", ctx.analyticsString);
        ɵngcc0.ɵɵattribute("aria-label", ctx.triggerText ? ctx.triggerText : ctx.screenReaderText || "Choose One");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getTriggerTextClasses());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.triggerText);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.screenReaderText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate1("additionalClasses", "sprk-u-mls sprk-c-Icon--stroke-current-color ", ctx.additionalIconClasses, "");
        ɵngcc0.ɵɵproperty("iconType", ctx.triggerIconType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isOpen);
    } }, directives: [ɵngcc1.NgClass, SprkLinkDirective,
        SprkIconComponent, ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
SprkDropdownComponent.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkDropdownComponent.prototype, "dropdownType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "additionalIconClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "additionalTriggerClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "additionalTriggerTextClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkDropdownComponent.prototype, "isOpen", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "selector", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkDropdownComponent.prototype, "choices", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "triggerIconType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "triggerText", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDropdownComponent.prototype, "screenReaderText", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], SprkDropdownComponent.prototype, "choiceMade", void 0);
__decorate([
    HostListener('document:click', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkDropdownComponent.prototype, "onClick", null);
__decorate([
    HostListener('document:focusin', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkDropdownComponent.prototype, "onFocusin", null);
SprkDropdownComponent = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkDropdownComponent);

let SprkDropdownModule = class SprkDropdownModule {
};
SprkDropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkDropdownModule });
SprkDropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkDropdownModule_Factory(t) { return new (t || SprkDropdownModule)(); }, imports: [[CommonModule, SprkIconModule, SprkLinkDirectiveModule]] });

let SprkStackComponent = class SprkStackComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-o-Stack'];
        // Handle the choice of item split breakpoint by adding CSS class
        switch (this.splitAt) {
            case 'tiny':
                classArray.push('sprk-o-Stack--split@xs');
                break;
            case 'small':
                classArray.push('sprk-o-Stack--split@s');
                break;
            case 'medium':
                classArray.push('sprk-o-Stack--split@m');
                break;
            case 'large':
                classArray.push('sprk-o-Stack--split@l');
                break;
            case 'huge':
                classArray.push('sprk-o-Stack--split@xl');
                break;
            default:
                break;
        }
        // Handle the choice of item spacing by adding CSS class
        switch (this.itemSpacing) {
            case 'tiny':
                classArray.push('sprk-o-Stack--tiny');
                break;
            case 'small':
                classArray.push('sprk-o-Stack--small');
                break;
            case 'medium':
                classArray.push('sprk-o-Stack--medium');
                break;
            case 'large':
                classArray.push('sprk-o-Stack--large');
                break;
            case 'huge':
                classArray.push('sprk-o-Stack--huge');
                break;
            default:
                break;
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkStackComponent.ɵfac = function SprkStackComponent_Factory(t) { return new (t || SprkStackComponent)(); };
SprkStackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkStackComponent, selectors: [["sprk-stack"]], inputs: { splitAt: "splitAt", itemSpacing: "itemSpacing", analyticsString: "analyticsString", additionalClasses: "additionalClasses" }, ngContentSelectors: _c12, decls: 2, vars: 2, consts: [[3, "ngClass"]], template: function SprkStackComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-analytics", ctx.analyticsString);
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkStackComponent.prototype, "splitAt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkStackComponent.prototype, "itemSpacing", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkStackComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkStackComponent.prototype, "additionalClasses", void 0);

let SprkStackModule = class SprkStackModule {
};
SprkStackModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkStackModule });
SprkStackModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkStackModule_Factory(t) { return new (t || SprkStackModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkToggleComponent = class SprkToggleComponent {
    constructor() {
        /**
         * The value supplied will be assigned as a CSS class
         * on the clickable title text used in the Toggle.
         * This is intended for overrides.
         */
        this.titleFontClass = 'sprk-b-TypeBodyThree';
        /**
         * A string that is used to set the `id` on the content
         * and the `aria-controls` for the toggle trigger button.
         */
        this.contentId = uniqueId(`sprk_toggle_content_`);
        /**
         * @ignore
         */
        this.isOpen = false;
        /**
         * @ignore
         */
        this.iconStateClass = '';
        /**
         * @ignore
         */
        this.animState = 'closed';
    }
    /**
     * @ignore
     */
    toggleState() {
        this.isOpen === false
            ? (this.animState = 'closed')
            : (this.animState = 'open');
        this.isOpen === false
            ? (this.iconStateClass = '')
            : (this.iconStateClass = 'sprk-c-Icon--open');
    }
    /**
     * @ignore
     */
    toggle(event) {
        event.preventDefault();
        this.isOpen = !this.isOpen;
        this.toggleState();
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-c-Toggle__trigger sprk-u-TextCrop--none',
            this.titleFontClass,
        ];
        return classArray.join(' ');
    }
    ngAfterViewInit() {
        this.toggleState();
    }
};
SprkToggleComponent.ɵfac = function SprkToggleComponent_Factory(t) { return new (t || SprkToggleComponent)(); };
SprkToggleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkToggleComponent, selectors: [["sprk-toggle"]], inputs: { titleFontClass: "titleFontClass", contentId: "contentId", analyticsString: "analyticsString", additionalClasses: "additionalClasses", title: "title", iconClass: "iconClass", idString: "idString" }, ngContentSelectors: _c12, decls: 7, vars: 13, consts: [["variant", "icon", 3, "ngClass", "click"], ["iconType", "chevron-down-circle-two-color", 3, "additionalClasses"], [3, "id"], [1, "sprk-u-pts", "sprk-u-pbs", "sprk-c-Toggle__content"]], template: function SprkToggleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "button", 0);
        ɵngcc0.ɵɵlistener("click", function SprkToggleComponent_Template_button_click_1_listener($event) { return ctx.toggle($event); });
        ɵngcc0.ɵɵelement(2, "sprk-icon", 1);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 2);
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("sprk-c-Toggle ", ctx.additionalClasses, "");
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("aria-expanded", ctx.isOpen ? "true" : "false")("data-analytics", ctx.analyticsString)("aria-controls", ctx.contentId);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate2("additionalClasses", "", ctx.iconClass, " sprk-c-Icon--l sprk-u-mrs sprk-c-Icon--toggle ", ctx.iconStateClass, "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.title, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("@toggleContent", ctx.animState)("id", ctx.contentId);
    } }, directives: [ɵngcc1.NgClass, SprkIconComponent], encapsulation: 2, data: { animation: [toggleAnimations.toggleContent] } });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkToggleComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkToggleComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkToggleComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkToggleComponent.prototype, "iconClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkToggleComponent.prototype, "titleFontClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkToggleComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkToggleComponent.prototype, "contentId", void 0);

let SprkToggleModule = class SprkToggleModule {
};
SprkToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkToggleModule });
SprkToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkToggleModule_Factory(t) { return new (t || SprkToggleModule)(); }, imports: [[
            CommonModule,
            SprkIconModule,
            SprkLinkDirectiveModule
        ]] });

let SprkFooterComponent = class SprkFooterComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-o-CenteredColumn sprk-o-Stack sprk-o-Stack--misc-b'
        ];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkFooterComponent.ɵfac = function SprkFooterComponent_Factory(t) { return new (t || SprkFooterComponent)(); };
SprkFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkFooterComponent, selectors: [["sprk-footer"]], inputs: { additionalClasses: "additionalClasses", idString: "idString", globalHeading: "globalHeading", awardsHeading: "awardsHeading", connectHeading: "connectHeading", globalLinks: "globalLinks", localLinks: "localLinks", socialLinks: "socialLinks", awards: "awards", badgeLinks: "badgeLinks", disclaimerText: "disclaimerText", disclaimerToggle: "disclaimerToggle" }, decls: 12, vars: 8, consts: [[1, "sprk-o-Box", "sprk-o-Box--large", "sprk-u-BackgroundColor--gray"], ["role", "contentinfo", 3, "ngClass"], [1, "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--medium", "sprk-o-Stack--split@m"], ["class", "sprk-o-Stack__item sprk-o-Stack__item--three-tenths@m sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-prh", 4, "ngIf"], [1, "sprk-o-Stack__item", "sprk-o-Stack__item--seven-tenths@m", "sprk-o-Stack", "sprk-o-Stack--medium"], ["class", "sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m", 4, "ngIf"], ["class", "sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Box", 4, "ngIf"], ["data-id", "divider-1", 1, "sprk-c-Divider", "sprk-u-mvn", "sprk-u-mhm"], [1, "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--misc-b", "sprk-o-Box", "sprk-u-PaddingTop--b"], ["class", "sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large", 4, "ngIf"], ["class", "\n              sprk-o-Stack__item\n              sprk-o-Stack__item--flex@m\n              sprk-o-Stack\n              sprk-o-Stack--split@xxs\n              sprk-o-Stack--medium\n              sprk-b-List\n              sprk-b-List--bare", 4, "ngIf"], [1, "sprk-o-Stack__item", "sprk-o-Stack__item--three-tenths@m", "sprk-o-Stack", "sprk-o-Stack--misc-b", "sprk-o-Box", "sprk-u-prh"], [1, "sprk-o-Stack__item", "sprk-b-TypeBodyOne"], ["class", "sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium", 4, "ngFor", "ngForOf"], [1, "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--medium"], [1, "sprk-o-Stack__item"], ["sprkLink", "", "variant", "plain", 3, "href", "analyticsString"], [3, "iconType", "additionalClasses", 4, "ngIf"], ["class", "sprk-u-ScreenReaderText", 4, "ngIf"], [3, "src", "alt", "class", 4, "ngIf"], [1, "sprk-o-Stack__item", "sprk-b-TypeBodyFour"], [3, "iconType", "additionalClasses"], [1, "sprk-u-ScreenReaderText"], [3, "src", "alt"], ["class", "sprk-o-Stack__item sprk-o-Stack__item--third@m sprk-o-Box sprk-u-PaddingRight--a sprk-o-Stack sprk-o-Stack--large", 4, "ngFor", "ngForOf"], [1, "sprk-o-Stack__item", "sprk-o-Stack__item--third@m", "sprk-o-Box", "sprk-u-PaddingRight--a", "sprk-o-Stack", "sprk-o-Stack--large"], [1, "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--misc-a", "sprk-b-List", "sprk-b-List--bare"], ["class", "sprk-o-Stack__item", 4, "ngFor", "ngForOf"], ["sprkLink", "", "variant", "simple", 1, "sprk-u-FontWeight--normal", 3, "href", "analyticsString"], [1, "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--large", "sprk-o-Box"], [1, "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--large", "sprk-o-Stack--split@m"], ["class", "\n                    sprk-o-Stack__item\n                    sprk-o-Stack__item--flex@m\n                    sprk-o-Stack\n                    sprk-o-Stack--split@xxs\n                    sprk-o-Stack--medium\n                    sprk-b-List\n                    sprk-b-List--bare", 4, "ngIf"], [1, "sprk-o-Stack__item", "sprk-o-Stack__item--flex@m", "sprk-o-Stack", "sprk-o-Stack--split@xxs", "sprk-o-Stack--medium", "sprk-b-List", "sprk-b-List--bare"], [1, "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--large"], [1, "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--medium", "sprk-o-Stack--split@s", "sprk-u-mbm"], ["sprkLink", "", "variant", "plain", 1, "sprk-o-Stack__item", 3, "href", "analyticsString"], ["iconClass", "sprk-c-Icon--stroke-current-color", "titleFontClass", "sprk-b-TypeBodyFour", 3, "title", "analyticsString"], [1, "sprk-b-TypeBodyFour"], ["class", "sprk-o-Stack__item sprk-b-TypeBodyFour", 4, "ngFor", "ngForOf"]], template: function SprkFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "footer", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, SprkFooterComponent_div_3_Template, 4, 2, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵtemplate(5, SprkFooterComponent_div_5_Template, 2, 1, "div", 5);
        ɵngcc0.ɵɵtemplate(6, SprkFooterComponent_div_6_Template, 5, 2, "div", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "span", 7);
        ɵngcc0.ɵɵelementStart(8, "div", 8);
        ɵngcc0.ɵɵtemplate(9, SprkFooterComponent_div_9_Template, 6, 3, "div", 9);
        ɵngcc0.ɵɵtemplate(10, SprkFooterComponent_div_10_Template, 2, 1, "div", 9);
        ɵngcc0.ɵɵtemplate(11, SprkFooterComponent_ul_11_Template, 2, 1, "ul", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.globalLinks);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.localLinks);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.socialLinks);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.awards);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.disclaimerText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.badgeLinks);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgForOf, SprkLinkDirective,
        SprkIconComponent,
        SprkToggleComponent], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFooterComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFooterComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFooterComponent.prototype, "globalHeading", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFooterComponent.prototype, "awardsHeading", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFooterComponent.prototype, "connectHeading", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkFooterComponent.prototype, "globalLinks", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkFooterComponent.prototype, "localLinks", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkFooterComponent.prototype, "socialLinks", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkFooterComponent.prototype, "awards", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkFooterComponent.prototype, "badgeLinks", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkFooterComponent.prototype, "disclaimerText", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkFooterComponent.prototype, "disclaimerToggle", void 0);

let SprkFooterModule = class SprkFooterModule {
};
SprkFooterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkFooterModule });
SprkFooterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkFooterModule_Factory(t) { return new (t || SprkFooterModule)(); }, imports: [[
            CommonModule,
            SprkIconModule,
            SprkStackModule,
            SprkStackItemModule,
            SprkToggleModule,
            SprkLinkDirectiveModule
        ]] });

let SprkListItemComponent = class SprkListItemComponent {
};
SprkListItemComponent.ɵfac = function SprkListItemComponent_Factory(t) { return new (t || SprkListItemComponent)(); };
SprkListItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkListItemComponent, selectors: [["sprk-list-item"]], viewQuery: function SprkListItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, inputs: { analyticsString: "analyticsString", idString: "idString", additionalClasses: "additionalClasses" }, ngContentSelectors: _c12, decls: 1, vars: 0, template: function SprkListItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, SprkListItemComponent_ng_template_0_Template, 1, 0, "ng-template");
    } }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkListItemComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkListItemComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkListItemComponent.prototype, "additionalClasses", void 0);
__decorate([
    ViewChild(TemplateRef, { static: true }),
    __metadata("design:type", TemplateRef)
], SprkListItemComponent.prototype, "content", void 0);

let SprkListItemModule = class SprkListItemModule {
};
SprkListItemModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkListItemModule });
SprkListItemModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkListItemModule_Factory(t) { return new (t || SprkListItemModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkMastheadAccordionComponent = class SprkMastheadAccordionComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-c-MastheadAccordion',
            'sprk-b-List',
            'sprk-b-List--bare'
        ];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkMastheadAccordionComponent.ɵfac = function SprkMastheadAccordionComponent_Factory(t) { return new (t || SprkMastheadAccordionComponent)(); };
SprkMastheadAccordionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkMastheadAccordionComponent, selectors: [["sprk-masthead-accordion"]], inputs: { additionalClasses: "additionalClasses", idString: "idString" }, ngContentSelectors: _c12, decls: 3, vars: 2, consts: [["role", "navigation"], [3, "ngClass"]], template: function SprkMastheadAccordionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "nav", 0);
        ɵngcc0.ɵɵelementStart(1, "ul", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadAccordionComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadAccordionComponent.prototype, "idString", void 0);

let SprkMastheadAccordionModule = class SprkMastheadAccordionModule {
};
SprkMastheadAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkMastheadAccordionModule });
SprkMastheadAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkMastheadAccordionModule_Factory(t) { return new (t || SprkMastheadAccordionModule)(); }, imports: [[CommonModule, SprkIconModule]] });

let SprkMastheadAccordionItemComponent = class SprkMastheadAccordionItemComponent {
    constructor() {
        /**
         * If `true`, the Masthead accordion item
         * will be open when it is rendered.
         */
        this.isOpen = false;
        /**
         * The name of the icon to use
         * for the clickable close icon.
         */
        this.iconTypeClosed = 'chevron-up-circle-two-color';
        /**
         * The name of the icon to use
         * for the clickable open icon.
         */
        this.iconTypeOpen = 'chevron-up-circle-two-color';
        /**
         * @ignore
         */
        this.componentID = uniqueId();
        /**
         * @ignore
         */
        this.accordion_controls_id = `accordionHeading__${this.componentID}`;
        /**
         * @ignore
         */
        this.currentIconType = this.iconTypeClosed;
        /**
         * @ignore
         */
        this.iconStateClass = '';
        /**
         * @ignore
         */
        this.animState = 'closed';
    }
    /**
     * @ignore
     */
    accordionState() {
        this.isOpen === false
            ? (this.animState = 'closed')
            : (this.animState = 'open');
        this.isOpen === false
            ? (this.currentIconType = this.iconTypeClosed)
            : (this.currentIconType = this.iconTypeOpen);
        this.isOpen === false
            ? (this.iconStateClass = '')
            : (this.iconStateClass = 'sprk-c-Icon--open');
    }
    /**
     * @ignore
     */
    toggleAccordion(event) {
        event.preventDefault();
        this.isOpen = !this.isOpen;
        this.accordionState();
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-c-MastheadAccordion__item',
            'sprk-u-Overflow--hidden'
        ];
        if (this.isOpen) {
            classArray.push('sprk-c-MastheadAccordion__item--open');
        }
        if (this.isActive) {
            classArray.push('sprk-c-MastheadAccordion__item--active');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getHeadingClasses() {
        const classArray = ['sprk-c-MastheadAccordion__heading'];
        if (this.additionalHeadingClasses) {
            this.additionalHeadingClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    ngOnInit() {
        this.accordionState();
    }
};
SprkMastheadAccordionItemComponent.ɵfac = function SprkMastheadAccordionItemComponent_Factory(t) { return new (t || SprkMastheadAccordionItemComponent)(); };
SprkMastheadAccordionItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkMastheadAccordionItemComponent, selectors: [["sprk-masthead-accordion-item"]], inputs: { isOpen: "isOpen", iconTypeClosed: "iconTypeClosed", iconTypeOpen: "iconTypeOpen", title: "title", analyticsString: "analyticsString", idString: "idString", additionalClasses: "additionalClasses", additionalHeadingClasses: "additionalHeadingClasses", isActive: "isActive", leadingIcon: "leadingIcon" }, ngContentSelectors: _c12, decls: 10, vars: 12, consts: [[3, "ngClass"], [1, "sprk-u-Position--relative", "sprk-o-Stack__item", "sprk-u-Width-100"], [1, "sprk-c-MastheadAccordion__summary", 3, "click"], ["additionalClasses", "sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-c-Icon--toggle sprk-u-mrs", 3, "iconType", 4, "ngIf"], [3, "additionalClasses", "iconType"], [3, "id"], ["additionalClasses", "sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-c-Icon--toggle sprk-u-mrs", 3, "iconType"]], template: function SprkMastheadAccordionItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "button", 2);
        ɵngcc0.ɵɵlistener("click", function SprkMastheadAccordionItemComponent_Template_button_click_2_listener($event) { return ctx.toggleAccordion($event); });
        ɵngcc0.ɵɵelementStart(3, "span", 0);
        ɵngcc0.ɵɵtemplate(4, SprkMastheadAccordionItemComponent_sprk_icon_4_Template, 1, 1, "sprk-icon", 3);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "sprk-icon", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div");
        ɵngcc0.ɵɵelementStart(8, "div", 5);
        ɵngcc0.ɵɵprojection(9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("aria-controls", ctx.accordion_controls_id)("data-analytics", ctx.analyticsString)("data-id", ctx.idString)("aria-expanded", ctx.isOpen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getHeadingClasses());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.leadingIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.title, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate1("additionalClasses", "sprk-c-MastheadAccordion__icon sprk-c-Icon--stroke-current-color sprk-c-Icon--toggle ", ctx.iconStateClass, "");
        ɵngcc0.ɵɵproperty("iconType", ctx.currentIconType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("@toggleContent", ctx.animState);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.accordion_controls_id);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, SprkIconComponent], encapsulation: 2, data: { animation: [toggleAnimations.toggleContent] } });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadAccordionItemComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadAccordionItemComponent.prototype, "analyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadAccordionItemComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadAccordionItemComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadAccordionItemComponent.prototype, "additionalHeadingClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkMastheadAccordionItemComponent.prototype, "isOpen", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkMastheadAccordionItemComponent.prototype, "isActive", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkMastheadAccordionItemComponent.prototype, "iconTypeClosed", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkMastheadAccordionItemComponent.prototype, "iconTypeOpen", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadAccordionItemComponent.prototype, "leadingIcon", void 0);

let SprkMastheadAccordionItemModule = class SprkMastheadAccordionItemModule {
};
SprkMastheadAccordionItemModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkMastheadAccordionItemModule });
SprkMastheadAccordionItemModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkMastheadAccordionItemModule_Factory(t) { return new (t || SprkMastheadAccordionItemModule)(); }, imports: [[CommonModule, SprkIconModule]] });

let SprkMastheadComponent = class SprkMastheadComponent {
    /**
     * @ignore
     */
    constructor(renderer, router) {
        this.renderer = renderer;
        /**
         *  The `href` value of the logo.
         */
        this.logoHref = '/';
        /**
         * The value supplied will be used as
         * screen reader text that is visually hidden
         * for the link that wraps the logo.
         */
        this.logoLinkScreenReaderText = 'Go to the homepage';
        /**
         * Represents the initial state of the
         * narrow nav element of the Masthead component.
         */
        this.isNarrowNavOpen = false;
        /**
         * A string that is used to set the `id` on the narrow nav
         * and the `aria-controls` for the menu trigger button.
         */
        this.narrowNavId = uniqueId(`sprk_masthead_narrow_nav_`);
        /**
         * @ignore
         */
        this.iconType = 'chevron-down';
        /**
         * @ignore
         */
        this.componentID = uniqueId();
        /**
         * @ignore
         */
        this.controls_id = `sprk-narrow-navigation-item__${this.componentID}`;
        /**
         * @ignore
         */
        this.isScrolled = false;
        /**
         * @ignore
         */
        this.isNarrowLayout = false;
        /**
         * @ignore
         */
        this.scrollDirection = 'up';
        /**
         * @ignore
         */
        this.isHidden = false;
        /**
         * @ignore
         */
        this.isNarrowOnResize = false;
        /**
         * @ignore
         */
        this.scrollPosition = 0;
        /**
         * @ignore
         */
        this.throttledCheckScrollDirection = throttle(this.checkScrollDirection, 500);
        /**
         * @ignore
         */
        this.throttledUpdateLayoutState = throttle(this.updateLayoutState, 500);
        router.events.subscribe((event) => {
            if (event instanceof NavigationEnd) {
                this.closeNarrowNav();
            }
        });
    }
    /**
     * @ignore
     * Closes the narrow navigation menu
     * if it is left open when
     * the viewport is expanded.
     */
    handleResizeEvent() {
        this.closeNarrowNav();
    }
    /**
     * @ignore
     */
    onScroll(event) {
        window.scrollY >= 10 ? (this.isScrolled = true) : (this.isScrolled = false);
        if (this.isNarrowLayout) {
            this.throttledCheckScrollDirection();
        }
    }
    /**
     * @ignore
     * Handles when viewport size changes to
     * large while narrow nav is hidden.
     */
    onResize(event) {
        this.isNarrowOnResize = this.isElementVisible('.sprk-c-Masthead__menu');
        this.throttledUpdateLayoutState();
    }
    /**
     * @ignore
     */
    updateLayoutState() {
        if (this.isNarrowLayout !== this.isNarrowOnResize) {
            this.isNarrowLayout = this.isNarrowOnResize;
            // If is not narrow on resize update, make sure it's visible
            if (!this.isNarrowLayout) {
                this.isHidden = false;
            }
        }
    }
    /**
     * @ignore
     */
    ngAfterContentInit() {
        this.isNarrowLayout = this.isElementVisible('.sprk-c-Masthead__menu');
    }
    /**
     * @ignore
     */
    isElementVisible(selector) {
        if (typeof window === 'undefined') {
            return;
        }
        const element = document.querySelector(selector);
        if (!element) {
            return;
        }
        const elementDisplayValue = window.getComputedStyle(element).display;
        const elementVisibilityValue = window.getComputedStyle(element).visibility;
        const elementIsVisible = elementDisplayValue === 'none' || elementVisibilityValue === 'hidden'
            ? false
            : true;
        return elementIsVisible;
    }
    /**
     * @ignore
     */
    scrollYDirection() {
        if (typeof window !== 'undefined') {
            const newScrollPos = window.scrollY;
            if (newScrollPos < 0) {
                return;
            }
            const diff = newScrollPos - this.scrollPosition;
            const direction = diff > 0 ? 'down' : 'up';
            this.scrollPosition = newScrollPos;
            return direction;
        }
    }
    /**
     * @ignore
     */
    checkScrollDirection() {
        const newDirection = this.scrollYDirection();
        if (this.scrollDirection !== newDirection) {
            this.scrollDirection = newDirection;
            this.scrollDirection === 'down'
                ? (this.isHidden = true)
                : (this.isHidden = false);
        }
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Masthead', 'sprk-o-Stack'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        if (this.isNarrowNavOpen) {
            classArray.push('sprk-c-Masthead--open');
        }
        if (this.isScrolled) {
            classArray.push('sprk-c-Masthead--scroll');
        }
        if (this.isHidden) {
            classArray.push('sprk-c-Masthead--hidden');
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getNarrowNavClasses() {
        const classArray = [];
        if (this.additionalNarrowNavClasses) {
            this.additionalNarrowNavClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getSecondaryNavClasses() {
        const classArray = [
            'sprk-c-Masthead__big-nav-items',
            'sprk-o-Stack',
            'sprk-o-Stack--misc-a',
            'sprk-o-Stack--center-row',
            'sprk-o-Stack--split@xxs',
            'sprk-b-List',
            'sprk-b-List--bare'
        ];
        if (this.additionalBigNavClasses) {
            this.additionalBigNavClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    toggleNarrowNav(event) {
        event.preventDefault();
        if (this.isNarrowNavOpen) {
            this.closeNarrowNav();
        }
        else {
            this.openNarrowNav();
        }
    }
    /**
     * @ignore
     */
    openNarrowNav() {
        this.renderer.addClass(document.body, 'sprk-u-Overflow--hidden');
        this.renderer.addClass(document.body.parentElement, 'sprk-u-Overflow--hidden');
        this.renderer.addClass(document.body, 'sprk-u-Height--100');
        this.renderer.addClass(document.body.parentElement, 'sprk-u-Height--100');
        this.isNarrowNavOpen = true;
    }
    /**
     * @ignore
     */
    closeNarrowNav() {
        this.renderer.removeClass(document.body, 'sprk-u-Overflow--hidden');
        this.renderer.removeClass(document.body.parentElement, 'sprk-u-Overflow--hidden');
        this.renderer.removeClass(document.body, 'sprk-u-Height--100');
        this.renderer.removeClass(document.body.parentElement, 'sprk-u-Height--100');
        this.isNarrowNavOpen = false;
    }
};
SprkMastheadComponent.ɵfac = function SprkMastheadComponent_Factory(t) { return new (t || SprkMastheadComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router)); };
SprkMastheadComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkMastheadComponent, selectors: [["sprk-masthead"]], hostBindings: function SprkMastheadComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("orientationchange", function SprkMastheadComponent_orientationchange_HostBindingHandler() { return ctx.handleResizeEvent(); }, false, ɵngcc0.ɵɵresolveWindow)("scroll", function SprkMastheadComponent_scroll_HostBindingHandler($event) { return ctx.onScroll($event); }, false, ɵngcc0.ɵɵresolveWindow)("resize", function SprkMastheadComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
    } }, inputs: { logoHref: "logoHref", logoLinkScreenReaderText: "logoLinkScreenReaderText", isNarrowNavOpen: "isNarrowNavOpen", narrowNavId: "narrowNavId", additionalClasses: "additionalClasses", additionalBigNavClasses: "additionalBigNavClasses", additionalNarrowNavClasses: "additionalNarrowNavClasses", narrowNavLinks: "narrowNavLinks", idString: "idString", bigNavLinks: "bigNavLinks", narrowSelector: "narrowSelector" }, ngContentSelectors: _c22, decls: 24, vars: 11, consts: [["role", "banner", 3, "ngClass"], [1, "sprk-c-Masthead__content", "sprk-o-Stack__item", "sprk-o-Stack", "sprk-o-Stack--split@xxs"], [1, "sprk-c-Masthead__menu", "sprk-o-Stack__item", "sprk-o-Stack__item--center-column@xxs"], ["type", "button", 1, "sprk-c-Menu", 3, "click"], [1, "sprk-u-ScreenReaderText"], ["aria-hidden", "true", "viewBox", "0 0 64 64", "xmlns", "http://www.w3.org/2000/svg", 3, "ngClass"], ["d", "m8 32h48", 1, "sprk-c-Menu__line", "sprk-c-Menu__line--two"], ["d", "m8 18.68h48", 1, "sprk-c-Menu__line", "sprk-c-Menu__line--one"], ["d", "m8 45.32h48", 1, "sprk-c-Menu__line", "sprk-c-Menu__line--three"], [1, "sprk-c-Masthead__branding", "sprk-o-Stack__item", "sprk-o-Stack__item--center-column@xxs"], ["sprkLink", "", "variant", "unstyled"], [1, "sprk-c-Masthead__nav-item", "sprk-o-Stack__item", "sprk-o-Stack__item--center-column@xxs"], ["role", "navigation", 1, "sprk-c-Masthead__little-nav", "sprk-o-Stack__item", "sprk-o-Stack__item--flex@xxs", "sprk-o-Stack", "sprk-o-Stack--misc-a", "sprk-o-Stack--split@xxs", "sprk-o-Stack--end-row"], [1, "sprk-o-Stack__item"], ["class", "sprk-c-Masthead__big-nav", "role", "navigation", 4, "ngIf"], ["class", "sprk-c-Masthead__narrow-nav", "role", "navigation", 3, "id", 4, "ngIf"], ["role", "navigation", 1, "sprk-c-Masthead__big-nav"], [3, "ngClass"], ["routerLinkActive", "sprk-c-Masthead__big-nav-item--active", 3, "ngClass", 4, "ngFor", "ngForOf"], ["routerLinkActive", "sprk-c-Masthead__big-nav-item--active", 3, "ngClass"], [4, "ngIf"], ["additionalTriggerClasses", "sprk-b-Link--plain sprk-c-Masthead__link sprk-c-Masthead__link--big-nav", "additionalClasses", "sprk-u-TextAlign--left", "triggerIconType", "chevron-down", 3, "choices", "analyticsString", "triggerText"], ["sprkLink", "", "variant", "plain", 1, "sprk-c-Masthead__link", "sprk-c-Masthead__link--big-nav", 3, "analyticsString"], ["role", "navigation", 1, "sprk-c-Masthead__narrow-nav", 3, "id"], ["dropdownType", "mastheadSelector", "additionalClasses", "sprk-c-Masthead__selector-dropdown", "additionalTriggerClasses", "\n            sprk-c-Masthead__selector\n            sprk-b-Link\n            sprk-b-Link--plain\n            sprk-o-Stack\n            sprk-o-Stack--split@xxs\n            sprk-o-Stack--center-column", "additionalTriggerTextClasses", "sprk-o-Stack__item sprk-o-Stack__item--flex@xxs", "additionalIconClasses", "sprk-Stack__item sprk-u-mrs", "selector", "Select One", "triggerIconType", "chevron-down", 3, "triggerText", "choices", 4, "ngIf"], [3, "additionalClasses"], [4, "ngFor", "ngForOf"], ["dropdownType", "mastheadSelector", "additionalClasses", "sprk-c-Masthead__selector-dropdown", "additionalTriggerClasses", "\n            sprk-c-Masthead__selector\n            sprk-b-Link\n            sprk-b-Link--plain\n            sprk-o-Stack\n            sprk-o-Stack--split@xxs\n            sprk-o-Stack--center-column", "additionalTriggerTextClasses", "sprk-o-Stack__item sprk-o-Stack__item--flex@xxs", "additionalIconClasses", "sprk-Stack__item sprk-u-mrs", "selector", "Select One", "triggerIconType", "chevron-down", 3, "triggerText", "choices"], ["class", "sprk-c-Dropdown__footer sprk-u-TextAlign--center", "sprkDropdownFooter", "", 4, "ngIf"], ["sprkDropdownFooter", "", 1, "sprk-c-Dropdown__footer", "sprk-u-TextAlign--center"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-c-Button", "sprk-c-Button--tertiary", 3, "analyticsString"], ["iconTypeOpen", "chevron-down", "iconTypeClosed", "chevron-down", 3, "leadingIcon", "isActive", "title"], [1, "sprk-b-List", "sprk-b-List--bare", "sprk-c-MastheadAccordion__details"], ["class", "sprk-c-MastheadAccordion__item", 4, "ngFor", "ngForOf"], [1, "sprk-c-MastheadAccordion__item"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-c-MastheadAccordion__summary", 3, "analyticsString"], ["additionalClasses", "sprk-c-Icon--stroke-current-color sprk-u-mrs", 3, "iconType", 4, "ngIf"], ["additionalClasses", "sprk-c-Icon--stroke-current-color sprk-u-mrs", 3, "iconType"], [1, "sprk-c-MastheadAccordion__heading"]], template: function SprkMastheadComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c20);
        ɵngcc0.ɵɵelementStart(0, "header", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵlistener("click", function SprkMastheadComponent_Template_button_click_3_listener($event) { return ctx.toggleNarrowNav($event); });
        ɵngcc0.ɵɵelementStart(4, "span", 4);
        ɵngcc0.ɵɵtext(5, "Toggle Navigation");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(6, "svg", 5);
        ɵngcc0.ɵɵelementStart(7, "g");
        ɵngcc0.ɵɵelement(8, "path", 6);
        ɵngcc0.ɵɵelement(9, "path", 7);
        ɵngcc0.ɵɵelement(10, "path", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵnamespaceHTML();
        ɵngcc0.ɵɵelementStart(11, "div", 9);
        ɵngcc0.ɵɵelementStart(12, "a", 10);
        ɵngcc0.ɵɵprojection(13);
        ɵngcc0.ɵɵelementStart(14, "span", 4);
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "div", 11);
        ɵngcc0.ɵɵprojection(17, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "nav", 12);
        ɵngcc0.ɵɵprojection(19, 2);
        ɵngcc0.ɵɵprojection(20, 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "div", 13);
        ɵngcc0.ɵɵtemplate(22, SprkMastheadComponent_nav_22_Template, 3, 3, "nav", 14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(23, SprkMastheadComponent_nav_23_Template, 5, 4, "nav", 15);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵattribute("aria-expanded", ctx.isNarrowNavOpen ? true : false)("aria-controls", ctx.narrowNavId);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c21, ctx.isNarrowNavOpen));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵattribute("href", ctx.logoHref, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.logoLinkScreenReaderText);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵproperty("ngIf", ctx.bigNavLinks);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isNarrowNavOpen);
    } }, directives: [ɵngcc1.NgClass, SprkLinkDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.RouterLinkActive, SprkDropdownComponent,
        SprkMastheadAccordionComponent,
        SprkMastheadAccordionItemComponent,
        SprkIconComponent], encapsulation: 2 });
SprkMastheadComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: Router }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkMastheadComponent.prototype, "logoHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkMastheadComponent.prototype, "logoLinkScreenReaderText", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadComponent.prototype, "additionalBigNavClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadComponent.prototype, "additionalNarrowNavClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkMastheadComponent.prototype, "narrowNavLinks", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkMastheadComponent.prototype, "isNarrowNavOpen", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkMastheadComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SprkMastheadComponent.prototype, "bigNavLinks", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkMastheadComponent.prototype, "narrowSelector", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkMastheadComponent.prototype, "narrowNavId", void 0);
__decorate([
    HostListener('window:orientationchange'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], SprkMastheadComponent.prototype, "handleResizeEvent", null);
__decorate([
    HostListener('window:scroll', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkMastheadComponent.prototype, "onScroll", null);
__decorate([
    HostListener('window:resize', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkMastheadComponent.prototype, "onResize", null);
SprkMastheadComponent = __decorate([ __metadata("design:paramtypes", [Renderer2, Router])
], SprkMastheadComponent);

let SprkMastheadModule = class SprkMastheadModule {
};
SprkMastheadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkMastheadModule });
SprkMastheadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkMastheadModule_Factory(t) { return new (t || SprkMastheadModule)(); }, imports: [[
            CommonModule,
            SprkIconModule,
            RouterModule,
            SprkMastheadAccordionModule,
            SprkMastheadAccordionItemModule,
            SprkDropdownModule,
            SprkAccordionModule,
            SprkAccordionItemModule,
            SprkLinkDirectiveModule,
        ]] });

let SprkModalComponent = class SprkModalComponent {
    /**
     * @ignore
     */
    constructor() {
        /**
         * The value supplied will be
         * rendered as the text for the confirm button.
         */
        this.confirmText = 'Confirm';
        /**
         * The value supplied will be rendered
         * as the text for the cancel button.
         */
        this.cancelText = 'Cancel';
        /**
         * If `true`, the Modal will be shown.
         * If `false`, the modal will not be shown.
         */
        this.isVisible = false;
        /**
         * When the Modal is closed the hide event is
         * emitted and a callback function can
         * be triggered if supplied.
         */
        this.hide = new EventEmitter();
        /**
         * Available when the Modal type is `choice`.
         * The Modal will emit a confirm click event
         * when the confirmation button is clicked.
         * A callback function can be triggered if
         * supplied.
         */
        this.confirmClick = new EventEmitter();
        /**
         * Available when the Modal type is `choice`.
         * The Modal will emit a cancel click event
         * when the cancel link is clicked.
         * A callback function can be triggered if supplied.
         */
        this.cancelClick = new EventEmitter();
        /**
         * @ignore
         */
        this.componentID = uniqueId();
        /**
         * @ignore
         */
        this.heading_id = `modalHeading__${this.componentID}`;
        /**
         * @ignore
         */
        this.content_id = `modalContent__${this.componentID}`;
    }
    /**
     * @ignore
     */
    handleKeyboardEvent(event) {
        if (this.isVisible && event.key === 'Escape') {
            this.closeModal(event);
        }
    }
    /**
     * @ignore
     */
    closeModal(event) {
        if (this.modalType !== 'wait') {
            event.preventDefault();
            this.hide.emit(event);
        }
    }
    /**
     * Emits an event when the confirmation
     * button is clicked.
     */
    emitConfirmClick(event) {
        this.confirmClick.emit(event);
    }
    /**
     * Emits an event when the cancel
     * link is clicked.
     */
    emitCancelClick(event) {
        event.preventDefault();
        this.cancelClick.emit(event);
        this.closeModal(event);
    }
};
SprkModalComponent.ɵfac = function SprkModalComponent_Factory(t) { return new (t || SprkModalComponent)(); };
SprkModalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkModalComponent, selectors: [["sprk-modal"]], hostBindings: function SprkModalComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown", function SprkModalComponent_keydown_HostBindingHandler($event) { return ctx.handleKeyboardEvent($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { confirmText: "confirmText", cancelText: "cancelText", isVisible: "isVisible", title: "title", modalType: "modalType", confirmAnalyticsString: "confirmAnalyticsString", cancelAnalyticsString: "cancelAnalyticsString", idString: "idString" }, outputs: { hide: "hide", confirmClick: "confirmClick", cancelClick: "cancelClick" }, ngContentSelectors: _c12, decls: 2, vars: 2, consts: [["role", "dialog", "tabindex", "1", "aria-modal", "true", 3, "ngClass", 4, "ngIf"], ["class", "sprk-c-ModalMask", "tabindex", "-1", 3, "click", 4, "ngIf"], ["role", "dialog", "tabindex", "1", "aria-modal", "true", 3, "ngClass"], [1, "sprk-o-Stack", "sprk-o-Stack--large"], [1, "sprk-o-Stack__item", "sprk-c-Modal__header"], [1, "sprk-c-Modal__heading", "sprk-b-TypeDisplayFour", 3, "id"], ["class", "sprk-c-Modal__icon", "type", "button", "aria-label", "Close Modal", 3, "click", 4, "ngIf"], [1, "sprk-o-Stack__item", "sprk-c-Modal__body", "sprk-o-Stack", "sprk-o-Stack--medium"], ["class", "sprk-o-Stack__item sprk-c-Spinner sprk-c-Spinner--circle sprk-c-Spinner--large sprk-c-Spinner--dark", 4, "ngIf"], ["class", "sprk-o-Stack__item sprk-c-Modal__footer", 4, "ngIf"], ["type", "button", "aria-label", "Close Modal", 1, "sprk-c-Modal__icon", 3, "click"], ["iconType", "close", "additionalClasses", "sprk-c-Icon--stroke-current-color"], [1, "sprk-o-Stack__item", "sprk-c-Spinner", "sprk-c-Spinner--circle", "sprk-c-Spinner--large", "sprk-c-Spinner--dark"], [1, "sprk-o-Stack__item", "sprk-c-Modal__footer"], [1, "sprk-c-Button", "sprk-u-mrm", 3, "click"], [1, "sprk-c-Button", "sprk-c-Button--tertiary", 3, "click"], ["tabindex", "-1", 1, "sprk-c-ModalMask", 3, "click"]], template: function SprkModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, SprkModalComponent_div_0_Template, 10, 11, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SprkModalComponent_div_1_Template, 1, 0, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isVisible);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isVisible);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, SprkIconComponent], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkModalComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkModalComponent.prototype, "modalType", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkModalComponent.prototype, "confirmText", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkModalComponent.prototype, "cancelText", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkModalComponent.prototype, "confirmAnalyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkModalComponent.prototype, "cancelAnalyticsString", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkModalComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkModalComponent.prototype, "isVisible", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], SprkModalComponent.prototype, "hide", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], SprkModalComponent.prototype, "confirmClick", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], SprkModalComponent.prototype, "cancelClick", void 0);
__decorate([
    HostListener('document:keydown', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [KeyboardEvent]),
    __metadata("design:returntype", void 0)
], SprkModalComponent.prototype, "handleKeyboardEvent", null);
SprkModalComponent = __decorate([ __metadata("design:paramtypes", [])
], SprkModalComponent);

let SprkModalModule = class SprkModalModule {
};
SprkModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkModalModule });
SprkModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkModalModule_Factory(t) { return new (t || SprkModalModule)(); }, imports: [[CommonModule, RouterModule, SprkIconModule]] });

let SprkOrderedListComponent = class SprkOrderedListComponent {
    constructor() { }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-List'];
        switch (this.listType) {
            case 'indented':
                classArray.push('sprk-b-List--indented');
                break;
            case 'bare':
                classArray.push('sprk-b-List--bare');
                break;
            default:
                break;
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkOrderedListComponent.ɵfac = function SprkOrderedListComponent_Factory(t) { return new (t || SprkOrderedListComponent)(); };
SprkOrderedListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkOrderedListComponent, selectors: [["sprk-ordered-list"]], contentQueries: function SprkOrderedListComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, SprkListItemComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);
    } }, inputs: { listType: "listType", additionalClasses: "additionalClasses", idString: "idString" }, decls: 2, vars: 3, consts: [[3, "ngClass"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngTemplateOutlet"]], template: function SprkOrderedListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ol", 0);
        ɵngcc0.ɵɵtemplate(1, SprkOrderedListComponent_li_1_Template, 2, 4, "li", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkOrderedListComponent.prototype, "listType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkOrderedListComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkOrderedListComponent.prototype, "idString", void 0);
__decorate([
    ContentChildren(SprkListItemComponent),
    __metadata("design:type", QueryList)
], SprkOrderedListComponent.prototype, "items", void 0);
SprkOrderedListComponent = __decorate([ __metadata("design:paramtypes", [])
], SprkOrderedListComponent);

let SprkOrderedListModule = class SprkOrderedListModule {
};
SprkOrderedListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkOrderedListModule });
SprkOrderedListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkOrderedListModule_Factory(t) { return new (t || SprkOrderedListModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkUnorderedListComponent = class SprkUnorderedListComponent {
    constructor() { }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [''];
        switch (this.listType) {
            case 'indented':
                classArray.push('sprk-b-List');
                classArray.push('sprk-b-List--indented');
                break;
            case 'bare':
                classArray.push('sprk-b-List');
                classArray.push('sprk-b-List--bare');
                break;
            case 'horizontal':
                classArray.push('sprk-o-HorizontalList');
                break;
            default:
                break;
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkUnorderedListComponent.ɵfac = function SprkUnorderedListComponent_Factory(t) { return new (t || SprkUnorderedListComponent)(); };
SprkUnorderedListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkUnorderedListComponent, selectors: [["sprk-unordered-list"]], contentQueries: function SprkUnorderedListComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, SprkListItemComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);
    } }, inputs: { listType: "listType", additionalClasses: "additionalClasses", idString: "idString" }, decls: 2, vars: 3, consts: [[3, "ngClass"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngTemplateOutlet"]], template: function SprkUnorderedListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, SprkUnorderedListComponent_li_1_Template, 2, 4, "li", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkUnorderedListComponent.prototype, "listType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkUnorderedListComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkUnorderedListComponent.prototype, "idString", void 0);
__decorate([
    ContentChildren(SprkListItemComponent),
    __metadata("design:type", QueryList)
], SprkUnorderedListComponent.prototype, "items", void 0);
SprkUnorderedListComponent = __decorate([ __metadata("design:paramtypes", [])
], SprkUnorderedListComponent);

let SprkUnorderedListModule = class SprkUnorderedListModule {
};
SprkUnorderedListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkUnorderedListModule });
SprkUnorderedListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkUnorderedListModule_Factory(t) { return new (t || SprkUnorderedListModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkPaginationComponent = class SprkPaginationComponent {
    constructor() {
        /**
         * If set to `pager`, the component will render
         * in the Pager variant with no visible number
         * links. Otherwise, the component will render in
         * the Default variant if there three or fewer
         * pages or in the Long variant if there are
         * more than three pages.
         */
        this.paginationType = 'default';
        /**
         * Screen reader text for the "Next Page" icon.
         */
        this.nextLinkText = 'Next';
        /**
         * Screen reader text for the "Previous Page"
         * icon.
         */
        this.prevLinkText = 'Prev';
        /**
         * @ignore
         */
        this._currentPage = 1;
        /**
         * Accepts a function to run when the
         * previous link is clicked.
         * On click, `previousClick`
         * will emit the click event and current page.
         */
        this.previousClick = new EventEmitter();
        /**
         * Accepts a function
         * to run when the next link is clicked.
         * On click, `nextClick` will emit the click event and current page.
         */
        this.nextClick = new EventEmitter();
        /**
         * Accepts a function to run when the individual page
         * links are clicked. On click, `pageClick` will
         * emit the click event and current page.
         */
        this.pageClick = new EventEmitter();
    }
    /**
     * The current page number.
     * In the Default and Long variants,
     * this value corresponds to the active page link.
     */
    set currentPage(value) {
        if (value > this.totalPages()) {
            value = this.totalPages();
        }
        else if (value < 1) {
            value = 1;
        }
        this._currentPage = value;
    }
    get currentPage() {
        return this._currentPage;
    }
    /**
     * @ignore
     */
    goToPage(event, page) {
        event.preventDefault();
        this.currentPage = page;
        this.pageClick.emit({ event, page });
    }
    /**
     * @ignore
     */
    goBack(event, page) {
        event.preventDefault();
        let newPage = page;
        if (this.currentPage > 1) {
            newPage = this.currentPage - 1;
            this.currentPage = newPage;
        }
        // Page is still returning the old page. This allows us to
        // close Issue 1401 without introducing a breaking change.
        this.previousClick.emit({ event, page, newPage });
    }
    /**
     * @ignore
     */
    goForward(event, page) {
        event.preventDefault();
        let newPage = page;
        if (this.currentPage < this.totalPages()) {
            newPage = this.currentPage + 1;
            this.currentPage = newPage;
        }
        // Page is still returning the old page. This allows us to
        // close Issue 1401 without introducing a breaking change.
        this.nextClick.emit({ event, page, newPage });
    }
    /**
     * @ignore
     * @returns total number of pages based on total
     * number of items and the desired number of
     * items to show per page.
     */
    totalPages() {
        return Math.ceil(this.totalItems / this.itemsPerPage);
    }
    /**
     * @ignore
     * @returns true if currently on the last page.
     */
    isLastPage() {
        return this.currentPage === this.totalPages();
    }
    /**
     * @ignore
     * @returns true if the component is in
     * either the default or long variant.
     */
    showNumbers() {
        return this.paginationType !== 'pager';
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [''];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkPaginationComponent.ɵfac = function SprkPaginationComponent_Factory(t) { return new (t || SprkPaginationComponent)(); };
SprkPaginationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkPaginationComponent, selectors: [["sprk-pagination"]], inputs: { paginationType: "paginationType", nextLinkText: "nextLinkText", prevLinkText: "prevLinkText", currentPage: "currentPage", totalItems: "totalItems", itemsPerPage: "itemsPerPage", additionalClasses: "additionalClasses", analyticsStringFirstLink: "analyticsStringFirstLink", analyticsStringSecondLink: "analyticsStringSecondLink", analyticsStringThirdLink: "analyticsStringThirdLink", analyticsStringLinkNext: "analyticsStringLinkNext", analyticsStringLinkPrev: "analyticsStringLinkPrev", idString: "idString" }, outputs: { previousClick: "previousClick", nextClick: "nextClick", pageClick: "pageClick" }, decls: 18, vars: 14, consts: [["aria-label", "Pagination Navigation", 3, "ngClass"], ["listType", "horizontal", "additionalClasses", "sprk-c-Pagination sprk-o-HorizontalList--spacing-medium"], ["sprkLink", "", "variant", "plain", "aria-label", "Previous Page", "href", "#", 1, "sprk-c-Pagination__icon", 3, "isDisabled", "analyticsString", "click"], [1, "sprk-u-ScreenReaderText"], ["additionalClasses", "sprk-c-Icon--stroke-current-color", "iconType", "chevron-left"], [4, "ngIf"], ["sprkLink", "", "href", "#", "variant", "plain", "aria-label", "Next Page", 1, "sprk-c-Pagination__icon", 3, "isDisabled", "analyticsString", "click"], ["additionalClasses", "sprk-c-Icon--stroke-current-color", "iconType", "chevron-right"], ["sprkLink", "", "href", "#", "aria-label", "Page 1", 3, "ngClass", "analyticsString", "click"], ["sprkLink", "", "href", "#", "aria-label", "Page 2", 1, "sprk-c-Pagination__link", 3, "click"], ["sprkLink", "", "href", "#", "aria-current", "true", 1, "sprk-c-Pagination__link", "sprk-c-Pagination__link--current", 3, "analyticsString", "click"], ["sprkLink", "", "href", "#", 3, "ngClass", "analyticsString", "click"]], template: function SprkPaginationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "nav", 0);
        ɵngcc0.ɵɵelementStart(1, "sprk-unordered-list", 1);
        ɵngcc0.ɵɵelementStart(2, "sprk-list-item");
        ɵngcc0.ɵɵelementStart(3, "a", 2);
        ɵngcc0.ɵɵlistener("click", function SprkPaginationComponent_Template_a_click_3_listener($event) { return ctx.goBack($event, ctx.currentPage); });
        ɵngcc0.ɵɵelementStart(4, "span", 3);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "sprk-icon", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, SprkPaginationComponent_sprk_list_item_7_Template, 3, 5, "sprk-list-item", 5);
        ɵngcc0.ɵɵtemplate(8, SprkPaginationComponent_sprk_list_item_8_Template, 3, 1, "sprk-list-item", 5);
        ɵngcc0.ɵɵtemplate(9, SprkPaginationComponent_sprk_list_item_9_Template, 2, 0, "sprk-list-item", 5);
        ɵngcc0.ɵɵtemplate(10, SprkPaginationComponent_sprk_list_item_10_Template, 3, 3, "sprk-list-item", 5);
        ɵngcc0.ɵɵtemplate(11, SprkPaginationComponent_sprk_list_item_11_Template, 2, 0, "sprk-list-item", 5);
        ɵngcc0.ɵɵtemplate(12, SprkPaginationComponent_sprk_list_item_12_Template, 3, 7, "sprk-list-item", 5);
        ɵngcc0.ɵɵelementStart(13, "sprk-list-item");
        ɵngcc0.ɵɵelementStart(14, "a", 6);
        ɵngcc0.ɵɵlistener("click", function SprkPaginationComponent_Template_a_click_14_listener($event) { return ctx.goForward($event, ctx.currentPage); });
        ɵngcc0.ɵɵelementStart(15, "span", 3);
        ɵngcc0.ɵɵtext(16);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(17, "sprk-icon", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("isDisabled", ctx.currentPage === 1)("analyticsString", ctx.analyticsStringLinkPrev);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.prevLinkText);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNumbers());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNumbers() && ctx.currentPage !== 2 && ctx.totalPages() === 3);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNumbers() && ctx.currentPage > 2 && ctx.totalPages() > 3);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNumbers() && ctx.currentPage > 1 && ctx.currentPage < ctx.totalPages());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNumbers() && ctx.currentPage < ctx.totalPages() - 1 && ctx.totalPages() > 3);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNumbers() && ctx.totalPages() > 1);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("isDisabled", ctx.isLastPage())("analyticsString", ctx.analyticsStringLinkNext);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.nextLinkText);
    } }, directives: [ɵngcc1.NgClass, SprkUnorderedListComponent,
        SprkListItemComponent,
        SprkLinkDirective,
        SprkIconComponent, ɵngcc1.NgIf], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkPaginationComponent.prototype, "paginationType", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], SprkPaginationComponent.prototype, "totalItems", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], SprkPaginationComponent.prototype, "itemsPerPage", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPaginationComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkPaginationComponent.prototype, "nextLinkText", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkPaginationComponent.prototype, "prevLinkText", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPaginationComponent.prototype, "analyticsStringFirstLink", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPaginationComponent.prototype, "analyticsStringSecondLink", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPaginationComponent.prototype, "analyticsStringThirdLink", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPaginationComponent.prototype, "analyticsStringLinkNext", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPaginationComponent.prototype, "analyticsStringLinkPrev", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPaginationComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], SprkPaginationComponent.prototype, "currentPage", null);
__decorate([
    Output(),
    __metadata("design:type", Object)
], SprkPaginationComponent.prototype, "previousClick", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], SprkPaginationComponent.prototype, "nextClick", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], SprkPaginationComponent.prototype, "pageClick", void 0);
SprkPaginationComponent = __decorate([ __metadata("design:paramtypes", [])
], SprkPaginationComponent);

let SprkPaginationModule = class SprkPaginationModule {
};
SprkPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkPaginationModule });
SprkPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkPaginationModule_Factory(t) { return new (t || SprkPaginationModule)(); }, imports: [[
            CommonModule,
            SprkUnorderedListModule,
            SprkIconModule,
            SprkLinkDirectiveModule,
            SprkListItemModule
        ]] });

let SprkPromoComponent = class SprkPromoComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-c-Promo',
            'sprk-o-Stack',
            'sprk-o-Stack--split@s'
        ];
        if (this.isFlag) {
            classArray.push('sprk-c-Promo--flag');
        }
        if (this.hasBorder) {
            classArray.push('sprk-c-Promo--bordered');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getClassesFlag() {
        const classArray = [
            'sprk-o-Stack__item--fourth@s',
            'sprk-o-Stack__item'
        ];
        if (this.additionalClassesFlagLink) {
            this.additionalClassesFlagLink.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getClassesImg() {
        const classArray = [
            'sprk-o-Stack__item',
            'sprk-o-Stack__item--half@s'
        ];
        if (this.additionalClassesImgLink) {
            this.additionalClassesImgLink.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getClassesContent() {
        const classArray = [
            'sprk-c-Promo__content',
            'sprk-o-Stack__item',
            'sprk-o-Stack',
            'sprk-o-Stack--large'
        ];
        if (this.isFlag) {
            classArray.push('sprk-o-Stack__item--three-fourths@s');
        }
        else {
            if (this.imgSrc) {
                classArray.push('sprk-o-Stack__item--half@s');
            }
        }
        if (this.additionalClassesContent) {
            this.additionalClassesContent.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkPromoComponent.ɵfac = function SprkPromoComponent_Factory(t) { return new (t || SprkPromoComponent)(); };
SprkPromoComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkPromoComponent, selectors: [["sprk-promo"]], inputs: { title: "title", subtitle: "subtitle", cta: "cta", ctaText: "ctaText", buttonHref: "buttonHref", buttonLinkAnalytics: "buttonLinkAnalytics", ctaLinkHref: "ctaLinkHref", ctaLinkAnalytics: "ctaLinkAnalytics", additionalClasses: "additionalClasses", additionalClassesContent: "additionalClassesContent", isFlag: "isFlag", additionalClassesFlagLink: "additionalClassesFlagLink", flagLinkAnalytics: "flagLinkAnalytics", imgSrc: "imgSrc", imgAlt: "imgAlt", imgHref: "imgHref", imgLinkAnalytics: "imgLinkAnalytics", additionalClassesImgLink: "additionalClassesImgLink", mediaRev: "mediaRev", hasBorder: "hasBorder", idString: "idString" }, ngContentSelectors: _c12, decls: 12, vars: 11, consts: [[3, "ngClass"], ["sprkLink", "", "variant", "unstyled", 3, "ngClass", "analyticsString", 4, "ngIf"], ["sprkLink", "", "variant", "unstyled", 3, "analyticsString", "ngClass", 4, "ngIf"], ["class", "sprk-b-TypeDisplayFive sprk-o-Stack__item sprk-c-Promo__title", 4, "ngIf"], ["class", "sprk-c-Promo__subtitle sprk-o-Stack__item", 4, "ngIf"], [1, "sprk-b-TypeBodyTwo", "sprk-o-Stack__item"], ["class", "sprk-o-Stack__item", 4, "ngIf"], ["sprkLink", "", "variant", "simple", "class", "sprk-o-Stack__item", 3, "analyticsString", 4, "ngIf"], ["sprkLink", "", "variant", "unstyled", 3, "ngClass", "analyticsString"], [1, "sprk-c-Promo__image--flag", 3, "alt", "src"], ["sprkLink", "", "variant", "unstyled", 3, "analyticsString", "ngClass"], [1, "sprk-c-Promo__image", 3, "alt", "src"], [1, "sprk-b-TypeDisplayFive", "sprk-o-Stack__item", "sprk-c-Promo__title"], [1, "sprk-c-Promo__subtitle", "sprk-o-Stack__item"], [1, "sprk-o-Stack__item"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-c-Button", 3, "analyticsString"], ["sprkLink", "", "variant", "simple", 1, "sprk-o-Stack__item", 3, "analyticsString"]], template: function SprkPromoComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SprkPromoComponent_a_1_Template, 2, 5, "a", 1);
        ɵngcc0.ɵɵtemplate(2, SprkPromoComponent_a_2_Template, 2, 5, "a", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 0);
        ɵngcc0.ɵɵtemplate(4, SprkPromoComponent_h3_4_Template, 2, 1, "h3", 3);
        ɵngcc0.ɵɵtemplate(5, SprkPromoComponent_div_5_Template, 2, 1, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "div", 5);
        ɵngcc0.ɵɵprojection(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, SprkPromoComponent_div_8_Template, 3, 3, "div", 6);
        ɵngcc0.ɵɵtemplate(9, SprkPromoComponent_a_9_Template, 2, 3, "a", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, SprkPromoComponent_a_10_Template, 2, 5, "a", 1);
        ɵngcc0.ɵɵtemplate(11, SprkPromoComponent_a_11_Template, 2, 5, "a", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isFlag && !ctx.mediaRev);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.imgSrc && !ctx.mediaRev && !ctx.isFlag);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClassesContent());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.subtitle);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cta === "button");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cta === "link");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isFlag && ctx.mediaRev);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.imgSrc && ctx.mediaRev && !ctx.isFlag);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, SprkLinkDirective], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "subtitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "cta", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "ctaText", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "buttonHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "buttonLinkAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "ctaLinkHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "ctaLinkAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "additionalClassesContent", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkPromoComponent.prototype, "isFlag", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "additionalClassesFlagLink", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "flagLinkAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "imgSrc", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "imgAlt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "imgHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "imgLinkAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "additionalClassesImgLink", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkPromoComponent.prototype, "mediaRev", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SprkPromoComponent.prototype, "hasBorder", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkPromoComponent.prototype, "idString", void 0);

let SprkPromoModule = class SprkPromoModule {
};
SprkPromoModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkPromoModule });
SprkPromoModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkPromoModule_Factory(t) { return new (t || SprkPromoModule)(); }, imports: [[
            CommonModule,
            SprkIconModule,
            SprkLinkDirectiveModule
        ]] });

let SprkTabbedNavigationComponent = class SprkTabbedNavigationComponent {
    /**
     * @ignore
     */
    constructor(ref) {
        this.ref = ref;
        /**
         * @ignore
         */
        this.componentID = uniqueId();
        /**
         * @ignore
         */
        this.activeClass = 'sprk-c-Tabs__button--active';
        this.ariaOrientation(window.innerWidth, this.ref.nativeElement);
    }
    /**
     * @ignore
     */
    onClick($event) {
        if ($event.target.classList.contains('sprk-c-Tabs__button')) {
            const activePanel = this.panels.find(panel => {
                return (panel.ref.nativeElement.id ===
                    $event.target.getAttribute('aria-controls'));
            });
            this.resetTabs(this.tabs.map(tab => tab.ref.nativeElement), this.panels.map(panel => panel.ref.nativeElement), this.activeClass);
            this.setActiveTab($event.target, activePanel.ref.nativeElement, this.activeClass);
        }
    }
    /**
     * @ignore
     */
    onResize() {
        this.ariaOrientation(window.innerWidth, this.ref.nativeElement);
    }
    /**
     * @ignore
     */
    onKeydown($event) {
        const isTabsButton = $event.target.classList.contains('sprk-c-Tabs__button');
        if (!isTabsButton) {
            return;
        }
        const keys = {
            end: 35,
            home: 36,
            left: 37,
            up: 38,
            right: 39,
            down: 40,
            tab: 9
        };
        const tabElements = this.tabs.map(tab => tab.ref.nativeElement);
        const panelElements = this.panels.map(panel => panel.ref.nativeElement);
        if ($event.keyCode === keys.left || $event.keyCode === keys.up) {
            this.incrementTab(tabElements, panelElements, this.activeClass, -1);
        }
        else if ($event.keyCode === keys.right || $event.keyCode === keys.down) {
            this.incrementTab(tabElements, panelElements, this.activeClass, 1);
        }
        else if ($event.keyCode === keys.tab) {
            if ($event.target.getAttribute('role') === 'tab') {
                $event.preventDefault();
                panelElements[this.getActiveTabIndex(tabElements, this.activeClass)].focus();
            }
        }
        else if ($event.keyCode === keys.home) {
            this.goToEndTab(tabElements, panelElements, this.activeClass, -1);
        }
        else if ($event.keyCode === keys.end) {
            this.goToEndTab(tabElements, panelElements, this.activeClass, 1);
        }
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Tabs'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    ngAfterContentInit() {
        let tabIDs = [];
        let panelIDs = [];
        if (this.tabs && this.panels) {
            this.tabs.forEach((tab, index) => {
                const tabID = `tabbed-navigation-${this.componentID}-tab-${index}`;
                const panelID = `tabbed-navigation-${this.componentID}-panel-${index}`;
                tab.ref.nativeElement.setAttribute('id', tabID);
                tab.ref.nativeElement.setAttribute('aria-controls', panelID);
                tabIDs.push(tabID);
                panelIDs.push(panelID);
            });
            tabIDs = tabIDs.reverse();
            panelIDs = panelIDs.reverse();
            this.panels.forEach(panel => {
                panel.ref.nativeElement.setAttribute('id', panelIDs.pop());
                panel.ref.nativeElement.setAttribute('aria-labelledby', tabIDs.pop());
            });
        }
    }
    /**
     * @ignore
     */
    ariaOrientation(width, element) {
        // switch aria-orientation on mobile (based on _tabs.scss breakpoint)
        if (width <= 736) {
            element.setAttribute('aria-orientation', 'vertical');
        }
        else {
            element.setAttribute('aria-orientation', 'horizontal');
        }
    }
    /**
     * @ignore
     */
    getActiveTabIndex(tabs, activeClass) {
        let activeIndex = null;
        tabs.forEach((tab, index) => {
            if (tab.classList.contains(activeClass || 'sprk-c-Tabs__button--active')) {
                activeIndex = index;
            }
        });
        return activeIndex;
    }
    /**
     * @ignore
     */
    resetTabs(tabs, tabpanels, activeClass) {
        tabs.forEach(tab => {
            tab.classList.remove(activeClass || 'sprk-c-Tabs__button--active');
            tab.removeAttribute('tabindex');
            tab.setAttribute('aria-selected', 'false');
            tabpanels.forEach(panel => {
                panel.classList.add('sprk-u-HideWhenJs');
            });
        });
    }
    /**
     * @ignore
     */
    incrementTab(tabs, tabpanels, activeClass, direction) {
        let activeIndex = this.getActiveTabIndex(tabs, activeClass);
        let foundNewIndex = false;
        // Start looking for the next available tab
        while (foundNewIndex === false) {
            // if the next tab would be off the left of the tabstrip
            if (activeIndex + direction < 0) {
                // loop to the end and keep looking
                activeIndex = tabs.length;
                // if the next tab would be off the right of the tabstrip
            }
            else if (activeIndex + direction >= tabs.length) {
                // loop back to the beginning and keep looking
                activeIndex = -1;
                // If the next tab is not disabled
            }
            else if (!tabs[activeIndex + direction].hasAttribute('disabled')) {
                // move to the next tab
                activeIndex += direction;
                // stop looking for the correct tab
                foundNewIndex = true;
            }
            else {
                // move to the next tab and keep looking
                activeIndex += direction;
            }
        }
        // deselect all tabs
        this.resetTabs(tabs, tabpanels, activeClass);
        // select the correct tab
        this.setActiveTab(tabs[activeIndex], tabpanels[activeIndex], activeClass);
    }
    goToEndTab(tabs, tabpanels, activeClass, direction) {
        let newActiveIndex;
        // if direction is positive, go to the right-most tab
        if (direction > 0) {
            newActiveIndex = tabs.length - 1;
            // else go to the left-most tab
        }
        else {
            newActiveIndex = 0;
        }
        let foundNewIndex = false;
        // step through the tabs until we find one that isn't disabled
        while (foundNewIndex === false) {
            // if this tab is not disabled
            if (!tabs[newActiveIndex].hasAttribute('disabled')) {
                // stop looking for the correct tab
                foundNewIndex = true;
                // else step one tab away from the end and keep looking
            }
            else {
                newActiveIndex -= direction;
            }
        }
        this.resetTabs(tabs, tabpanels, activeClass);
        this.setActiveTab(tabs[newActiveIndex], tabpanels[newActiveIndex], activeClass);
    }
    /**
     * @ignore
     */
    setActiveTab(tab, tabpanel, activeClass) {
        tab.classList.add(activeClass || 'sprk-c-Tabs__button--active');
        tab.setAttribute('tabindex', '0');
        tab.setAttribute('aria-selected', 'true');
        if (tabpanel) {
            tabpanel.classList.remove('sprk-u-HideWhenJs');
        }
        tab.focus();
    }
};
SprkTabbedNavigationComponent.ɵfac = function SprkTabbedNavigationComponent_Factory(t) { return new (t || SprkTabbedNavigationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SprkTabbedNavigationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkTabbedNavigationComponent, selectors: [["sprk-tabbed-navigation"]], contentQueries: function SprkTabbedNavigationComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, SprkTabbedNavigationTabDirective, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, SprkTabbedNavigationPanelDirective, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panels = _t);
    } }, hostBindings: function SprkTabbedNavigationComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SprkTabbedNavigationComponent_click_HostBindingHandler($event) { return ctx.onClick($event); })("resize", function SprkTabbedNavigationComponent_resize_HostBindingHandler() { return ctx.onResize(); }, false, ɵngcc0.ɵɵresolveWindow)("keydown", function SprkTabbedNavigationComponent_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); });
    } }, inputs: { additionalClasses: "additionalClasses", idString: "idString" }, ngContentSelectors: _c26, decls: 5, vars: 2, consts: [[3, "ngClass"], ["role", "tablist", 1, "sprk-c-Tabs__buttons"]], template: function SprkTabbedNavigationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c25);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(3, 1);
        ɵngcc0.ɵɵprojection(4, 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
SprkTabbedNavigationComponent.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTabbedNavigationComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTabbedNavigationComponent.prototype, "idString", void 0);
__decorate([
    ContentChildren(SprkTabbedNavigationTabDirective),
    __metadata("design:type", QueryList)
], SprkTabbedNavigationComponent.prototype, "tabs", void 0);
__decorate([
    ContentChildren(SprkTabbedNavigationPanelDirective),
    __metadata("design:type", QueryList)
], SprkTabbedNavigationComponent.prototype, "panels", void 0);
__decorate([
    HostListener('click', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkTabbedNavigationComponent.prototype, "onClick", null);
__decorate([
    HostListener('window:resize'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], SprkTabbedNavigationComponent.prototype, "onResize", null);
__decorate([
    HostListener('keydown', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SprkTabbedNavigationComponent.prototype, "onKeydown", null);
SprkTabbedNavigationComponent = __decorate([ __metadata("design:paramtypes", [ElementRef])
], SprkTabbedNavigationComponent);

let SprkTabbedNavigationModule = class SprkTabbedNavigationModule {
};
SprkTabbedNavigationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTabbedNavigationModule });
SprkTabbedNavigationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTabbedNavigationModule_Factory(t) { return new (t || SprkTabbedNavigationModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkTableComponent = class SprkTableComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-b-TableContainer'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getTableClasses() {
        const classArray = [
            'sprk-b-Table',
            'sprk-b-Table--spacing-medium',
        ];
        if (this.additionalTableClasses) {
            this.additionalTableClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkTableComponent.ɵfac = function SprkTableComponent_Factory(t) { return new (t || SprkTableComponent)(); };
SprkTableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkTableComponent, selectors: [["sprk-table"]], inputs: { additionalClasses: "additionalClasses", additionalTableClasses: "additionalTableClasses", idString: "idString" }, ngContentSelectors: _c12, decls: 3, vars: 3, consts: [[3, "ngClass"]], template: function SprkTableComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "table", 0);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getTableClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTableComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTableComponent.prototype, "additionalTableClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTableComponent.prototype, "idString", void 0);

let SprkTableModule = class SprkTableModule {
};
SprkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTableModule });
SprkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTableModule_Factory(t) { return new (t || SprkTableModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkButtonDirective = class SprkButtonDirective {
    /**
     * @ignore
     */
    constructor(ref, renderer) {
        this.ref = ref;
        this.renderer = renderer;
        /**
         * Will show a spinner inside the
         * button if set to `true`.
         */
        this.isSpinning = false;
        /**
         * Optional string value that is
         * set for the `aria-label`
         * when `isSpinning` is `true`.
         */
        this.spinningAriaLabel = 'Loading';
        /**
         *  Determines the coresponding button style.
         */
        this.variant = 'primary';
        /**
         * @ignore
         */
        this.setSpinning = (element) => {
            const el = element;
            const width = element.offsetWidth;
            const ariaLabel = this.spinningAriaLabel;
            let spinnerClass = 'sprk-c-Spinner sprk-c-Spinner--circle';
            if (el.classList.contains('sprk-c-Button--secondary') ||
                this.variant === 'secondary') {
                spinnerClass += ' sprk-c-Spinner--dark';
            }
            this.renderer.setAttribute(el, 'data-sprk-spinner-text', el.textContent);
            this.renderer.setAttribute(el, 'aria-label', ariaLabel);
            el.innerHTML = `<div class="${spinnerClass}"></div>`;
            el.setAttribute('data-sprk-has-spinner', 'true');
            this.renderer.setAttribute(el, 'data-sprk-has-spinner', 'true');
            this.renderer.setAttribute(el, 'style', `width: ${width}px`);
        };
    }
    ngOnInit() {
        if (this.variant === 'secondary') {
            this.renderer.addClass(this.ref.nativeElement, 'sprk-c-Button--secondary');
        }
        if (this.variant === 'tertiary') {
            this.renderer.addClass(this.ref.nativeElement, 'sprk-c-Button--tertiary');
        }
    }
    /**
     * Add spinner only after view has loaded.
     * This is to allow time for the text
     * content of the button to load so that
     * the width value accounts for that text.
     */
    ngAfterViewInit() {
        if (this.isSpinning) {
            this.setSpinning(this.ref.nativeElement);
        }
    }
    ngOnChanges(changes) {
        if (this.isSpinning && !changes['isSpinning'].isFirstChange()) {
            this.setSpinning(this.ref.nativeElement);
        }
    }
};
SprkButtonDirective.ɵfac = function SprkButtonDirective_Factory(t) { return new (t || SprkButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
SprkButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkButtonDirective, selectors: [["", "sprkButton", ""]], hostVars: 4, hostBindings: function SprkButtonDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("data-id", ctx.idString)("data-analytics", ctx.analyticsString);
        ɵngcc0.ɵɵclassProp("sprk-c-Button", true);
    } }, inputs: { isSpinning: "isSpinning", spinningAriaLabel: "spinningAriaLabel", variant: "variant", idString: "idString", analyticsString: "analyticsString" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
SprkButtonDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkButtonDirective.prototype, "isSpinning", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkButtonDirective.prototype, "spinningAriaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkButtonDirective.prototype, "variant", void 0);
__decorate([
    HostBinding('class.sprk-c-Button'),
    __metadata("design:type", Object)
], SprkButtonDirective.prototype, "true", void 0);
__decorate([
    HostBinding('attr.data-id'),
    Input(),
    __metadata("design:type", String)
], SprkButtonDirective.prototype, "idString", void 0);
__decorate([
    HostBinding('attr.data-analytics'),
    Input(),
    __metadata("design:type", String)
], SprkButtonDirective.prototype, "analyticsString", void 0);
SprkButtonDirective = __decorate([ __metadata("design:paramtypes", [ElementRef, Renderer2])
], SprkButtonDirective);

let SprkButtonModule = class SprkButtonModule {
};
SprkButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkButtonModule });
SprkButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkButtonModule_Factory(t) { return new (t || SprkButtonModule)(); }, imports: [[CommonModule, RouterModule]] });

let SprkAwardComponent = class SprkAwardComponent {
    /**
     * @ignore
     */
    getClasses() {
        const classArray = [
            'sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack__item sprk-o-Stack__item--center-column'
        ];
        // Handle the choice of item split
        // breakpoint by adding CSS class
        switch (this.splitAt) {
            case 'tiny':
                classArray.push('sprk-o-Stack--split@xs');
                break;
            case 'small':
                classArray.push('sprk-o-Stack--split@s');
                break;
            case 'medium':
                classArray.push('sprk-o-Stack--split@m');
                break;
            case 'large':
                classArray.push('sprk-o-Stack--split@l');
                break;
            case 'huge':
                classArray.push('sprk-o-Stack--split@xl');
                break;
            default:
                break;
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getImgContainerClasses() {
        const classArray = [
            'sprk-o-Stack__item'
        ];
        // Handle the choice of item split
        // breakpoint by adding CSS class
        switch (this.splitAt) {
            case 'tiny':
                classArray.push('sprk-o-Stack__item--flex@xs');
                break;
            case 'small':
                classArray.push('sprk-o-Stack__item--flex@s');
                break;
            case 'medium':
                classArray.push('sprk-o-Stack__item--flex@m');
                break;
            case 'large':
                classArray.push('sprk-o-Stack__item--flex@l');
                break;
            case 'huge':
                classArray.push('sprk-o-Stack__item--flex@xl');
                break;
            default:
                break;
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getClassesImgOne() {
        const classArray = [
            'sprk-o-Stack__item sprk-o-Stack__item--center-column'
        ];
        if (this.additionalClassesImgOne) {
            this.additionalClassesImgOne.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getClassesImgTwo() {
        const classArray = [
            'sprk-o-Stack__item sprk-o-Stack__item--center-column'
        ];
        if (this.additionalClassesImgTwo) {
            this.additionalClassesImgTwo.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkAwardComponent.ɵfac = function SprkAwardComponent_Factory(t) { return new (t || SprkAwardComponent)(); };
SprkAwardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkAwardComponent, selectors: [["sprk-award"]], inputs: { splitAt: "splitAt", imgOneAlt: "imgOneAlt", imgOneHref: "imgOneHref", imgTwoHref: "imgTwoHref", imgTwoAlt: "imgTwoAlt", imgOneSrc: "imgOneSrc", imgTwoSrc: "imgTwoSrc", analyticsStringImgOne: "analyticsStringImgOne", analyticsStringImgTwo: "analyticsStringImgTwo", analyticsStringDisclaimer: "analyticsStringDisclaimer", additionalClasses: "additionalClasses", additionalClassesImgOne: "additionalClassesImgOne", additionalClassesImgTwo: "additionalClassesImgTwo", title: "title", disclaimerTitle: "disclaimerTitle", disclaimerCopy: "disclaimerCopy", disclaimer: "disclaimer", idString: "idString" }, decls: 11, vars: 17, consts: [["itemSpacing", "medium", 3, "additionalClasses"], ["sprkStackItem", "", 1, "sprk-o-Stack__item", "sprk-b-TypeDisplayFive", "sprk-b-Measure", "sprk-b-Measure--narrow", "sprk-u-TextAlign--center", "sprk-o-Stack__item--center-column"], ["sprkStackItem", "", 3, "ngClass"], [3, "ngClass"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-o-Stack", 3, "analyticsString"], [3, "ngClass", "alt", "src"], ["sprkStackItem", "", "additionalClasses", "sprk-o-Stack__item--start-column", "toggleType", "base", 3, "title", "analyticsString", 4, "ngIf"], ["sprkStackItem", "", "additionalClasses", "sprk-o-Stack__item--start-column", "toggleType", "base", 3, "title", "analyticsString"], [1, "sprk-b-TypeBodyFour"]], template: function SprkAwardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "sprk-stack", 0);
        ɵngcc0.ɵɵelementStart(1, "h2", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "a", 4);
        ɵngcc0.ɵɵelement(6, "img", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 3);
        ɵngcc0.ɵɵelementStart(8, "a", 4);
        ɵngcc0.ɵɵelement(9, "img", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, SprkAwardComponent_sprk_toggle_10_Template, 3, 3, "sprk-toggle", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("additionalClasses", ctx.additionalClasses);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.title, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getImgContainerClasses());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("analyticsString", ctx.analyticsStringImgOne);
        ɵngcc0.ɵɵattribute("href", ctx.imgOneHref, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("alt", ctx.imgOneAlt);
        ɵngcc0.ɵɵpropertyInterpolate("src", ctx.imgOneSrc, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClassesImgOne());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getImgContainerClasses());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("analyticsString", ctx.analyticsStringImgTwo);
        ɵngcc0.ɵɵattribute("href", ctx.imgTwoHref, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("alt", ctx.imgTwoAlt);
        ɵngcc0.ɵɵpropertyInterpolate("src", ctx.imgTwoSrc, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClassesImgTwo());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.disclaimer !== "false");
    } }, directives: [SprkStackComponent,
        SprkStackItemDirective, ɵngcc1.NgClass, SprkLinkDirective, ɵngcc1.NgIf, SprkToggleComponent], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "splitAt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "imgOneAlt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "imgOneHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "imgTwoHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "imgTwoAlt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "imgOneSrc", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "imgTwoSrc", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "analyticsStringImgOne", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "analyticsStringImgTwo", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "analyticsStringDisclaimer", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "additionalClassesImgOne", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "additionalClassesImgTwo", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "disclaimerTitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "disclaimerCopy", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "disclaimer", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkAwardComponent.prototype, "idString", void 0);

let SprkAwardModule = class SprkAwardModule {
};
SprkAwardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkAwardModule });
SprkAwardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkAwardModule_Factory(t) { return new (t || SprkAwardModule)(); }, imports: [[
            CommonModule,
            SprkStackModule,
            SprkStackItemModule,
            SprkLinkDirectiveModule,
            SprkToggleModule
        ]] });

let SprkCardComponent = class SprkCardComponent {
    constructor() {
        /**
         * The type of Card variant to render.
         * The available values are `base`, `teaser`, and `teaserHeading`.
         */
        this.cardType = 'base';
        /**
         * Determines which type of call to action is rendered.
         * The available values are `link` and `button`.
         */
        this.ctaType = 'link';
    }
    /**
     * @ignore
     */
    getClassesCta() {
        const ctaClassArray = [];
        if (this.ctaType === 'button') {
            ctaClassArray.push('sprk-c-Button');
        }
        else {
            ctaClassArray.push('sprk-b-Link');
            if (this.ctaIcon) {
                ctaClassArray.push('sprk-b-Link--simple');
                ctaClassArray.push('sprk-b-Link--has-icon');
            }
        }
        if (this.additionalCtaClasses) {
            this.additionalCtaClasses.split(' ').forEach(className => {
                ctaClassArray.push(className);
            });
        }
        return ctaClassArray.join(' ');
    }
    /**
     * @ignore
     */
    getClassesCard() {
        const classArray = ['sprk-c-Card', 'sprk-o-Stack'];
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkCardComponent.ɵfac = function SprkCardComponent_Factory(t) { return new (t || SprkCardComponent)(); };
SprkCardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkCardComponent, selectors: [["sprk-card"]], inputs: { cardType: "cardType", ctaType: "ctaType", body: "body", media: "media", additionalClassesIcon: "additionalClassesIcon", title: "title", imgSrc: "imgSrc", imgAlt: "imgAlt", iconType: "iconType", iconHref: "iconHref", imgHref: "imgHref", ctaIcon: "ctaIcon", ctaText: "ctaText", ctaAnalytics: "ctaAnalytics", imgLinkAnalytics: "imgLinkAnalytics", iconLinkAnalytics: "iconLinkAnalytics", ctaHref: "ctaHref", additionalClasses: "additionalClasses", additionalCtaClasses: "additionalCtaClasses", idString: "idString" }, ngContentSelectors: _c12, decls: 3, vars: 3, consts: [[3, "ngClass", 4, "ngIf"], [3, "ngClass"], ["sprkLink", "", "variant", "unstyled", "class", "sprk-o-Stack__item", 3, "href", "analyticsString", 4, "ngIf"], ["sprkLink", "", "variant", "unstyled", "class", "sprk-o-Stack__item sprk-u-AbsoluteCenter", 3, "analyticsString", 4, "ngIf"], [1, "sprk-b-TypeDisplayFive", "sprk-o-Stack__item"], [1, "sprk-b-TypeBodyTwo", "sprk-o-Stack__item"], [1, "sprk-o-Stack__item"], ["sprkLink", "", "variant", "unstyled", 3, "ngClass", "analyticsString"], [3, "iconType", 4, "ngIf"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-o-Stack__item", 3, "href", "analyticsString"], [1, "sprk-c-Card__media"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-o-Stack__item", "sprk-u-AbsoluteCenter", 3, "analyticsString"], [3, "iconType", "additionalClasses"], [3, "iconType"], [1, "sprk-o-Stack__item", "sprk-c-Card__content", "sprk-b-TypeDisplayFive"], [1, "sprk-o-Stack__item", "sprk-c-Card__content", "sprk-o-Stack", "sprk-o-Stack--medium"], ["sprkLink", "", "variant", "unstyled", "class", "sprk-o-Stack__item", 3, "analyticsString", 4, "ngIf"], ["sprkLink", "", "variant", "unstyled", "class", "sprk-o-Stack__item sprk-o-Stack__item--center", 3, "analyticsString", 4, "ngIf"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-o-Stack__item", 3, "analyticsString"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-o-Stack__item", "sprk-o-Stack__item--center", 3, "analyticsString"]], template: function SprkCardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, SprkCardComponent_div_0_Template, 12, 14, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SprkCardComponent_div_1_Template, 2, 2, "div", 0);
        ɵngcc0.ɵɵtemplate(2, SprkCardComponent_div_2_Template, 12, 11, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.cardType === "teaser");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cardType === "base");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.cardType === "teaserHeading");
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, SprkLinkDirective,
        SprkIconComponent], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "cardType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "body", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "media", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "additionalClassesIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "imgSrc", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "imgAlt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "iconType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "iconHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "imgHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaIcon", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaText", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "imgLinkAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "iconLinkAnalytics", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "ctaHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "additionalCtaClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkCardComponent.prototype, "idString", void 0);

let SprkCardModule = class SprkCardModule {
};
SprkCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkCardModule });
SprkCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkCardModule_Factory(t) { return new (t || SprkCardModule)(); }, imports: [[CommonModule, SprkIconModule, SprkLinkDirectiveModule]] });

let SprkDictionaryComponent = class SprkDictionaryComponent {
    constructor() {
        /**
         * The collection of key-value pairs to be rendered
         * into the component.
         */
        this.data = {};
        /**
         * Determines the variant of the dictionary component to render.
         * The only available option is `striped`.
         * Supplying no value will cause the base variant to be used.
         */
        this.dictionaryType = 'base';
        /**
         * @ignore
         * Used to grab all the keys from
         * objects.
         */
        this.objectKeys = Object.keys;
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-Dictionary'];
        if (this.dictionaryType === 'striped') {
            classArray.push('sprk-c-Dictionary--striped');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkDictionaryComponent.ɵfac = function SprkDictionaryComponent_Factory(t) { return new (t || SprkDictionaryComponent)(); };
SprkDictionaryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkDictionaryComponent, selectors: [["sprk-dictionary"]], inputs: { data: "data", dictionaryType: "dictionaryType", additionalClasses: "additionalClasses", idString: "idString" }, decls: 3, vars: 3, consts: [[3, "ngClass"], [1, "sprk-c-Dictionary__keyvaluepairs"], ["class", "sprk-c-Dictionary__keyvaluepair", 4, "ngFor", "ngForOf"], [1, "sprk-c-Dictionary__keyvaluepair"], [1, "sprk-c-Dictionary__key", "sprk-b-Label", "sprk-b-Label--no-input"], [1, "sprk-c-Dictionary__value"]], template: function SprkDictionaryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "dl", 1);
        ɵngcc0.ɵɵtemplate(2, SprkDictionaryComponent_div_2_Template, 5, 2, "div", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.objectKeys(ctx.data));
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkDictionaryComponent.prototype, "data", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkDictionaryComponent.prototype, "dictionaryType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDictionaryComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkDictionaryComponent.prototype, "idString", void 0);

let SprkDictionaryModule = class SprkDictionaryModule {
};
SprkDictionaryModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkDictionaryModule });
SprkDictionaryModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkDictionaryModule_Factory(t) { return new (t || SprkDictionaryModule)(); }, imports: [[CommonModule]] });

let SprkHighlightBoardComponent = class SprkHighlightBoardComponent {
    constructor() {
        /**
         * @ignore
         */
        this.centerBtns = '';
    }
    ngOnInit() {
        if (!this.ctaText && this.ctaText2) {
            console.warn(`
        Spark Design System Warning - <sprk-highlight-board> Component:
        A secondary call-to-action (CTA)
        should not exist without a primary CTA.
        If there is only one CTA, it must be set on
        ctaText and ctaHref.
      `);
        }
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-c-HighlightBoard'];
        switch (this.type) {
            case 'noImage':
                this.centerBtns = 'sprk-o-Stack--center-row';
                break;
            case 'stacked':
                this.centerBtns = 'sprk-o-Stack--center-row';
                classArray.push('sprk-c-HighlightBoard--has-image sprk-c-HighlightBoard--stacked');
                break;
            default:
                classArray.push('sprk-c-HighlightBoard--has-image');
                break;
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
};
SprkHighlightBoardComponent.ɵfac = function SprkHighlightBoardComponent_Factory(t) { return new (t || SprkHighlightBoardComponent)(); };
SprkHighlightBoardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkHighlightBoardComponent, selectors: [["sprk-highlight-board"]], inputs: { heading: "heading", imgSrc: "imgSrc", imgAlt: "imgAlt", ctaText: "ctaText", ctaHref: "ctaHref", ctaText2: "ctaText2", ctaHref2: "ctaHref2", analyticsStringCta: "analyticsStringCta", analyticsStringCta2: "analyticsStringCta2", additionalClasses: "additionalClasses", type: "type", idString: "idString" }, decls: 6, vars: 9, consts: [[3, "ngClass"], ["class", "sprk-c-HighlightBoard__image", 3, "src", "alt", 4, "ngIf"], ["sprkStackItem", "", "itemSpacing", "large", "additionalClasses", "sprk-c-HighlightBoard__content"], ["sprkStackItem", "", 3, "ngClass"], ["sprkStackItem", "", "itemSpacing", "medium", "splitAt", "tiny", 3, "additionalClasses", 4, "ngIf"], [1, "sprk-c-HighlightBoard__image", 3, "src", "alt"], ["sprkStackItem", "", "itemSpacing", "medium", "splitAt", "tiny", 3, "additionalClasses"], ["sprkStackItem", "", 1, "sprk-c-HighlightBoard__cta"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-c-Button", "sprk-c-Button--primary", "sprk-c-Button--full@sm", 3, "analyticsString"], ["sprkStackItem", "", "class", "sprk-c-HighlightBoard__cta", 4, "ngIf"], ["sprkLink", "", "variant", "unstyled", 1, "sprk-c-Button", "sprk-c-Button--secondary", "sprk-c-Button--full@sm", 3, "analyticsString"]], template: function SprkHighlightBoardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SprkHighlightBoardComponent_img_1_Template, 1, 2, "img", 1);
        ɵngcc0.ɵɵelementStart(2, "sprk-stack", 2);
        ɵngcc0.ɵɵelementStart(3, "h1", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, SprkHighlightBoardComponent_sprk_stack_5_Template, 5, 5, "sprk-stack", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.type !== "noImage");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(6, _c28, ctx.type === "noImage", ctx.type !== "noImage"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.heading, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.ctaText);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, SprkStackComponent,
        SprkStackItemDirective,
        SprkLinkDirective], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "heading", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "imgSrc", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "imgAlt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "ctaText", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "ctaHref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "ctaText2", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "ctaHref2", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "analyticsStringCta", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "analyticsStringCta2", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "type", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHighlightBoardComponent.prototype, "idString", void 0);

let SprkHighlightBoardModule = class SprkHighlightBoardModule {
};
SprkHighlightBoardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkHighlightBoardModule });
SprkHighlightBoardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkHighlightBoardModule_Factory(t) { return new (t || SprkHighlightBoardModule)(); }, imports: [[
            CommonModule,
            SprkStackModule,
            SprkStackItemModule,
            SprkLinkDirectiveModule
        ]] });

let SprkBoxDirective = class SprkBoxDirective {
    /**
     * @ignore
     */
    constructor() { }
    get flush() {
        return this.spacing === 'flush';
    }
    get tiny() {
        return this.spacing === 'tiny';
    }
    get small() {
        return this.spacing === 'small';
    }
    get medium() {
        return this.spacing === 'medium';
    }
    get large() {
        return this.spacing === 'large';
    }
    get huge() {
        return this.spacing === 'huge';
    }
    get insetShortTiny() {
        return this.spacing === 'insetShortTiny';
    }
    get insetShortSmall() {
        return this.spacing === 'insetShortSmall';
    }
    get insetShortMedium() {
        return this.spacing === 'insetShortMedium';
    }
    get insetShortLarge() {
        return this.spacing === 'insetShortLarge';
    }
    get insetShortHuge() {
        return this.spacing === 'insetShortHuge';
    }
    get insetTallTiny() {
        return this.spacing === 'insetTallTiny';
    }
    get insetTallSmall() {
        return this.spacing === 'insetTallSmall';
    }
    get insetTallMedium() {
        return this.spacing === 'insetTallMedium';
    }
    get insetTallLarge() {
        return this.spacing === 'insetTallLarge';
    }
    get insetTallHuge() {
        return this.spacing === 'insetTallHuge';
    }
    get miscA() {
        return this.spacing === 'miscA';
    }
    get miscB() {
        return this.spacing === 'miscB';
    }
    get miscC() {
        return this.spacing === 'miscC';
    }
    get miscD() {
        return this.spacing === 'miscD';
    }
};
SprkBoxDirective.ɵfac = function SprkBoxDirective_Factory(t) { return new (t || SprkBoxDirective)(); };
SprkBoxDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkBoxDirective, selectors: [["", "sprkBox", ""]], hostVars: 42, hostBindings: function SprkBoxDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("sprk-o-Box--flush", ctx.flush)("sprk-o-Box--tiny", ctx.tiny)("sprk-o-Box--small", ctx.small)("sprk-o-Box--medium", ctx.medium)("sprk-o-Box--large", ctx.large)("sprk-o-Box--huge", ctx.huge)("sprk-o-Box--inset-short-tiny", ctx.insetShortTiny)("sprk-o-Box--inset-short-small", ctx.insetShortSmall)("sprk-o-Box--inset-short-medium", ctx.insetShortMedium)("sprk-o-Box--inset-short-large", ctx.insetShortLarge)("sprk-o-Box--inset-short-huge", ctx.insetShortHuge)("sprk-o-Box--inset-tall-tiny", ctx.insetTallTiny)("sprk-o-Box--inset-tall-small", ctx.insetTallSmall)("sprk-o-Box--inset-tall-medium", ctx.insetTallMedium)("sprk-o-Box--inset-tall-large", ctx.insetTallLarge)("sprk-o-Box--inset-tall-huge", ctx.insetTallHuge)("sprk-o-Box--misc-a", ctx.miscA)("sprk-o-Box--misc-b", ctx.miscB)("sprk-o-Box--misc-c", ctx.miscC)("sprk-o-Box--misc-d", ctx.miscD)("sprk-o-Box", true);
    } }, inputs: { spacing: "spacing" } });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkBoxDirective.prototype, "spacing", void 0);
__decorate([
    HostBinding('class.sprk-o-Box'),
    __metadata("design:type", Object)
], SprkBoxDirective.prototype, "true", void 0);
__decorate([
    HostBinding('class.sprk-o-Box--flush'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "flush", null);
__decorate([
    HostBinding('class.sprk-o-Box--tiny'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "tiny", null);
__decorate([
    HostBinding('class.sprk-o-Box--small'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "small", null);
__decorate([
    HostBinding('class.sprk-o-Box--medium'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "medium", null);
__decorate([
    HostBinding('class.sprk-o-Box--large'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "large", null);
__decorate([
    HostBinding('class.sprk-o-Box--huge'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "huge", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-tiny'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortTiny", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-small'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortSmall", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-medium'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortMedium", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-large'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortLarge", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-short-huge'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetShortHuge", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-tiny'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallTiny", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-small'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallSmall", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-medium'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallMedium", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-large'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallLarge", null);
__decorate([
    HostBinding('class.sprk-o-Box--inset-tall-huge'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "insetTallHuge", null);
__decorate([
    HostBinding('class.sprk-o-Box--misc-a'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "miscA", null);
__decorate([
    HostBinding('class.sprk-o-Box--misc-b'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "miscB", null);
__decorate([
    HostBinding('class.sprk-o-Box--misc-c'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "miscC", null);
__decorate([
    HostBinding('class.sprk-o-Box--misc-d'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkBoxDirective.prototype, "miscD", null);
SprkBoxDirective = __decorate([ __metadata("design:paramtypes", [])
], SprkBoxDirective);

let SprkBoxModule = class SprkBoxModule {
};
SprkBoxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkBoxModule });
SprkBoxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkBoxModule_Factory(t) { return new (t || SprkBoxModule)(); }, imports: [[CommonModule]] });

let SprkTextDirective = class SprkTextDirective {
    /**
     * @ignore
     */
    constructor() { }
    get textOne() {
        return this.variant === 'bodyOne';
    }
    get textTwo() {
        return this.variant === 'bodyTwo';
    }
    get textThree() {
        return this.variant === 'bodyThree';
    }
    get textFour() {
        return this.variant === 'bodyFour';
    }
};
SprkTextDirective.ɵfac = function SprkTextDirective_Factory(t) { return new (t || SprkTextDirective)(); };
SprkTextDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkTextDirective, selectors: [["", "sprkText", ""]], hostVars: 8, hostBindings: function SprkTextDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("sprk-b-TypeBodyOne", ctx.textOne)("sprk-b-TypeBodyTwo", ctx.textTwo)("sprk-b-TypeBodyThree", ctx.textThree)("sprk-b-TypeBodyFour", ctx.textFour);
    } }, inputs: { variant: "variant" } });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkTextDirective.prototype, "variant", void 0);
__decorate([
    HostBinding('class.sprk-b-TypeBodyOne'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkTextDirective.prototype, "textOne", null);
__decorate([
    HostBinding('class.sprk-b-TypeBodyTwo'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkTextDirective.prototype, "textTwo", null);
__decorate([
    HostBinding('class.sprk-b-TypeBodyThree'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkTextDirective.prototype, "textThree", null);
__decorate([
    HostBinding('class.sprk-b-TypeBodyFour'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkTextDirective.prototype, "textFour", null);
SprkTextDirective = __decorate([ __metadata("design:paramtypes", [])
], SprkTextDirective);

let SprkTextModule = class SprkTextModule {
};
SprkTextModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkTextModule });
SprkTextModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkTextModule_Factory(t) { return new (t || SprkTextModule)(); } });

let SprkHeadingDirective = class SprkHeadingDirective {
    /**
     * @ignore
     */
    constructor() {
        this.isPageTitle = false;
    }
    get headingOne() {
        return this.variant === 'displayOne';
    }
    get headingTwo() {
        return this.variant === 'displayTwo';
    }
    get headingThree() {
        return this.variant === 'displayThree';
    }
    get headingFour() {
        return this.variant === 'displayFour';
    }
    get headingFive() {
        return this.variant === 'displayFive';
    }
    get headingSix() {
        return this.variant === 'displaySix';
    }
    get headingSeven() {
        return this.variant === 'displaySeven';
    }
};
SprkHeadingDirective.ɵfac = function SprkHeadingDirective_Factory(t) { return new (t || SprkHeadingDirective)(); };
SprkHeadingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkHeadingDirective, selectors: [["", "sprkHeading", ""]], hostVars: 16, hostBindings: function SprkHeadingDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("sprk-b-PageTitle", ctx.isPageTitle)("sprk-b-TypeDisplayOne", ctx.headingOne)("sprk-b-TypeDisplayTwo", ctx.headingTwo)("sprk-b-TypeDisplayThree", ctx.headingThree)("sprk-b-TypeDisplayFour", ctx.headingFour)("sprk-b-TypeDisplayFive", ctx.headingFive)("sprk-b-TypeDisplaySix", ctx.headingSix)("sprk-b-TypeDisplaySeven", ctx.headingSeven);
    } }, inputs: { isPageTitle: "isPageTitle", variant: "variant" } });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkHeadingDirective.prototype, "variant", void 0);
__decorate([
    HostBinding('class.sprk-b-TypeDisplayOne'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkHeadingDirective.prototype, "headingOne", null);
__decorate([
    HostBinding('class.sprk-b-TypeDisplayTwo'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkHeadingDirective.prototype, "headingTwo", null);
__decorate([
    HostBinding('class.sprk-b-TypeDisplayThree'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkHeadingDirective.prototype, "headingThree", null);
__decorate([
    HostBinding('class.sprk-b-TypeDisplayFour'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkHeadingDirective.prototype, "headingFour", null);
__decorate([
    HostBinding('class.sprk-b-TypeDisplayFive'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkHeadingDirective.prototype, "headingFive", null);
__decorate([
    HostBinding('class.sprk-b-TypeDisplaySix'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkHeadingDirective.prototype, "headingSix", null);
__decorate([
    HostBinding('class.sprk-b-TypeDisplaySeven'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SprkHeadingDirective.prototype, "headingSeven", null);
__decorate([
    HostBinding('class.sprk-b-PageTitle')
    /**
     * Value will be used to select
     * the heading style.
     */
    ,
    Input(),
    __metadata("design:type", Object)
], SprkHeadingDirective.prototype, "isPageTitle", void 0);
SprkHeadingDirective = __decorate([ __metadata("design:paramtypes", [])
], SprkHeadingDirective);

let SprkHeadingModule = class SprkHeadingModule {
};
SprkHeadingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkHeadingModule });
SprkHeadingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkHeadingModule_Factory(t) { return new (t || SprkHeadingModule)(); } });

let SprkFlagComponent = class SprkFlagComponent {
    constructor() {
        /**
         * The Flag component will use this to decide where
         * the media-slot is rendered in relation to the
         * body-slot. The default is the media-slot is on
         * the left of the body-slot. isReversed="true" places the
         * media-slot on the right of the body-slot.
         */
        this.isReversed = false;
        /**
         * The Flag component will use this to stack
         * the element at the `$sprk-flag-stacked-breakpoint`
         */
        this.isStacked = false;
        /**
         * Determines how much space between the
         * media and the body.
         */
        this.spacing = 'medium';
        /**
         * Determines the vertical alignment of content.
         */
        this.verticalAlignment = 'top';
    }
    /**
     * @ignore
     */
    getClasses() {
        const classArray = ['sprk-o-Flag'];
        if (this.spacing !== 'medium') {
            const spacingClasses = {
                flush: 'sprk-o-Flag--flush',
                tiny: 'sprk-o-Flag--tiny',
                small: 'sprk-o-Flag--small',
                large: 'sprk-o-Flag--large',
                huge: 'sprk-o-Flag--huge',
            };
            classArray.push(spacingClasses[this.spacing]);
        }
        if (this.verticalAlignment !== 'top') {
            const verticalAlignmentClasses = {
                middle: 'sprk-o-Flag--middle',
                bottom: 'sprk-o-Flag--bottom',
            };
            classArray.push(verticalAlignmentClasses[this.verticalAlignment]);
        }
        if (this.isReversed) {
            classArray.push('sprk-o-Flag--rev');
        }
        if (this.isStacked) {
            classArray.push('sprk-o-Flag--stacked');
        }
        if (this.additionalClasses) {
            this.additionalClasses.split(' ').forEach(className => {
                classArray.push(className);
            });
        }
        return classArray.join(' ');
    }
    /**
     * @ignore
     */
    getMediaClasses() {
        const mediaClassArray = ['sprk-o-Flag__figure'];
        if (this.additionalMediaClasses) {
            this.additionalMediaClasses.split(' ').forEach(className => {
                mediaClassArray.push(className);
            });
        }
        return mediaClassArray.join(' ');
    }
    /**
     * @ignore
     */
    getBodyClasses() {
        const bodyClassArray = ['sprk-o-Flag__body'];
        if (this.additionalBodyClasses) {
            this.additionalBodyClasses.split(' ').forEach(className => {
                bodyClassArray.push(className);
            });
        }
        return bodyClassArray.join(' ');
    }
};
SprkFlagComponent.ɵfac = function SprkFlagComponent_Factory(t) { return new (t || SprkFlagComponent)(); };
SprkFlagComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SprkFlagComponent, selectors: [["sprk-flag"]], inputs: { isReversed: "isReversed", isStacked: "isStacked", spacing: "spacing", verticalAlignment: "verticalAlignment", additionalClasses: "additionalClasses", additionalMediaClasses: "additionalMediaClasses", additionalBodyClasses: "additionalBodyClasses", idString: "idString" }, ngContentSelectors: _c30, decls: 5, vars: 4, consts: [[3, "ngClass"]], template: function SprkFlagComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c29);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 0);
        ɵngcc0.ɵɵprojection(4, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.getClasses());
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getMediaClasses());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.getBodyClasses());
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFlagComponent.prototype, "additionalClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFlagComponent.prototype, "additionalMediaClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFlagComponent.prototype, "additionalBodyClasses", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFlagComponent.prototype, "idString", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkFlagComponent.prototype, "isReversed", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SprkFlagComponent.prototype, "isStacked", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFlagComponent.prototype, "spacing", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SprkFlagComponent.prototype, "verticalAlignment", void 0);

let SprkFlagModule = class SprkFlagModule {
};
SprkFlagModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkFlagModule });
SprkFlagModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkFlagModule_Factory(t) { return new (t || SprkFlagModule)(); }, imports: [[CommonModule]] });

let SprkCenteredColumnDirective = class SprkCenteredColumnDirective {
};
SprkCenteredColumnDirective.ɵfac = function SprkCenteredColumnDirective_Factory(t) { return new (t || SprkCenteredColumnDirective)(); };
SprkCenteredColumnDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SprkCenteredColumnDirective, selectors: [["", "sprkCenteredColumn", ""]], hostVars: 3, hostBindings: function SprkCenteredColumnDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("data-id", ctx.idString);
        ɵngcc0.ɵɵclassProp("sprk-o-CenteredColumn", true);
    } }, inputs: { idString: "idString" } });
__decorate([
    HostBinding('class.sprk-o-CenteredColumn'),
    __metadata("design:type", Object)
], SprkCenteredColumnDirective.prototype, "true", void 0);
__decorate([
    HostBinding('attr.data-id'),
    Input(),
    __metadata("design:type", String)
], SprkCenteredColumnDirective.prototype, "idString", void 0);

let SprkCenteredColumnModule = class SprkCenteredColumnModule {
};
SprkCenteredColumnModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SprkCenteredColumnModule });
SprkCenteredColumnModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SprkCenteredColumnModule_Factory(t) { return new (t || SprkCenteredColumnModule)(); }, imports: [[CommonModule]] });

if (typeof window !== 'undefined') {
    window['sprk'] = { version: { angular: environment.version } } || {};
}
let SparkAngularModule = class SparkAngularModule {
};
SparkAngularModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SparkAngularModule });
SparkAngularModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SparkAngularModule_Factory(t) { return new (t || SparkAngularModule)(); }, imports: [SprkAlertModule,
        SprkAccordionModule,
        SprkAccordionItemModule,
        SprkAwardModule,
        SprkButtonModule,
        SprkCardModule,
        SprkDictionaryModule,
        SprkDividerModule,
        SprkDropdownModule,
        SprkLinkModule,
        SprkHighlightBoardModule,
        SprkModalModule,
        SprkOrderedListModule,
        SprkUnorderedListModule,
        SprkListItemModule,
        SparkInputContainerModule,
        SprkHugeInputContainerModule,
        SprkTextareaContainerModule,
        SprkIconInputContainerModule,
        SprkSelectionContainerModule,
        SprkSelectionItemContainerModule,
        SprkMastheadModule,
        SprkInputModule,
        SprkSelectionInputModule,
        SprkHelperTextModule,
        SprkLabelModule,
        SprkSelectionLabelModule,
        SprkFieldErrorModule,
        SprkFormatterPhoneNumberModule,
        SprkFormatterDateModule,
        SprkFormatterMonetaryModule,
        SprkFormatterSsnModule,
        SprkDatepickerModule,
        SprkPromoModule,
        SprkTableModule,
        SprkTableHeadModule,
        SprkTableGroupedColumnModule,
        SprkTableEmptyHeadingModule,
        SprkTableRowHeadingModule,
        SprkTabbedNavigationTabModule,
        SprkTabbedNavigationPanelModule,
        SprkPaginationModule,
        SprkStackModule,
        SprkStackItemModule,
        SprkToggleModule,
        SprkIconModule,
        SprkFooterModule,
        SprkTabbedNavigationModule,
        SprkBoxModule,
        SprkTextModule,
        SprkHeadingModule,
        SprkLinkDirectiveModule,
        SprkFlagModule,
        SprkCenteredColumnModule] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFormatterDateDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkFormatterDate]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFocus: [{
            type: HostListener,
            args: ['input', ['$event.target.value']]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkFormatterDateModule, { declarations: function () { return [SprkFormatterDateDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkFormatterDateDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFormatterDateModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkFormatterDateDirective],
                exports: [SprkFormatterDateDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFormatterMonetaryDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkFormatterMonetary]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onBlur: [{
            type: HostListener,
            args: ['blur', ['this.ref.nativeElement.value']]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkFormatterMonetaryModule, { declarations: function () { return [SprkFormatterMonetaryDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkFormatterMonetaryDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFormatterMonetaryModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkFormatterMonetaryDirective],
                exports: [SprkFormatterMonetaryDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFormatterPhoneNumberDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkFormatterPhoneNumber]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFocus: [{
            type: HostListener,
            args: ['input', ['$event.target.value']]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkFormatterPhoneNumberModule, { declarations: function () { return [SprkFormatterPhoneNumberDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkFormatterPhoneNumberDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFormatterPhoneNumberModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkFormatterPhoneNumberDirective],
                exports: [SprkFormatterPhoneNumberDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFormatterSsnDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkFormatterSsn]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFocus: [{
            type: HostListener,
            args: ['input', ['$event.target.value']]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkFormatterSsnModule, { declarations: function () { return [SprkFormatterSsnDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkFormatterSsnDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFormatterSsnModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkFormatterSsnDirective],
                exports: [SprkFormatterSsnDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkDatepickerDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkDatepicker]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { sprkDatePickerConfig: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkDatepickerModule, { declarations: function () { return [SprkDatepickerDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkDatepickerDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkDatepickerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkDatepickerDirective],
                exports: [SprkDatepickerDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFieldErrorDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkFieldError]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkFieldErrorModule, { declarations: function () { return [SprkFieldErrorDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkFieldErrorDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFieldErrorModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkFieldErrorDirective],
                exports: [SprkFieldErrorDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkHelperTextDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkHelperText]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkHelperTextModule, { declarations: function () { return [SprkHelperTextDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkHelperTextDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkHelperTextModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkHelperTextDirective],
                exports: [SprkHelperTextDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkInputDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkInput]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { OnChange: [{
            type: HostListener,
            args: ['change', ['$event']]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkInputModule, { declarations: function () { return [SprkInputDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkInputDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkInputModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkInputDirective],
                exports: [SprkInputDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkLabelDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkLabel]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkLabelModule, { declarations: function () { return [SprkLabelDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkLabelDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkLabelModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkLabelDirective],
                exports: [SprkLabelDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkSelectionInputDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkSelectionInput]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkSelectionInputModule, { declarations: function () { return [SprkSelectionInputDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkSelectionInputDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkSelectionInputModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkSelectionInputDirective],
                exports: [SprkSelectionInputDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkSelectionLabelDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkSelectionLabel]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkSelectionLabelModule, { declarations: function () { return [SprkSelectionLabelDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkSelectionLabelDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkSelectionLabelModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkSelectionLabelDirective],
                exports: [SprkSelectionLabelDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkStackItemDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkStackItem]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkStackItemModule, { declarations: function () { return [SprkStackItemDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkStackItemDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkStackItemModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkStackItemDirective],
                exports: [SprkStackItemDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableEmptyHeadingDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkTableEmptyHeading]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { additionalClasses: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTableEmptyHeadingModule, { declarations: function () { return [SprkTableEmptyHeadingDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkTableEmptyHeadingDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableEmptyHeadingModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkTableEmptyHeadingDirective],
                exports: [SprkTableEmptyHeadingDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableGroupedColumnDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkTableGroupedColumn]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { additionalClasses: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTableGroupedColumnModule, { declarations: function () { return [SprkTableGroupedColumnDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkTableGroupedColumnDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableGroupedColumnModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkTableGroupedColumnDirective],
                exports: [SprkTableGroupedColumnDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableHeadDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkTableHead]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { additionalClasses: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTableHeadModule, { declarations: function () { return [SprkTableHeadDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkTableHeadDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableHeadModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkTableHeadDirective],
                exports: [SprkTableHeadDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableRowHeadingDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkTableRowHeading]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { additionalClasses: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTableRowHeadingModule, { declarations: function () { return [SprkTableRowHeadingDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkTableRowHeadingDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableRowHeadingModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkTableRowHeadingDirective],
                exports: [SprkTableRowHeadingDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTabbedNavigationPanelDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkTabbedNavigationPanel]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { additionalClasses: [{
            type: Input
        }], defaultActive: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTabbedNavigationPanelModule, { declarations: function () { return [SprkTabbedNavigationPanelDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkTabbedNavigationPanelDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTabbedNavigationPanelModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkTabbedNavigationPanelDirective],
                exports: [SprkTabbedNavigationPanelDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTabbedNavigationTabDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkTabbedNavigationTab]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { additionalClasses: [{
            type: Input
        }], defaultActive: [{
            type: Input
        }], analyticsString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTabbedNavigationTabModule, { declarations: function () { return [SprkTabbedNavigationTabDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkTabbedNavigationTabDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTabbedNavigationTabModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkTabbedNavigationTabDirective],
                exports: [SprkTabbedNavigationTabDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SparkInputContainerComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-input-container',
                template: `
    <div [ngClass]="getClasses()">
      <ng-content select="[sprkLabel]"></ng-content>
      <ng-content select="[sprkInput]"></ng-content>
      <ng-content select="[sprk-select-icon]"></ng-content>
      <ng-content select="sprk-selection-item-container"></ng-content>
      <ng-content select="[sprkHelperText]"></ng-content>
      <ng-content select="[sprkFieldError]"></ng-content>
    </div>
  `
            }]
    }], function () { return []; }, { additionalClasses: [{
            type: Input
        }], iconContainerClasses: [{
            type: Input
        }], label: [{
            type: ContentChild,
            args: [SprkLabelDirective, { static: true }]
        }], input: [{
            type: ContentChild,
            args: [SprkInputDirective, { static: true }]
        }], error: [{
            type: ContentChild,
            args: [SprkFieldErrorDirective, { static: true }]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SparkInputContainerModule, { declarations: function () { return [SparkInputContainerComponent]; }, imports: function () { return [CommonModule, RouterModule, FormsModule, ReactiveFormsModule]; }, exports: function () { return [SparkInputContainerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SparkInputContainerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],
                declarations: [SparkInputContainerComponent],
                exports: [SparkInputContainerComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkHugeInputContainerComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-huge-input-container',
                template: `
    <div [ngClass]="getClasses()">
      <ng-content select="[sprkInput]"></ng-content>
      <ng-content select="[sprkLabel]"></ng-content>
      <ng-content select="[sprk-select-icon]"></ng-content>
      <ng-content select="sprk-selection-item-container"></ng-content>
      <ng-content select="[sprkHelperText]"></ng-content>
      <ng-content select="[sprkFieldError]"></ng-content>
    </div>
  `
            }]
    }], function () { return []; }, { additionalClasses: [{
            type: Input
        }], iconContainerClasses: [{
            type: Input
        }], label: [{
            type: ContentChild,
            args: [SprkLabelDirective, { static: true }]
        }], input: [{
            type: ContentChild,
            args: [SprkInputDirective, { static: true }]
        }], error: [{
            type: ContentChild,
            args: [SprkFieldErrorDirective, { static: true }]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkHugeInputContainerModule, { declarations: function () { return [SprkHugeInputContainerComponent]; }, imports: function () { return [CommonModule, RouterModule, FormsModule, ReactiveFormsModule]; }, exports: function () { return [SprkHugeInputContainerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkHugeInputContainerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],
                declarations: [SprkHugeInputContainerComponent],
                exports: [SprkHugeInputContainerComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTextareaContainerComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-textarea-container',
                template: `
    <div [ngClass]="getClasses()">
      <ng-content select="[sprkLabel]"></ng-content>
      <ng-content select="[sprkInput]"></ng-content>
      <ng-content select="sprk-selection-item-container"></ng-content>
      <ng-content select="[sprkHelperText]"></ng-content>
      <ng-content select="[sprkFieldError]"></ng-content>
    </div>
  `
            }]
    }], function () { return []; }, { additionalClasses: [{
            type: Input
        }], iconContainerClasses: [{
            type: Input
        }], label: [{
            type: ContentChild,
            args: [SprkLabelDirective, { static: true }]
        }], input: [{
            type: ContentChild,
            args: [SprkInputDirective, { static: true }]
        }], error: [{
            type: ContentChild,
            args: [SprkFieldErrorDirective, { static: true }]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTextareaContainerModule, { declarations: function () { return [SprkTextareaContainerComponent]; }, imports: function () { return [CommonModule, RouterModule, FormsModule, ReactiveFormsModule]; }, exports: function () { return [SprkTextareaContainerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTextareaContainerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],
                declarations: [SprkTextareaContainerComponent],
                exports: [SprkTextareaContainerComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkIconInputContainerComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-icon-input-container',
                template: `
    <div [ngClass]="getClasses()">
      <div [ngClass]="getIconContainerClasses()">
        <ng-content select="[sprkLabel]"></ng-content>
        <ng-content select="[sprk-input-icon]"></ng-content>
        <ng-content select="[sprkInput]"></ng-content>
      </div>
      <ng-content select="sprk-selection-item-container"></ng-content>
      <ng-content select="[sprkHelperText]"></ng-content>
      <ng-content select="[sprkFieldError]"></ng-content>
    </div>
  `
            }]
    }], function () { return []; }, { additionalClasses: [{
            type: Input
        }], iconContainerClasses: [{
            type: Input
        }], label: [{
            type: ContentChild,
            args: [SprkLabelDirective, { static: true }]
        }], input: [{
            type: ContentChild,
            args: [SprkInputDirective, { static: true }]
        }], error: [{
            type: ContentChild,
            args: [SprkFieldErrorDirective, { static: true }]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkIconInputContainerModule, { declarations: function () { return [SprkIconInputContainerComponent]; }, imports: function () { return [CommonModule, RouterModule, FormsModule, ReactiveFormsModule]; }, exports: function () { return [SprkIconInputContainerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkIconInputContainerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],
                declarations: [SprkIconInputContainerComponent],
                exports: [SprkIconInputContainerComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkSelectionItemContainerComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-selection-item-container',
                template: `
    <div [ngClass]="getClasses()">
      <ng-content select="[sprkSelectionInput]"></ng-content>
      <ng-content select="[sprkSelectionLabel]"></ng-content>
      <ng-content></ng-content>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, { additionalClasses: [{
            type: Input
        }], label: [{
            type: ContentChild,
            args: [SprkSelectionLabelDirective, { static: true }]
        }], input: [{
            type: ContentChild,
            args: [SprkSelectionInputDirective, { static: true }]
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkSelectionContainerComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-selection-container',
                template: `
    <div [ngClass]="getClasses()">
      <fieldset class="sprk-b-Fieldset">
        <legend class="sprk-b-Legend">
          <ng-content select="[sprkLabel]"></ng-content>
        </legend>
        <ng-content select="sprk-selection-item-container"></ng-content>
      </fieldset>
      <ng-content select="[sprkHelperText]"></ng-content>
      <ng-content select="[sprkFieldError]"></ng-content>
      <ng-content></ng-content>
    </div>
  `
            }]
    }], function () { return []; }, { additionalClasses: [{
            type: Input
        }], label: [{
            type: ContentChild,
            args: [SprkLabelDirective, { static: false }]
        }], error: [{
            type: ContentChild,
            args: [SprkFieldErrorDirective, { static: false }]
        }], selectionItems: [{
            type: ContentChildren,
            args: [SprkSelectionItemContainerComponent]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkSelectionContainerModule, { declarations: function () { return [SprkSelectionContainerComponent]; }, imports: function () { return [CommonModule, RouterModule, FormsModule, ReactiveFormsModule]; }, exports: function () { return [SprkSelectionContainerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkSelectionContainerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],
                declarations: [SprkSelectionContainerComponent],
                exports: [SprkSelectionContainerComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkSelectionItemContainerModule, { declarations: function () { return [SprkSelectionItemContainerComponent]; }, imports: function () { return [CommonModule, RouterModule, FormsModule, ReactiveFormsModule]; }, exports: function () { return [SprkSelectionItemContainerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkSelectionItemContainerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],
                declarations: [SprkSelectionItemContainerComponent],
                exports: [SprkSelectionItemContainerComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkIconComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-icon',
                template: `
    <svg [ngClass]="getClasses()" viewBox="0 0 64 64" [attr.data-id]="idString">
      <use [attr.xlink:href]="icon" />
    </svg>
  `,
                styles: [':host { line-height: 1; }']
            }]
    }], null, { iconType: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkIconModule, { declarations: function () { return [SprkIconComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkIconComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkIconModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkIconComponent],
                exports: [SprkIconComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkLinkDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkLink]'
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { variant: [{
            type: Input
        }], isDisabled: [{
            type: HostBinding,
            args: ['class.sprk-b-Link--disabled']
        }, {
            type: Input
        }], analyticsString: [{
            type: HostBinding,
            args: ['attr.data-analytics']
        }, {
            type: Input
        }], idString: [{
            type: HostBinding,
            args: ['attr.data-id']
        }, {
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkLinkDirectiveModule, { declarations: function () { return [SprkLinkDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SprkLinkDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkLinkDirectiveModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [SprkLinkDirective],
                exports: [SprkLinkDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkAccordionItemComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-accordion-item',
                template: `
    <li [ngClass]="getClasses()">
      <button
        sprkLink
        variant="unstyled"
        href="#"
        [attr.aria-controls]="accordion_controls_id"
        [attr.aria-expanded]="isOpen"
        class="sprk-c-Accordion__summary"
        [analyticsString]="analyticsString"
        [idString]="idString"
        (click)="toggleAccordion($event)"
      >
        <span [ngClass]="getHeadingClasses()">
          <sprk-icon
            [iconType]="leadingIcon"
            additionalClasses="sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-u-mrs"
            *ngIf="leadingIcon"
          ></sprk-icon>
          {{ title }}
        </span>

        <sprk-icon
          additionalClasses="sprk-c-Accordion__icon sprk-c-Icon--toggle sprk-c-Icon--l {{
            iconStateClass
          }}"
          [iconType]="currentIconType"
        ></sprk-icon>
      </button>

      <div [@toggleContent]="animState">
        <div
          [id]="accordion_controls_id"
          class="sprk-c-Accordion__content sprk-b-TypeBodyTwo"
        >
          <ng-content></ng-content>
        </div>
      </div>
    </li>
  `,
                animations: [toggleAnimations.toggleContent]
            }]
    }], function () { return []; }, { isOpen: [{
            type: Input
        }], iconTypeClosed: [{
            type: Input
        }], iconTypeOpen: [{
            type: Input
        }], title: [{
            type: Input
        }], analyticsString: [{
            type: Input
        }], idString: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], additionalHeadingClasses: [{
            type: Input
        }], isActive: [{
            type: Input
        }], leadingIcon: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkAccordionItemModule, { declarations: function () { return [SprkAccordionItemComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule,
        SprkLinkDirectiveModule]; }, exports: function () { return [SprkAccordionItemComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkAccordionItemModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],
                declarations: [SprkAccordionItemComponent],
                exports: [SprkAccordionItemComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkLinkComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-link',
                template: `
    <a
      (click)="handleClick($event)"
      [ngClass]="getClasses()"
      [href]="href"
      [attr.data-analytics]="analyticsString"
      [attr.target]="target"
      [attr.data-id]="idString"
      [attr.disabled]="isDisabled"
      [attr.aria-controls]="ariaControls"
      [attr.aria-label]="ariaLabel"
      [attr.aria-labelledby]="ariaLabelledby"
      [attr.aria-haspopup]="ariaHasPopUp"
      [attr.role]="role"
      [attr.id]="id"
      [attr.aria-current]="ariaCurrent"
      [attr.aria-expanded]="ariaExpanded"
      [attr.aria-hidden]="ariaHidden"
      [attr.aria-selected]="ariaSelected"
    >
      <ng-content></ng-content>
    </a>
  `
            }]
    }], function () { return [{ type: ɵngcc2.Router }]; }, { isExternal: [{
            type: Input
        }], href: [{
            type: Input
        }], linkType: [{
            type: Input
        }], idString: [{
            type: Input
        }], role: [{
            type: Input
        }], id: [{
            type: Input
        }], ariaControls: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaSelected: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], ariaCurrent: [{
            type: Input
        }], ariaExpanded: [{
            type: Input
        }], ariaHasPopUp: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], analyticsString: [{
            type: Input
        }], target: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], isDisabled: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkLinkModule, { declarations: function () { return [SprkLinkComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkLinkComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkLinkModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkLinkComponent],
                exports: [SprkLinkComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkAccordionComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-accordion',
                template: `
    <ul [ngClass]="getClasses()">
      <ng-content></ng-content>
    </ul>
  `
            }]
    }], null, { additionalClasses: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkAccordionModule, { declarations: function () { return [SprkAccordionComponent]; }, imports: function () { return [CommonModule, RouterModule,
        SprkIconModule,
        SprkLinkModule]; }, exports: function () { return [SprkAccordionComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkAccordionModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, SprkIconModule, SprkLinkModule],
                declarations: [SprkAccordionComponent],
                exports: [SprkAccordionComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkAlertComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-alert',
                template: `
    <div
      *ngIf="visible"
      [ngClass]="getClassesAlertContainer()"
      role="alert"
      [attr.data-analytics]="analyticsString"
      [attr.data-id]="idString"
    >
      <div class="sprk-c-Alert__content">
        <sprk-icon
          iconType="{{ icon }}"
          additionalClasses="sprk-c-Alert__icon sprk-c-Icon--l sprk-c-Icon--stroke-current-color"
          aria-hidden="true"
        ></sprk-icon>

        <p class="sprk-c-Alert__text"><ng-content></ng-content></p>
      </div>

      <button
        *ngIf="dismissible !== false"
        class="sprk-c-Alert__icon sprk-c-Alert__icon--dismiss"
        type="button"
        title="Dismiss"
        (click)="alertDismiss($event)"
      >
        <sprk-icon
          iconType="close"
          additionalClasses="sprk-c-Icon--stroke-current-color"
          aria-hidden="true"
        ></sprk-icon>
      </button>
    </div>
  `
            }]
    }], function () { return []; }, { alertType: [{
            type: Input
        }], analyticsString: [{
            type: Input
        }], idString: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], dismissible: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkAlertModule, { declarations: function () { return [SprkAlertComponent]; }, imports: function () { return [CommonModule, RouterModule,
        SprkIconModule]; }, exports: function () { return [SprkAlertComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkAlertModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, SprkIconModule],
                declarations: [SprkAlertComponent],
                exports: [SprkAlertComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkDividerComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-divider',
                template: `
    <span [ngClass]="getClasses()" [attr.data-id]="idString"> </span>
  `
            }]
    }], null, { additionalClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkDividerModule, { declarations: function () { return [SprkDividerComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkDividerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkDividerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkDividerComponent],
                exports: [SprkDividerComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkDropdownComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-dropdown',
                template: `
    <div
      [ngClass]="{
        'sprk-c-MastheadMask': isOpen && dropdownType === 'mastheadSelector'
      }"
    >
      <div [ngClass]="{ 'sprk-o-Box': dropdownType === 'mastheadSelector' }">
        <a
          sprkLink
          [ngClass]="getTriggerClasses()"
          (click)="toggle($event)"
          [idString]="idString"
          [analyticsString]="analyticsString"
          aria-haspopup="listbox"
          href="#"
          [attr.aria-label]="triggerText ? triggerText : (screenReaderText || 'Choose One')"
        >
          <span [ngClass]="getTriggerTextClasses()">{{ triggerText }}</span>
          <span class="sprk-u-ScreenReaderText">{{ screenReaderText }}</span>
          <sprk-icon
            [iconType]="triggerIconType"
            additionalClasses="sprk-u-mls sprk-c-Icon--stroke-current-color {{
              additionalIconClasses
            }}"
          ></sprk-icon>
        </a>
      </div>

      <div [ngClass]="getClasses()" *ngIf="isOpen">
        <div
          class="sprk-c-Dropdown__header"
          *ngIf="dropdownType === 'mastheadSelector' || title || selector"
        >
          <h2 class="sprk-c-Dropdown__title sprk-b-TypeBodyTwo" *ngIf="title">
            {{ title }}
          </h2>

          <a
            sprkLink
            *ngIf="selector && !title"
            variant="plain"
            class="sprk-o-Stack sprk-o-Stack--split@xxs sprk-o-Stack--center-column sprk-u-Width-100"
            (click)="toggle($event)"
            [attr.aria-label]="title"
            href="#"
          >
            <span
              class="sprk-c-Dropdown__title sprk-b-TypeBodyTwo sprk-o-Stack__item sprk-o-Stack__item--flex@xxs"
              >{{ selector }}</span
            >
            <sprk-icon
              [iconType]="triggerIconType"
              additionalClasses="sprk-c-Icon--stroke-current-color sprk-u-mls sprk-c-Icon--toggle sprk-Stack__item {{
                additionalIconClasses
              }}"
            ></sprk-icon>
          </a>
        </div>

        <ul
          class="sprk-c-Dropdown__links"
          role="listbox"
          [attr.aria-label]="title ? title : (screenReaderText || 'My Choices')"
        >
          <li
            class="sprk-c-Dropdown__item"
            *ngFor="let choice of choices; let i = index"
            [attr.data-sprk-dropdown-choice-index]="i"
            (click)="choiceClick($event)"
            [attr.aria-selected]="choice.active"
            role="option"
          >
            <div *ngIf="choice.content; then content; else link"></div>
            <ng-template #link>
              <a
                sprkLink
                variant="unstyled"
                [attr.href]="choice.href"
                [analyticsString]="choice.analyticsString"
                [ngClass]="{
                  'sprk-c-Dropdown__link': true,
                  'sprk-c-Dropdown__link--active': choice.active
                }"
                [attr.aria-label]="choice.text"
                >{{ choice.text }}
              </a>
            </ng-template>
            <ng-template #content>
              <a
                sprkLink
                variant="unstyled"
                [attr.href]="choice.href"
                [analyticsString]="choice.analyticsString"
                [ngClass]="{
                  'sprk-c-Dropdown__link': true,
                  'sprk-c-Dropdown__link--active': choice.active
                }"
                [attr.aria-label]="choice.content.title"
              >
                <p class="sprk-b-TypeBodyOne">{{ choice.content.title }}</p>
                <p>{{ choice.content.infoLine1 }}</p>
                <p>{{ choice.content.infoLine2 }}</p>
              </a>
            </ng-template>
          </li>
        </ul>
        <ng-content select="[sprkDropdownFooter]"></ng-content>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { dropdownType: [{
            type: Input
        }], isOpen: [{
            type: Input
        }], choiceMade: [{
            type: Output
        }], onClick: [{
            type: HostListener,
            args: ['document:click', ['$event']]
        }], onFocusin: [{
            type: HostListener,
            args: ['document:focusin', ['$event']]
        }], triggerText: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], additionalIconClasses: [{
            type: Input
        }], additionalTriggerClasses: [{
            type: Input
        }], additionalTriggerTextClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }], analyticsString: [{
            type: Input
        }], title: [{
            type: Input
        }], selector: [{
            type: Input
        }], choices: [{
            type: Input
        }], triggerIconType: [{
            type: Input
        }], screenReaderText: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkDropdownModule, { declarations: function () { return [SprkDropdownComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule,
        SprkLinkDirectiveModule]; }, exports: function () { return [SprkDropdownComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkDropdownModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],
                declarations: [SprkDropdownComponent],
                exports: [SprkDropdownComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkStackComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-stack',
                template: `
    <div [ngClass]="getClasses()" [attr.data-analytics]="analyticsString">
      <ng-content></ng-content>
    </div>
  `
            }]
    }], null, { splitAt: [{
            type: Input
        }], itemSpacing: [{
            type: Input
        }], analyticsString: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkStackModule, { declarations: function () { return [SprkStackComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkStackComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkStackModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkStackComponent],
                exports: [SprkStackComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkToggleComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-toggle',
                template: `
    <div
      class="sprk-c-Toggle {{ additionalClasses }}"
      [attr.data-id]="idString"
    >
      <button
        variant="icon"
        [ngClass]="getClasses()"
        (click)="toggle($event)"
        [attr.aria-expanded]="isOpen ? 'true' : 'false'"
        [attr.data-analytics]="analyticsString"
        [attr.aria-controls]="contentId"
      >
        <sprk-icon
          iconType="chevron-down-circle-two-color"
          additionalClasses="{{
            iconClass
          }} sprk-c-Icon--l sprk-u-mrs sprk-c-Icon--toggle {{ iconStateClass }}"
        ></sprk-icon>
        {{ title }}
      </button>

      <div
        [@toggleContent]="animState"
        [id]="contentId"
      >
        <div class="sprk-u-pts sprk-u-pbs sprk-c-Toggle__content">
          <ng-content></ng-content>
        </div>
      </div>
    </div>
  `,
                animations: [toggleAnimations.toggleContent]
            }]
    }], function () { return []; }, { titleFontClass: [{
            type: Input
        }], contentId: [{
            type: Input
        }], analyticsString: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], title: [{
            type: Input
        }], iconClass: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkToggleModule, { declarations: function () { return [SprkToggleComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule,
        SprkLinkDirectiveModule]; }, exports: function () { return [SprkToggleComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkToggleModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    SprkIconModule,
                    SprkLinkDirectiveModule
                ],
                declarations: [SprkToggleComponent],
                exports: [SprkToggleComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFooterComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-footer',
                template: `
    <div class="sprk-o-Box sprk-o-Box--large sprk-u-BackgroundColor--gray">
      <footer
        [ngClass]="getClasses()"
        role="contentinfo"
        [attr.data-id]="idString"
      >
        <div
          class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m"
        >
          <div
            *ngIf="globalLinks"
            class="sprk-o-Stack__item sprk-o-Stack__item--three-tenths@m sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-prh"
          >
            <h3 class="sprk-o-Stack__item sprk-b-TypeBodyOne">
              {{ globalHeading }}
            </h3>

            <div
              *ngFor="let item of globalLinks"
              class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium"
            >
              <div class="sprk-o-Stack__item">
                <a
                  sprkLink
                  variant="plain"
                  href="{{ item.href }}"
                  analyticsString="{{ item.analytics || item.analyticsString }}"
                >
                  <sprk-icon
                    *ngIf="item.icon"
                    iconType="{{ item.icon }}"
                    additionalClasses="{{ item.iconCSS }}"
                  ></sprk-icon>
                  <span *ngIf="item.icon" class="sprk-u-ScreenReaderText">{{
                    item.iconScreenReaderText
                  }}</span>
                  <img
                    *ngIf="item.imgSrc"
                    src="{{ item.imgSrc }}"
                    alt="{{ item.imgAlt }}"
                    class="{{ item.imgCSS }}"
                  />
                </a>
              </div>

              <p class="sprk-o-Stack__item sprk-b-TypeBodyFour">
                {{ item.text }}
              </p>
            </div>
          </div>

          <div
            class="sprk-o-Stack__item sprk-o-Stack__item--seven-tenths@m sprk-o-Stack sprk-o-Stack--medium"
          >
            <div
              *ngIf="localLinks"
              class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m"
            >
              <div
                *ngFor="let item of localLinks"
                class="sprk-o-Stack__item sprk-o-Stack__item--third@m sprk-o-Box sprk-u-PaddingRight--a sprk-o-Stack sprk-o-Stack--large"
              >
                <h3 class="sprk-o-Stack__item sprk-b-TypeBodyOne">
                  {{ item.heading }}
                </h3>

                <ul
                  class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-a sprk-b-List sprk-b-List--bare"
                >
                  <li
                    class="sprk-o-Stack__item"
                    *ngFor="let link of item.links"
                  >
                    <a
                      sprkLink
                      variant="simple"
                      class="sprk-u-FontWeight--normal"
                      href="{{ link.href }}"
                      analyticsString="{{ link.analyticsString || link.analytics }}"
                    >
                      {{ link.text }}
                    </a>
                  </li>
                </ul>
              </div>
            </div>

            <div
              *ngIf="socialLinks"
              class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Box"
            >
              <h3 class="sprk-o-Stack__item sprk-b-TypeBodyOne">
                {{ connectHeading }}
              </h3>

              <div
                class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Stack--split@m"
              >
                <ul
                  *ngIf="socialLinks"
                  class="
                    sprk-o-Stack__item
                    sprk-o-Stack__item--flex@m
                    sprk-o-Stack
                    sprk-o-Stack--split@xxs
                    sprk-o-Stack--medium
                    sprk-b-List
                    sprk-b-List--bare"
                >
                  <li
                    *ngFor="let item of socialLinks"
                    class="sprk-o-Stack__item"
                  >
                    <a
                      sprkLink
                      variant="plain"
                      href="{{ item.href }}"
                      analyticsString="{{ item.analytics || item.analyticsString }}"
                    >
                      <sprk-icon
                        *ngIf="item.icon"
                        iconType="{{ item.icon }}"
                        additionalClasses="{{ item.iconCSS }}"
                      ></sprk-icon>
                      <span *ngIf="item.icon" class="sprk-u-ScreenReaderText">{{
                        item.iconScreenReaderText
                      }}</span>
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        <span
          class="sprk-c-Divider sprk-u-mvn sprk-u-mhm"
          data-id="divider-1"
        ></span>

        <div
          class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-PaddingTop--b"
        >
          <div
            *ngIf="awards"
            class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large"
          >
            <h3 class="sprk-o-Stack__item sprk-b-TypeBodyOne">
              {{ awardsHeading }}
            </h3>

            <div
              class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@s sprk-u-mbm"
            >
              <div class="sprk-o-Stack__item" *ngFor="let award of awards">
                <a
                  sprkLink
                  variant="plain"
                  class="sprk-o-Stack__item"
                  href="{{ award.href }}"
                  analyticsString="{{ award.analytics || award.analyticsString }}"
                >
                  <img
                    *ngIf="award.imgSrc"
                    src="{{ award.imgSrc }}"
                    alt="{{ award.imgAlt }}"
                    class="{{ award.imgCSS }}"
                  />
                </a>
              </div>
            </div>

            <div
              *ngFor="let toggle of disclaimerToggle"
              class="sprk-o-Stack__item"
            >
              <sprk-toggle
                title="{{ toggle.title }}"
                analyticsString="{{ toggle.analytics || toggle.analyticsString }}"
                iconClass="sprk-c-Icon--stroke-current-color"
                titleFontClass="sprk-b-TypeBodyFour"
              >
                <p class="sprk-b-TypeBodyFour">{{ toggle.body }}</p>
              </sprk-toggle>
            </div>
          </div>

          <div
            *ngIf="disclaimerText"
            class="sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large"
          >
            <p
              *ngFor="let disclaimer of disclaimerText"
              class="sprk-o-Stack__item sprk-b-TypeBodyFour"
            >
              {{ disclaimer.text }}
            </p>
          </div>

          <ul
            *ngIf="badgeLinks"
            class="
              sprk-o-Stack__item
              sprk-o-Stack__item--flex@m
              sprk-o-Stack
              sprk-o-Stack--split@xxs
              sprk-o-Stack--medium
              sprk-b-List
              sprk-b-List--bare"
          >
            <li *ngFor="let item of badgeLinks" class="sprk-o-Stack__item">
              <a
                sprkLink
                variant="plain"
                href="{{ item.href }}"
                analyticsString="{{ item.analytics || item.analyticsString }}"
              >
                <sprk-icon
                  *ngIf="item.icon"
                  iconType="{{ item.icon }}"
                  additionalClasses="{{ item.iconCSS }}"
                ></sprk-icon>
                <span *ngIf="item.icon" class="sprk-u-ScreenReaderText">{{
                  item.iconScreenReaderText
                }}</span>
              </a>
            </li>
          </ul>
        </div>
      </footer>
    </div>
  `
            }]
    }], null, { additionalClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }], globalHeading: [{
            type: Input
        }], awardsHeading: [{
            type: Input
        }], connectHeading: [{
            type: Input
        }], globalLinks: [{
            type: Input
        }], localLinks: [{
            type: Input
        }], socialLinks: [{
            type: Input
        }], awards: [{
            type: Input
        }], badgeLinks: [{
            type: Input
        }], disclaimerText: [{
            type: Input
        }], disclaimerToggle: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkFooterModule, { declarations: function () { return [SprkFooterComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule,
        SprkStackModule,
        SprkStackItemModule,
        SprkToggleModule,
        SprkLinkDirectiveModule]; }, exports: function () { return [SprkFooterComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFooterModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    SprkIconModule,
                    SprkStackModule,
                    SprkStackItemModule,
                    SprkToggleModule,
                    SprkLinkDirectiveModule
                ],
                declarations: [SprkFooterComponent],
                exports: [SprkFooterComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkListItemComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-list-item',
                template: `
    <ng-template>
      <ng-content></ng-content>
    </ng-template>
  `
            }]
    }], null, { analyticsString: [{
            type: Input
        }], idString: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], content: [{
            type: ViewChild,
            args: [TemplateRef, { static: true }]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkListItemModule, { declarations: function () { return [SprkListItemComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkListItemComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkListItemModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkListItemComponent],
                exports: [SprkListItemComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkMastheadAccordionComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-masthead-accordion',
                template: `
    <nav role="navigation" [attr.data-id]="idString">
      <ul [ngClass]="getClasses()">
        <ng-content></ng-content>
      </ul>
    </nav>
  `
            }]
    }], null, { additionalClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkMastheadAccordionModule, { declarations: function () { return [SprkMastheadAccordionComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule]; }, exports: function () { return [SprkMastheadAccordionComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkMastheadAccordionModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, SprkIconModule],
                declarations: [SprkMastheadAccordionComponent],
                exports: [SprkMastheadAccordionComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkMastheadAccordionItemComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-masthead-accordion-item',
                template: `
    <li [ngClass]="getClasses()">
      <div
        class="sprk-u-Position--relative sprk-o-Stack__item sprk-u-Width-100"
      >
        <button
          [attr.aria-controls]="accordion_controls_id"
          class="sprk-c-MastheadAccordion__summary"
          [attr.data-analytics]="analyticsString"
          [attr.data-id]="idString"
          (click)="toggleAccordion($event)"
          [attr.aria-expanded]="isOpen"
        >
          <span [ngClass]="getHeadingClasses()">
            <sprk-icon
              [iconType]="leadingIcon"
              additionalClasses="sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-c-Icon--toggle sprk-u-mrs"
              *ngIf="leadingIcon"
            ></sprk-icon>
            {{ title }}
          </span>

          <sprk-icon
            additionalClasses="sprk-c-MastheadAccordion__icon sprk-c-Icon--stroke-current-color sprk-c-Icon--toggle {{
              iconStateClass
            }}"
            [iconType]="currentIconType"
          ></sprk-icon>
        </button>
      </div>

      <div [@toggleContent]="animState">
        <div [id]="accordion_controls_id"><ng-content></ng-content></div>
      </div>
    </li>
  `,
                animations: [toggleAnimations.toggleContent]
            }]
    }], function () { return []; }, { isOpen: [{
            type: Input
        }], iconTypeClosed: [{
            type: Input
        }], iconTypeOpen: [{
            type: Input
        }], title: [{
            type: Input
        }], analyticsString: [{
            type: Input
        }], idString: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], additionalHeadingClasses: [{
            type: Input
        }], isActive: [{
            type: Input
        }], leadingIcon: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkMastheadAccordionItemModule, { declarations: function () { return [SprkMastheadAccordionItemComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule]; }, exports: function () { return [SprkMastheadAccordionItemComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkMastheadAccordionItemModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, SprkIconModule],
                declarations: [SprkMastheadAccordionItemComponent],
                exports: [SprkMastheadAccordionItemComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkMastheadComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-masthead',
                template: `
    <header [ngClass]="getClasses()" role="banner" [attr.data-id]="idString">
      <div
        class="sprk-c-Masthead__content sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--split@xxs"
      >
        <div
          class="sprk-c-Masthead__menu sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs"
        >
          <button
            class="sprk-c-Menu"
            type="button"
            [attr.aria-expanded]="isNarrowNavOpen ? true : false"
            (click)="toggleNarrowNav($event)"
            [attr.aria-controls]="narrowNavId"
          >
            <span class="sprk-u-ScreenReaderText">Toggle Navigation</span>
            <svg
              [ngClass]="{
                'sprk-c-Icon': true,
                'sprk-c-Icon--l': true,
                'sprk-c-Menu__icon': true,
                'sprk-c-Menu__icon--open': isNarrowNavOpen
              }"
              aria-hidden="true"
              viewBox="0 0 64 64"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g>
                <path
                  class="sprk-c-Menu__line sprk-c-Menu__line--two"
                  d="m8 32h48"
                />
                <path
                  class="sprk-c-Menu__line sprk-c-Menu__line--one"
                  d="m8 18.68h48"
                />
                <path
                  class="sprk-c-Menu__line sprk-c-Menu__line--three"
                  d="m8 45.32h48"
                />
              </g>
            </svg>
          </button>
        </div>

        <div
          class="sprk-c-Masthead__branding sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs"
        >
          <a sprkLink [attr.href]="logoHref" variant="unstyled">
            <ng-content select="[logo-slot]"></ng-content>
            <span class="sprk-u-ScreenReaderText">{{
              logoLinkScreenReaderText
            }}</span>
          </a>
        </div>

        <div
          class="sprk-c-Masthead__nav-item sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs"
        >
          <ng-content select="[navItem-slot]"></ng-content>
        </div>
        <nav
          class="
          sprk-c-Masthead__little-nav
          sprk-o-Stack__item
          sprk-o-Stack__item--flex@xxs
          sprk-o-Stack
          sprk-o-Stack--misc-a
          sprk-o-Stack--split@xxs
          sprk-o-Stack--end-row"
          role="navigation"
        >
          <ng-content select="[little-nav-slot]"></ng-content>

          <ng-content select="[utility-slot]"></ng-content>
        </nav>
      </div>

      <div class="sprk-o-Stack__item">
        <nav
          class="sprk-c-Masthead__big-nav"
          role="navigation"
          [attr.data-id]="idString"
          *ngIf="bigNavLinks"
        >
          <ul [ngClass]="getSecondaryNavClasses()">
            <li
              *ngFor="let link of bigNavLinks"
              [ngClass]="{
                'sprk-c-Masthead__big-nav-item': true,
                'sprk-o-Stack__item': true,
                'sprk-c-Masthead__big-nav-item--open':
                  link.focused && link.subNav
              }"
              routerLinkActive="sprk-c-Masthead__big-nav-item--active"
              [attr.aria-haspopup]="link.subNav ? 'true' : null"
            >
              <div *ngIf="link.subNav">
                <sprk-dropdown
                  [choices]="link.subNav"
                  additionalTriggerClasses="sprk-b-Link--plain sprk-c-Masthead__link sprk-c-Masthead__link--big-nav"
                  additionalClasses="sprk-u-TextAlign--left"
                  triggerIconType="chevron-down"
                  [analyticsString]="link.analyticsString"
                  [triggerText]="link.text"
                ></sprk-dropdown>
              </div>
              <div *ngIf="!link.subNav">
                <a
                  sprkLink
                  variant="plain"
                  [analyticsString]="link.analyticsString"
                  class="sprk-c-Masthead__link sprk-c-Masthead__link--big-nav"
                  [attr.href]="link.href"
                >
                  {{ link.text }}
                </a>
              </div>
            </li>
          </ul>
        </nav>
      </div>

      <nav
        *ngIf="isNarrowNavOpen"
        class="sprk-c-Masthead__narrow-nav"
        role="navigation"
        [id]="narrowNavId"
      >
        <sprk-dropdown
          *ngIf="narrowSelector"
          dropdownType="mastheadSelector"
          additionalClasses="sprk-c-Masthead__selector-dropdown"
          additionalTriggerClasses="
            sprk-c-Masthead__selector
            sprk-b-Link
            sprk-b-Link--plain
            sprk-o-Stack
            sprk-o-Stack--split@xxs
            sprk-o-Stack--center-column"
          additionalTriggerTextClasses="sprk-o-Stack__item sprk-o-Stack__item--flex@xxs"
          additionalIconClasses="sprk-Stack__item sprk-u-mrs"
          [triggerText]="narrowSelector['trigger'].text"
          selector="Select One"
          triggerIconType="chevron-down"
          [choices]="narrowSelector['choices']"
        >
          <div
            *ngIf="narrowSelector['footer']"
            class="sprk-c-Dropdown__footer sprk-u-TextAlign--center"
            sprkDropdownFooter
          >
            <a
              sprkLink
              variant="unstyled"
              [analyticsString]="narrowSelector['footer'].analyticsString"
              [attr.href]="narrowSelector['footer'].href"
              class="sprk-c-Button sprk-c-Button--tertiary"
            >
              {{ narrowSelector['footer'].text }}
            </a>
          </div>
        </sprk-dropdown>

        <sprk-masthead-accordion [additionalClasses]="getNarrowNavClasses()">
          <div *ngFor="let narrowLink of narrowNavLinks">
            <div *ngIf="narrowLink.subNav">
              <sprk-masthead-accordion-item
                iconTypeOpen="chevron-down"
                iconTypeClosed="chevron-down"
                [leadingIcon]="narrowLink.leadingIcon"
                [isActive]="narrowLink.active"
                [title]="narrowLink.text"
              >
                <ul
                  class="sprk-b-List sprk-b-List--bare sprk-c-MastheadAccordion__details"
                >
                  <li
                    class="sprk-c-MastheadAccordion__item"
                    *ngFor="let subNavLink of narrowLink.subNav"
                  >
                    <a
                      sprkLink
                      variant="unstyled"
                      class="sprk-c-MastheadAccordion__summary"
                      [attr.href]="subNavLink.href"
                      [analyticsString]="subNavLink.analyticsString"
                    >
                      <sprk-icon
                        [iconType]="subNavLink.leadingIcon"
                        additionalClasses="sprk-c-Icon--stroke-current-color sprk-u-mrs"
                        *ngIf="subNavLink.leadingIcon"
                      ></sprk-icon>
                      {{ subNavLink.text }}
                    </a>
                  </li>
                </ul>
              </sprk-masthead-accordion-item>
            </div>
            <div *ngIf="!narrowLink.subNav">
              <li
                [ngClass]="{
                  'sprk-c-MastheadAccordion__item': true,
                  'sprk-c-MastheadAccordion__item--active': narrowLink.active
                }"
              >
                <a
                  sprkLink
                  variant="unstyled"
                  class="sprk-c-MastheadAccordion__summary"
                  [attr.href]="narrowLink.href"
                  [analyticsString]="narrowLink.analyticsString"
                >
                  <span class="sprk-c-MastheadAccordion__heading">
                    <sprk-icon
                      [iconType]="narrowLink.leadingIcon"
                      additionalClasses="sprk-c-Icon--stroke-current-color sprk-u-mrs"
                      *ngIf="narrowLink.leadingIcon"
                    ></sprk-icon>
                    {{ narrowLink.text }}
                  </span>
                </a>
              </li>
            </div>
          </div>
        </sprk-masthead-accordion>
        <ng-content select="[narrowNavFooter]"></ng-content>
      </nav>
    </header>
  `
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc2.Router }]; }, { logoHref: [{
            type: Input
        }], logoLinkScreenReaderText: [{
            type: Input
        }], isNarrowNavOpen: [{
            type: Input
        }], narrowNavId: [{
            type: Input
        }], handleResizeEvent: [{
            type: HostListener,
            args: ['window:orientationchange']
        }], onScroll: [{
            type: HostListener,
            args: ['window:scroll', ['$event']]
        }], onResize: [{
            type: HostListener,
            args: ['window:resize', ['$event']]
        }], additionalClasses: [{
            type: Input
        }], additionalBigNavClasses: [{
            type: Input
        }], additionalNarrowNavClasses: [{
            type: Input
        }], narrowNavLinks: [{
            type: Input
        }], idString: [{
            type: Input
        }], bigNavLinks: [{
            type: Input
        }], narrowSelector: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkMastheadModule, { declarations: function () { return [SprkMastheadComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule,
        RouterModule,
        SprkMastheadAccordionModule,
        SprkMastheadAccordionItemModule,
        SprkDropdownModule,
        SprkAccordionModule,
        SprkAccordionItemModule,
        SprkLinkDirectiveModule]; }, exports: function () { return [SprkMastheadComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkMastheadModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    SprkIconModule,
                    RouterModule,
                    SprkMastheadAccordionModule,
                    SprkMastheadAccordionItemModule,
                    SprkDropdownModule,
                    SprkAccordionModule,
                    SprkAccordionItemModule,
                    SprkLinkDirectiveModule,
                ],
                declarations: [SprkMastheadComponent],
                exports: [SprkMastheadComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkModalComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-modal',
                template: `
    <div
      *ngIf="isVisible"
      [ngClass]="{
        'sprk-c-Modal': true,
        'sprk-c-Modal--wait': modalType === 'wait'
      }"
      role="dialog"
      tabindex="1"
      [attr.aria-labelledby]="heading_id"
      aria-modal="true"
      [attr.aria-describedby]="content_id"
      [attr.data-id]="idString"
    >
      <div class="sprk-o-Stack sprk-o-Stack--large">
        <header class="sprk-o-Stack__item sprk-c-Modal__header">
          <h2
            class="sprk-c-Modal__heading sprk-b-TypeDisplayFour"
            [id]="heading_id"
          >
            {{ title }}
          </h2>

          <button
            *ngIf="modalType != 'wait'"
            class="sprk-c-Modal__icon"
            type="button"
            aria-label="Close Modal"
            (click)="closeModal($event)"
          >
            <sprk-icon
              iconType="close"
              additionalClasses="sprk-c-Icon--stroke-current-color"
            ></sprk-icon>
          </button>
        </header>

        <div
          class="sprk-o-Stack__item sprk-c-Modal__body sprk-o-Stack sprk-o-Stack--medium"
        >
          <div
            *ngIf="modalType == 'wait'"
            class="sprk-o-Stack__item sprk-c-Spinner sprk-c-Spinner--circle sprk-c-Spinner--large sprk-c-Spinner--dark"
          ></div>
          <ng-content></ng-content>
        </div>

        <footer
          *ngIf="modalType === 'choice'"
          class="sprk-o-Stack__item sprk-c-Modal__footer"
        >
          <button
            class="sprk-c-Button sprk-u-mrm"
            [attr.data-analytics]="confirmAnalyticsString"
            (click)="emitConfirmClick($event)"
          >
            {{ confirmText }}
          </button>

          <button
            class="sprk-c-Button sprk-c-Button--tertiary"
            [attr.data-analytics]="cancelAnalyticsString"
            (click)="emitCancelClick($event)"
          >
            {{ cancelText }}
          </button>
        </footer>
      </div>
    </div>

    <div
      *ngIf="isVisible"
      class="sprk-c-ModalMask"
      tabindex="-1"
      (click)="closeModal($event)"
    ></div>
  `
            }]
    }], function () { return []; }, { confirmText: [{
            type: Input
        }], cancelText: [{
            type: Input
        }], isVisible: [{
            type: Input
        }], hide: [{
            type: Output
        }], confirmClick: [{
            type: Output
        }], cancelClick: [{
            type: Output
        }], handleKeyboardEvent: [{
            type: HostListener,
            args: ['document:keydown', ['$event']]
        }], title: [{
            type: Input
        }], modalType: [{
            type: Input
        }], confirmAnalyticsString: [{
            type: Input
        }], cancelAnalyticsString: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkModalModule, { declarations: function () { return [SprkModalComponent]; }, imports: function () { return [CommonModule, RouterModule,
        SprkIconModule]; }, exports: function () { return [SprkModalComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkModalModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, SprkIconModule],
                declarations: [SprkModalComponent],
                exports: [SprkModalComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkOrderedListComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-ordered-list',
                template: `
    <ol [ngClass]="getClasses()" [attr.data-id]="idString">
      <li
        *ngFor="let item of items"
        [attr.data-analytics]="item.analyticsString"
        [attr.data-id]="item.idString"
        [ngClass]="item.additionalClasses"
      >
        <ng-container [ngTemplateOutlet]="item.content"></ng-container>
      </li>
    </ol>
  `
            }]
    }], function () { return []; }, { listType: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }], items: [{
            type: ContentChildren,
            args: [SprkListItemComponent]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkOrderedListModule, { declarations: function () { return [SprkOrderedListComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkOrderedListComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkOrderedListModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkOrderedListComponent],
                exports: [SprkOrderedListComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkUnorderedListComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-unordered-list',
                template: `
    <ul [ngClass]="getClasses()" [attr.data-id]="idString">
      <li
        *ngFor="let item of items"
        [attr.data-analytics]="item.analyticsString"
        [attr.data-id]="item.idString"
        [ngClass]="item.additionalClasses"
      >
        <ng-container [ngTemplateOutlet]="item.content"></ng-container>
      </li>
    </ul>
  `
            }]
    }], function () { return []; }, { listType: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }], items: [{
            type: ContentChildren,
            args: [SprkListItemComponent]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkUnorderedListModule, { declarations: function () { return [SprkUnorderedListComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkUnorderedListComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkUnorderedListModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkUnorderedListComponent],
                exports: [SprkUnorderedListComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkPaginationComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-pagination',
                template: `
    <nav
      aria-label="Pagination Navigation"
      [ngClass]="getClasses()"
      [attr.data-id]="idString"
    >
      <sprk-unordered-list
        listType="horizontal"
        additionalClasses="sprk-c-Pagination sprk-o-HorizontalList--spacing-medium"
      >
        <sprk-list-item>
          <a
            sprkLink
            variant="plain"
            (click)="goBack($event, currentPage)"
            [isDisabled]="currentPage === 1"
            class="sprk-c-Pagination__icon"
            [analyticsString]="analyticsStringLinkPrev"
            aria-label="Previous Page"
            href="#"
          >
            <span class="sprk-u-ScreenReaderText">{{ prevLinkText }}</span>
            <sprk-icon
              additionalClasses="sprk-c-Icon--stroke-current-color"
              iconType="chevron-left"
            ></sprk-icon>
          </a>
        </sprk-list-item>

        <sprk-list-item *ngIf="showNumbers()">
          <a
            sprkLink
            href="#"
            (click)="goToPage($event, 1)"
            [ngClass]="{
              'sprk-c-Pagination__link': true,
              'sprk-c-Pagination__link--current': currentPage === 1
            }"
            [analyticsString]="analyticsStringFirstLink"
            [attr.aria-current]="currentPage === 1"
            aria-label="Page 1"
          >
            1
          </a>
        </sprk-list-item>

        <sprk-list-item
          *ngIf="showNumbers() && currentPage !== 2 && totalPages() === 3"
        >
          <a
            sprkLink
            href="#"
            (click)="goToPage($event, 2)"
            class="sprk-c-Pagination__link"
            [attr.aria-current]="false"
            aria-label="Page 2"
          >
            2
          </a>
        </sprk-list-item>

        <sprk-list-item
          *ngIf="showNumbers() && currentPage > 2 && totalPages() > 3"
        >
          ...
        </sprk-list-item>

        <sprk-list-item
          *ngIf="showNumbers() && currentPage > 1 && currentPage < totalPages()"
        >
          <a
            sprkLink
            href="#"
            (click)="goToPage($event, currentPage)"
            class="sprk-c-Pagination__link sprk-c-Pagination__link--current"
            aria-current="true"
            [analyticsString]="analyticsStringSecondLink"
            attr.aria-label="Page {{ currentPage }}"
          >
            {{ currentPage }}
          </a>
        </sprk-list-item>

        <sprk-list-item
          *ngIf="
            showNumbers() && currentPage < totalPages() - 1 && totalPages() > 3
          "
        >
          ...
        </sprk-list-item>

        <sprk-list-item *ngIf="showNumbers() && totalPages() > 1">
          <a
            sprkLink
            href="#"
            (click)="goToPage($event, totalPages())"
            [ngClass]="{
              'sprk-c-Pagination__link': true,
              'sprk-c-Pagination__link--current': currentPage === totalPages()
            }"
            attr.aria-label="Page {{ totalPages() }}"
            [analyticsString]="analyticsStringThirdLink"
            [attr.aria-current]="currentPage === totalPages()"
          >
            {{ totalPages() }}
          </a>
        </sprk-list-item>

        <sprk-list-item>
          <a
            sprkLink
            href="#"
            variant="plain"
            [isDisabled]="isLastPage()"
            (click)="goForward($event, currentPage)"
            class="sprk-c-Pagination__icon"
            [analyticsString]="analyticsStringLinkNext"
            aria-label="Next Page"
          >
            <span class="sprk-u-ScreenReaderText">{{ nextLinkText }}</span>
            <sprk-icon
              additionalClasses="sprk-c-Icon--stroke-current-color"
              iconType="chevron-right"
            ></sprk-icon>
          </a>
        </sprk-list-item>
      </sprk-unordered-list>
    </nav>
  `
            }]
    }], function () { return []; }, { paginationType: [{
            type: Input
        }], nextLinkText: [{
            type: Input
        }], prevLinkText: [{
            type: Input
        }], previousClick: [{
            type: Output
        }], nextClick: [{
            type: Output
        }], pageClick: [{
            type: Output
        }], currentPage: [{
            type: Input
        }], totalItems: [{
            type: Input
        }], itemsPerPage: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], analyticsStringFirstLink: [{
            type: Input
        }], analyticsStringSecondLink: [{
            type: Input
        }], analyticsStringThirdLink: [{
            type: Input
        }], analyticsStringLinkNext: [{
            type: Input
        }], analyticsStringLinkPrev: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkPaginationModule, { declarations: function () { return [SprkPaginationComponent]; }, imports: function () { return [CommonModule,
        SprkUnorderedListModule,
        SprkIconModule,
        SprkLinkDirectiveModule,
        SprkListItemModule]; }, exports: function () { return [SprkPaginationComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkPaginationModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    SprkUnorderedListModule,
                    SprkIconModule,
                    SprkLinkDirectiveModule,
                    SprkListItemModule
                ],
                declarations: [SprkPaginationComponent],
                exports: [SprkPaginationComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkPromoComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-promo',
                template: `
    <div [ngClass]="getClasses()" [attr.data-id]="idString">
      <a
        sprkLink
        variant="unstyled"
        *ngIf="isFlag && !mediaRev"
        [ngClass]="getClassesFlag()"
        [attr.href]="imgHref"
        [analyticsString]="flagLinkAnalytics"
      >
        <img
          class="sprk-c-Promo__image--flag"
          alt="{{ imgAlt }}"
          src="{{ imgSrc }}"
        />
      </a>
      <a
        sprkLink
        variant="unstyled"
        *ngIf="imgSrc && !mediaRev && !isFlag"
        [attr.href]="imgHref"
        [analyticsString]="imgLinkAnalytics"
        [ngClass]="getClassesImg()"
      >
        <img
          class="sprk-c-Promo__image"
          alt="{{ imgAlt }}"
          src="{{ imgSrc }}"
        />
      </a>

      <div [ngClass]="getClassesContent()">
        <h3
          *ngIf="title"
          class="sprk-b-TypeDisplayFive sprk-o-Stack__item sprk-c-Promo__title"
        >
          {{ title }}
        </h3>

        <div *ngIf="subtitle" class="sprk-c-Promo__subtitle sprk-o-Stack__item">
          {{ subtitle }}
        </div>

        <div class="sprk-b-TypeBodyTwo sprk-o-Stack__item">
          <ng-content></ng-content>
        </div>

        <div *ngIf="cta === 'button'" class="sprk-o-Stack__item">
          <a
            sprkLink
            variant="unstyled"
            [attr.href]="buttonHref"
            class="sprk-c-Button"
            [analyticsString]="buttonLinkAnalytics"
          >
            {{ ctaText }}
          </a>
        </div>

        <a
          sprkLink
          variant="simple"
          *ngIf="cta === 'link'"
          [attr.href]="ctaLinkHref"
          class="sprk-o-Stack__item"
          [analyticsString]="ctaLinkAnalytics"
        >
          {{ ctaText }}
        </a>
      </div>

      <a
        sprkLink
        variant="unstyled"
        *ngIf="isFlag && mediaRev"
        [attr.href]="imgHref"
        [ngClass]="getClassesFlag()"
        [analyticsString]="flagLinkAnalytics"
      >
        <img
          class="sprk-c-Promo__image--flag"
          alt="{{ imgAlt }}"
          src="{{ imgSrc }}"
        />
      </a>

      <a
        sprkLink
        variant="unstyled"
        *ngIf="imgSrc && mediaRev && !isFlag"
        [attr.href]="imgHref"
        [analyticsString]="imgLinkAnalytics"
        [ngClass]="getClassesImg()"
      >
        <img
          class="sprk-c-Promo__image"
          alt="{{ imgAlt }}"
          src="{{ imgSrc }}"
        />
      </a>
    </div>
  `
            }]
    }], null, { title: [{
            type: Input
        }], subtitle: [{
            type: Input
        }], cta: [{
            type: Input
        }], ctaText: [{
            type: Input
        }], buttonHref: [{
            type: Input
        }], buttonLinkAnalytics: [{
            type: Input
        }], ctaLinkHref: [{
            type: Input
        }], ctaLinkAnalytics: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], additionalClassesContent: [{
            type: Input
        }], isFlag: [{
            type: Input
        }], additionalClassesFlagLink: [{
            type: Input
        }], flagLinkAnalytics: [{
            type: Input
        }], imgSrc: [{
            type: Input
        }], imgAlt: [{
            type: Input
        }], imgHref: [{
            type: Input
        }], imgLinkAnalytics: [{
            type: Input
        }], additionalClassesImgLink: [{
            type: Input
        }], mediaRev: [{
            type: Input
        }], hasBorder: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkPromoModule, { declarations: function () { return [SprkPromoComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule,
        SprkLinkDirectiveModule]; }, exports: function () { return [SprkPromoComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkPromoModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    SprkIconModule,
                    SprkLinkDirectiveModule
                ],
                declarations: [SprkPromoComponent],
                exports: [SprkPromoComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTabbedNavigationComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-tabbed-navigation',
                template: `
    <div [ngClass]="getClasses()" [attr.data-id]="idString">
      <div class="sprk-c-Tabs__buttons" role="tablist">
        <ng-content select="[sprkTabbedNavigationTab]"></ng-content>
      </div>
      <ng-content select="[sprkTabbedNavigationPane]"></ng-content>
      <ng-content></ng-content>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], onResize: [{
            type: HostListener,
            args: ['window:resize']
        }], onKeydown: [{
            type: HostListener,
            args: ['keydown', ['$event']]
        }], additionalClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }], tabs: [{
            type: ContentChildren,
            args: [SprkTabbedNavigationTabDirective]
        }], panels: [{
            type: ContentChildren,
            args: [SprkTabbedNavigationPanelDirective]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTabbedNavigationModule, { declarations: function () { return [SprkTabbedNavigationComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkTabbedNavigationComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTabbedNavigationModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkTabbedNavigationComponent],
                exports: [SprkTabbedNavigationComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-table',
                template: `
    <div [ngClass]="getClasses()" [attr.data-id]="idString">
      <table [ngClass]="getTableClasses()">
        <ng-content></ng-content>
      </table>
    </div>
  `
            }]
    }], null, { additionalClasses: [{
            type: Input
        }], additionalTableClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTableModule, { declarations: function () { return [SprkTableComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkTableComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTableModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkTableComponent],
                exports: [SprkTableComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkButtonDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkButton]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { isSpinning: [{
            type: Input
        }], spinningAriaLabel: [{
            type: Input
        }], variant: [{
            type: Input
        }], true: [{
            type: HostBinding,
            args: ['class.sprk-c-Button']
        }], idString: [{
            type: HostBinding,
            args: ['attr.data-id']
        }, {
            type: Input
        }], analyticsString: [{
            type: HostBinding,
            args: ['attr.data-analytics']
        }, {
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkButtonModule, { declarations: function () { return [SprkButtonDirective]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SprkButtonDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkButtonModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                declarations: [SprkButtonDirective],
                exports: [SprkButtonDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkAwardComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-award',
                template: `
    <sprk-stack
      itemSpacing="medium"
      additionalClasses="{{ additionalClasses }}"
    >
      <h2
        sprkStackItem
        [attr.data-id]="idString"
        class="
          sprk-o-Stack__item
          sprk-b-TypeDisplayFive
          sprk-b-Measure sprk-b-Measure--narrow
          sprk-u-TextAlign--center
          sprk-o-Stack__item--center-column
        "
      >
        {{ title }}
      </h2>

      <div sprkStackItem [ngClass]="getClasses()">
        <div
          [ngClass]="getImgContainerClasses()"
        >
          <a
            sprkLink
            variant="unstyled"
            class="sprk-o-Stack"
            [attr.href]="imgOneHref"
            [analyticsString]="analyticsStringImgOne"
          >
            <img
              [ngClass]="getClassesImgOne()"
              alt="{{ imgOneAlt }}"
              src="{{ imgOneSrc }}"
            />
          </a>
        </div>
        <div
          [ngClass]="getImgContainerClasses()"
        >
          <a
            sprkLink
            variant="unstyled"
            class="sprk-o-Stack"
            [attr.href]="imgTwoHref"
            [analyticsString]="analyticsStringImgTwo"
          >
            <img
              [ngClass]="getClassesImgTwo()"
              alt="{{ imgTwoAlt }}"
              src="{{ imgTwoSrc }}"
            />
          </a>
        </div>
      </div>

      <sprk-toggle
        *ngIf="disclaimer !== 'false'"
        sprkStackItem
        additionalClasses="sprk-o-Stack__item--start-column"
        toggleType="base"
        title="{{ disclaimerTitle }}"
        analyticsString="{{ analyticsStringDisclaimer }}"
      >
        <p class="sprk-b-TypeBodyFour">{{ disclaimerCopy }}</p>
      </sprk-toggle>
    </sprk-stack>
  `
            }]
    }], null, { splitAt: [{
            type: Input
        }], imgOneAlt: [{
            type: Input
        }], imgOneHref: [{
            type: Input
        }], imgTwoHref: [{
            type: Input
        }], imgTwoAlt: [{
            type: Input
        }], imgOneSrc: [{
            type: Input
        }], imgTwoSrc: [{
            type: Input
        }], analyticsStringImgOne: [{
            type: Input
        }], analyticsStringImgTwo: [{
            type: Input
        }], analyticsStringDisclaimer: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], additionalClassesImgOne: [{
            type: Input
        }], additionalClassesImgTwo: [{
            type: Input
        }], title: [{
            type: Input
        }], disclaimerTitle: [{
            type: Input
        }], disclaimerCopy: [{
            type: Input
        }], disclaimer: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkAwardModule, { declarations: function () { return [SprkAwardComponent]; }, imports: function () { return [CommonModule,
        SprkStackModule,
        SprkStackItemModule,
        SprkLinkDirectiveModule,
        SprkToggleModule]; }, exports: function () { return [SprkAwardComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkAwardModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    SprkStackModule,
                    SprkStackItemModule,
                    SprkLinkDirectiveModule,
                    SprkToggleModule
                ],
                declarations: [SprkAwardComponent],
                exports: [SprkAwardComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkCardComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-card',
                template: `
    <div
      [ngClass]="getClassesCard()"
      *ngIf="cardType === 'teaser'"
      [attr.data-id]="idString"
    >
      <a
        sprkLink
        variant="unstyled"
        *ngIf="media === 'img'"
        [href]="imgHref"
        class="sprk-o-Stack__item"
        [analyticsString]="imgLinkAnalytics"
      >
        <img
          class="sprk-c-Card__media"
          [attr.alt]="imgAlt"
          [attr.src]="imgSrc"
        />
      </a>

      <div
        [ngClass]="{
          'sprk-o-Stack__item': true,
          'sprk-c-Card__content': true,
          'sprk-o-Stack': true,
          'sprk-o-Stack--medium': true,
          'sprk-u-TextAlign--center': media === 'icon'
        }"
      >
        <a
          sprkLink
          variant="unstyled"
          *ngIf="media === 'icon'"
          [attr.href]="iconHref"
          class="sprk-o-Stack__item sprk-u-AbsoluteCenter"
          [analyticsString]="iconLinkAnalytics"
        >
          <sprk-icon
            [iconType]="iconType"
            [additionalClasses]="additionalClassesIcon"
          ></sprk-icon>
        </a>

        <h3 class="sprk-b-TypeDisplayFive sprk-o-Stack__item">{{ title }}</h3>

        <p class="sprk-b-TypeBodyTwo sprk-o-Stack__item">{{ body }}</p>

        <div class="sprk-o-Stack__item">
          <a
            sprkLink
            variant="unstyled"
            [attr.href]="ctaHref"
            [ngClass]="getClassesCta()"
            [analyticsString]="ctaAnalytics"
          >
            {{ ctaText }}
            <sprk-icon
              *ngIf="ctaIcon && (ctaType === 'link')"
              [iconType]="ctaIcon"
            ></sprk-icon>
          </a>
        </div>
      </div>
    </div>

    <div
      [ngClass]="getClassesCard()"
      *ngIf="cardType === 'base'"
      [attr.data-id]="idString"
    >
      <ng-content></ng-content>
    </div>

    <div
      [ngClass]="getClassesCard()"
      *ngIf="cardType === 'teaserHeading'"
      [attr.data-id]="idString"
    >
      <h3
        class="sprk-o-Stack__item sprk-c-Card__content sprk-b-TypeDisplayFive"
      >
        {{ title }}
      </h3>

      <div
        class="sprk-o-Stack__item sprk-c-Card__content sprk-o-Stack sprk-o-Stack--medium"
      >
        <a
          sprkLink
          variant="unstyled"
          *ngIf="media === 'img'"
          [attr.href]="imgHref"
          class="sprk-o-Stack__item"
          [analyticsString]="imgLinkAnalytics"
        >
          <img [attr.alt]="imgAlt" [attr.src]="imgSrc" />
        </a>

        <a
          sprkLink
          *ngIf="media === 'icon'"
          [attr.href]="iconHref"
          variant="unstyled"
          class="sprk-o-Stack__item sprk-o-Stack__item--center"
          [analyticsString]="iconLinkAnalytics"
        >
          <sprk-icon
            [iconType]="iconType"
            [additionalClasses]="additionalClassesIcon"
          ></sprk-icon>
        </a>

        <p class="sprk-b-TypeBodyTwo sprk-o-Stack__item">{{ body }}</p>

        <div class="sprk-o-Stack__item">
          <a
            sprkLink
            variant="unstyled"
            [attr.href]="ctaHref"
            [ngClass]="getClassesCta()"
            [analyticsString]="ctaAnalytics"
          >
            {{ ctaText }}
            <sprk-icon
              *ngIf="ctaIcon && (ctaType === 'link')"
              [iconType]="ctaIcon"
            ></sprk-icon>
          </a>
        </div>
      </div>
    </div>
  `
            }]
    }], function () { return []; }, { cardType: [{
            type: Input
        }], ctaType: [{
            type: Input
        }], body: [{
            type: Input
        }], media: [{
            type: Input
        }], additionalClassesIcon: [{
            type: Input
        }], title: [{
            type: Input
        }], imgSrc: [{
            type: Input
        }], imgAlt: [{
            type: Input
        }], iconType: [{
            type: Input
        }], iconHref: [{
            type: Input
        }], imgHref: [{
            type: Input
        }], ctaIcon: [{
            type: Input
        }], ctaText: [{
            type: Input
        }], ctaAnalytics: [{
            type: Input
        }], imgLinkAnalytics: [{
            type: Input
        }], iconLinkAnalytics: [{
            type: Input
        }], ctaHref: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], additionalCtaClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkCardModule, { declarations: function () { return [SprkCardComponent]; }, imports: function () { return [CommonModule,
        SprkIconModule,
        SprkLinkDirectiveModule]; }, exports: function () { return [SprkCardComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkCardModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],
                declarations: [SprkCardComponent],
                exports: [SprkCardComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkDictionaryComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-dictionary',
                template: `
    <div [ngClass]="getClasses()" [attr.data-id]="idString">
      <dl class="sprk-c-Dictionary__keyvaluepairs">
        <div
          *ngFor="let key of objectKeys(data)"
          class="sprk-c-Dictionary__keyvaluepair"
        >
          <dt
            class="sprk-c-Dictionary__key sprk-b-Label sprk-b-Label--no-input"
          >
            {{ key }}
          </dt>
          <dd class="sprk-c-Dictionary__value">{{ data[key] }}</dd>
        </div>
      </dl>
    </div>
  `
            }]
    }], function () { return []; }, { data: [{
            type: Input
        }], dictionaryType: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkDictionaryModule, { declarations: function () { return [SprkDictionaryComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SprkDictionaryComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkDictionaryModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [SprkDictionaryComponent],
                exports: [SprkDictionaryComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkHighlightBoardComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-highlight-board',
                template: `
    <div [ngClass]="getClasses()" [attr.data-id]="idString">
      <img
        *ngIf="type !== 'noImage'"
        class="sprk-c-HighlightBoard__image"
        src="{{ imgSrc }}"
        alt="{{ imgAlt }}"
      />

      <sprk-stack
        sprkStackItem
        itemSpacing="large"
        additionalClasses="sprk-c-HighlightBoard__content"
      >
        <h1
          sprkStackItem
          [ngClass]="{
            'sprk-b-TypeDisplayTwo': type === 'noImage',
            'sprk-b-TypeDisplayOne': type !== 'noImage',
            'sprk-c-HighlightBoard__heading': true
          }"
        >
          {{ heading }}
        </h1>

        <sprk-stack
          sprkStackItem
          *ngIf="ctaText"
          itemSpacing="medium"
          splitAt="tiny"
          additionalClasses="sprk-o-Stack--center-column {{ centerBtns }}"
        >
          <div sprkStackItem class="sprk-c-HighlightBoard__cta">
            <a
              sprkLink
              variant="unstyled"
              [attr.href]="ctaHref"
              class="sprk-c-Button sprk-c-Button--primary sprk-c-Button--full@sm"
              [analyticsString]="analyticsStringCta"
            >
              {{ ctaText }}
            </a>
          </div>

          <div
            sprkStackItem
            *ngIf="ctaText2"
            class="sprk-c-HighlightBoard__cta"
          >
            <a
              sprkLink
              variant="unstyled"
              [attr.href]="ctaHref2"
              class="sprk-c-Button sprk-c-Button--secondary sprk-c-Button--full@sm"
              [analyticsString]="analyticsStringCta2"
            >
              {{ ctaText2 }}
            </a>
          </div>
        </sprk-stack>
      </sprk-stack>
    </div>
  `
            }]
    }], function () { return []; }, { heading: [{
            type: Input
        }], imgSrc: [{
            type: Input
        }], imgAlt: [{
            type: Input
        }], ctaText: [{
            type: Input
        }], ctaHref: [{
            type: Input
        }], ctaText2: [{
            type: Input
        }], ctaHref2: [{
            type: Input
        }], analyticsStringCta: [{
            type: Input
        }], analyticsStringCta2: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], type: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkHighlightBoardModule, { declarations: function () { return [SprkHighlightBoardComponent]; }, imports: function () { return [CommonModule,
        SprkStackModule,
        SprkStackItemModule,
        SprkLinkDirectiveModule]; }, exports: function () { return [SprkHighlightBoardComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkHighlightBoardModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    SprkStackModule,
                    SprkStackItemModule,
                    SprkLinkDirectiveModule
                ],
                declarations: [SprkHighlightBoardComponent],
                exports: [SprkHighlightBoardComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkBoxDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkBox]'
            }]
    }], function () { return []; }, { flush: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--flush']
        }], tiny: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--tiny']
        }], small: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--small']
        }], medium: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--medium']
        }], large: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--large']
        }], huge: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--huge']
        }], insetShortTiny: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-short-tiny']
        }], insetShortSmall: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-short-small']
        }], insetShortMedium: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-short-medium']
        }], insetShortLarge: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-short-large']
        }], insetShortHuge: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-short-huge']
        }], insetTallTiny: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-tall-tiny']
        }], insetTallSmall: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-tall-small']
        }], insetTallMedium: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-tall-medium']
        }], insetTallLarge: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-tall-large']
        }], insetTallHuge: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--inset-tall-huge']
        }], miscA: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--misc-a']
        }], miscB: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--misc-b']
        }], miscC: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--misc-c']
        }], miscD: [{
            type: HostBinding,
            args: ['class.sprk-o-Box--misc-d']
        }], spacing: [{
            type: Input
        }], true: [{
            type: HostBinding,
            args: ['class.sprk-o-Box']
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkBoxModule, { declarations: function () { return [SprkBoxDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SprkBoxDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkBoxModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [SprkBoxDirective],
                exports: [SprkBoxDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTextDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkText]'
            }]
    }], function () { return []; }, { textOne: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeBodyOne']
        }], textTwo: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeBodyTwo']
        }], textThree: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeBodyThree']
        }], textFour: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeBodyFour']
        }], variant: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkTextModule, { declarations: [SprkTextDirective], exports: [SprkTextDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkTextModule, [{
        type: NgModule,
        args: [{
                declarations: [SprkTextDirective],
                exports: [SprkTextDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkHeadingDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkHeading]'
            }]
    }], function () { return []; }, { isPageTitle: [{
            type: HostBinding,
            args: ['class.sprk-b-PageTitle']
        }, {
            type: Input
        }], headingOne: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeDisplayOne']
        }], headingTwo: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeDisplayTwo']
        }], headingThree: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeDisplayThree']
        }], headingFour: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeDisplayFour']
        }], headingFive: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeDisplayFive']
        }], headingSix: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeDisplaySix']
        }], headingSeven: [{
            type: HostBinding,
            args: ['class.sprk-b-TypeDisplaySeven']
        }], variant: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkHeadingModule, { declarations: [SprkHeadingDirective], exports: [SprkHeadingDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkHeadingModule, [{
        type: NgModule,
        args: [{
                declarations: [SprkHeadingDirective],
                exports: [SprkHeadingDirective]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFlagComponent, [{
        type: Component,
        args: [{
                selector: 'sprk-flag',
                template: `
    <div
      [ngClass]="getClasses()"
      [attr.data-id]="idString"
    >
      <div [ngClass]="getMediaClasses()">
        <ng-content select="[media-slot]"></ng-content>
      </div>
      <div [ngClass]="getBodyClasses()">
        <ng-content select="[body-slot]"></ng-content>
      </div>
    </div>
  `
            }]
    }], function () { return []; }, { isReversed: [{
            type: Input
        }], isStacked: [{
            type: Input
        }], spacing: [{
            type: Input
        }], verticalAlignment: [{
            type: Input
        }], additionalClasses: [{
            type: Input
        }], additionalMediaClasses: [{
            type: Input
        }], additionalBodyClasses: [{
            type: Input
        }], idString: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkFlagModule, { declarations: function () { return [SprkFlagComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SprkFlagComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkFlagModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [SprkFlagComponent],
                exports: [SprkFlagComponent]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkCenteredColumnDirective, [{
        type: Directive,
        args: [{
                selector: '[sprkCenteredColumn]'
            }]
    }], null, { true: [{
            type: HostBinding,
            args: ['class.sprk-o-CenteredColumn']
        }], idString: [{
            type: HostBinding,
            args: ['attr.data-id']
        }, {
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SprkCenteredColumnModule, { declarations: function () { return [SprkCenteredColumnDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SprkCenteredColumnDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SprkCenteredColumnModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [SprkCenteredColumnDirective],
                exports: [SprkCenteredColumnDirective]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SparkAngularModule, { exports: [SprkAlertModule,
        SprkAccordionModule,
        SprkAccordionItemModule,
        SprkAwardModule,
        SprkButtonModule,
        SprkCardModule,
        SprkDictionaryModule,
        SprkDividerModule,
        SprkDropdownModule,
        SprkLinkModule,
        SprkHighlightBoardModule,
        SprkModalModule,
        SprkOrderedListModule,
        SprkUnorderedListModule,
        SprkListItemModule,
        SparkInputContainerModule,
        SprkHugeInputContainerModule,
        SprkTextareaContainerModule,
        SprkIconInputContainerModule,
        SprkSelectionContainerModule,
        SprkSelectionItemContainerModule,
        SprkMastheadModule,
        SprkInputModule,
        SprkSelectionInputModule,
        SprkHelperTextModule,
        SprkLabelModule,
        SprkSelectionLabelModule,
        SprkFieldErrorModule,
        SprkFormatterPhoneNumberModule,
        SprkFormatterDateModule,
        SprkFormatterMonetaryModule,
        SprkFormatterSsnModule,
        SprkDatepickerModule,
        SprkPromoModule,
        SprkTableModule,
        SprkTableHeadModule,
        SprkTableGroupedColumnModule,
        SprkTableEmptyHeadingModule,
        SprkTableRowHeadingModule,
        SprkTabbedNavigationTabModule,
        SprkTabbedNavigationPanelModule,
        SprkPaginationModule,
        SprkStackModule,
        SprkStackItemModule,
        SprkToggleModule,
        SprkIconModule,
        SprkFooterModule,
        SprkTabbedNavigationModule,
        SprkBoxModule,
        SprkTextModule,
        SprkHeadingModule,
        SprkLinkDirectiveModule,
        SprkFlagModule,
        SprkCenteredColumnModule] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SparkAngularModule, [{
        type: NgModule,
        args: [{
                exports: [
                    SprkAlertModule,
                    SprkAccordionModule,
                    SprkAccordionItemModule,
                    SprkAwardModule,
                    SprkButtonModule,
                    SprkCardModule,
                    SprkDictionaryModule,
                    SprkDividerModule,
                    SprkDropdownModule,
                    SprkLinkModule,
                    SprkHighlightBoardModule,
                    SprkModalModule,
                    SprkOrderedListModule,
                    SprkUnorderedListModule,
                    SprkListItemModule,
                    SparkInputContainerModule,
                    SprkHugeInputContainerModule,
                    SprkTextareaContainerModule,
                    SprkIconInputContainerModule,
                    SprkSelectionContainerModule,
                    SprkSelectionItemContainerModule,
                    SprkMastheadModule,
                    SprkInputModule,
                    SprkSelectionInputModule,
                    SprkHelperTextModule,
                    SprkLabelModule,
                    SprkSelectionLabelModule,
                    SprkFieldErrorModule,
                    SprkFormatterPhoneNumberModule,
                    SprkFormatterDateModule,
                    SprkFormatterMonetaryModule,
                    SprkFormatterSsnModule,
                    SprkDatepickerModule,
                    SprkPromoModule,
                    SprkTableModule,
                    SprkTableHeadModule,
                    SprkTableGroupedColumnModule,
                    SprkTableEmptyHeadingModule,
                    SprkTableRowHeadingModule,
                    SprkTabbedNavigationTabModule,
                    SprkTabbedNavigationPanelModule,
                    SprkPaginationModule,
                    SprkStackModule,
                    SprkStackItemModule,
                    SprkToggleModule,
                    SprkIconModule,
                    SprkFooterModule,
                    SprkTabbedNavigationModule,
                    SprkBoxModule,
                    SprkTextModule,
                    SprkHeadingModule,
                    SprkLinkDirectiveModule,
                    SprkFlagModule,
                    SprkCenteredColumnModule,
                ]
            }]
    }], null, null); })();

/*
 * Public API Surface of spark-angular
 */

/**
 * Generated bundle index. Do not edit.
 */

export { SparkAngularModule, SparkInputContainerComponent, SparkInputContainerModule, SprkAccordionComponent, SprkAccordionItemComponent, SprkAccordionItemModule, SprkAccordionModule, SprkAlertComponent, SprkAlertModule, SprkAwardComponent, SprkAwardModule, SprkBoxDirective, SprkBoxModule, SprkButtonDirective, SprkButtonModule, SprkCardComponent, SprkCardModule, SprkCenteredColumnDirective, SprkCenteredColumnModule, SprkDatepickerDirective, SprkDatepickerModule, SprkDictionaryComponent, SprkDictionaryModule, SprkDividerComponent, SprkDividerModule, SprkDropdownComponent, SprkDropdownModule, SprkFieldErrorDirective, SprkFieldErrorModule, SprkFlagComponent, SprkFlagModule, SprkFooterComponent, SprkFooterModule, SprkFormatterDateDirective, SprkFormatterDateModule, SprkFormatterMonetaryDirective, SprkFormatterMonetaryModule, SprkFormatterPhoneNumberDirective, SprkFormatterPhoneNumberModule, SprkFormatterSsnDirective, SprkFormatterSsnModule, SprkHeadingDirective, SprkHeadingModule, SprkHelperTextDirective, SprkHelperTextModule, SprkHighlightBoardComponent, SprkHighlightBoardModule, SprkHugeInputContainerComponent, SprkHugeInputContainerModule, SprkIconComponent, SprkIconInputContainerComponent, SprkIconInputContainerModule, SprkIconModule, SprkInputDirective, SprkInputModule, SprkLabelDirective, SprkLabelModule, SprkLinkComponent, SprkLinkDirective, SprkLinkDirectiveModule, SprkLinkModule, SprkListItemComponent, SprkListItemModule, SprkMastheadAccordionComponent, SprkMastheadAccordionItemComponent, SprkMastheadAccordionItemModule, SprkMastheadAccordionModule, SprkMastheadComponent, SprkMastheadModule, SprkModalComponent, SprkModalModule, SprkOrderedListComponent, SprkOrderedListModule, SprkPaginationComponent, SprkPaginationModule, SprkPromoComponent, SprkPromoModule, SprkSelectionContainerComponent, SprkSelectionContainerModule, SprkSelectionInputDirective, SprkSelectionInputModule, SprkSelectionItemContainerComponent, SprkSelectionItemContainerModule, SprkSelectionLabelDirective, SprkSelectionLabelModule, SprkStackComponent, SprkStackItemDirective, SprkStackItemModule, SprkStackModule, SprkTabbedNavigationComponent, SprkTabbedNavigationModule, SprkTabbedNavigationPanelDirective, SprkTabbedNavigationPanelModule, SprkTabbedNavigationTabDirective, SprkTabbedNavigationTabModule, SprkTableComponent, SprkTableEmptyHeadingDirective, SprkTableEmptyHeadingModule, SprkTableGroupedColumnDirective, SprkTableGroupedColumnModule, SprkTableHeadDirective, SprkTableHeadModule, SprkTableModule, SprkTableRowHeadingDirective, SprkTableRowHeadingModule, SprkTextDirective, SprkTextModule, SprkTextareaContainerComponent, SprkTextareaContainerModule, SprkToggleComponent, SprkToggleModule, SprkUnorderedListComponent, SprkUnorderedListModule, toggleAnimations, SprkAlertModule as ɵa, SprkIconModule as ɵb, SprkDropdownModule as ɵba, SprkDropdownComponent as ɵbb, SprkHighlightBoardModule as ɵbc, SprkHighlightBoardComponent as ɵbd, SprkModalModule as ɵbe, SprkModalComponent as ɵbf, SprkOrderedListModule as ɵbg, SprkOrderedListComponent as ɵbh, SprkUnorderedListModule as ɵbi, SprkUnorderedListComponent as ɵbj, SprkListItemModule as ɵbk, SprkListItemComponent as ɵbl, SparkInputContainerModule as ɵbm, SparkInputContainerComponent as ɵbn, SprkLabelDirective as ɵbo, SprkInputDirective as ɵbp, SprkFieldErrorDirective as ɵbq, SprkTextareaContainerModule as ɵbr, SprkTextareaContainerComponent as ɵbs, SprkIconInputContainerModule as ɵbt, SprkIconInputContainerComponent as ɵbu, SprkSelectionContainerModule as ɵbv, SprkSelectionContainerComponent as ɵbw, SprkSelectionItemContainerComponent as ɵbx, SprkSelectionLabelDirective as ɵby, SprkSelectionInputDirective as ɵbz, SprkIconComponent as ɵc, SprkSelectionItemContainerModule as ɵca, SprkMastheadModule as ɵcb, SprkMastheadAccordionModule as ɵcc, SprkMastheadAccordionComponent as ɵcd, SprkMastheadAccordionItemModule as ɵce, SprkMastheadAccordionItemComponent as ɵcf, SprkMastheadComponent as ɵcg, SprkInputModule as ɵch, SprkSelectionInputModule as ɵci, SprkHelperTextModule as ɵcj, SprkHelperTextDirective as ɵck, SprkLabelModule as ɵcl, SprkSelectionLabelModule as ɵcm, SprkFieldErrorModule as ɵcn, SprkFormatterPhoneNumberModule as ɵco, SprkFormatterPhoneNumberDirective as ɵcp, SprkFormatterDateModule as ɵcq, SprkFormatterDateDirective as ɵcr, SprkFormatterMonetaryModule as ɵcs, SprkFormatterMonetaryDirective as ɵct, SprkFormatterSsnModule as ɵcu, SprkFormatterSsnDirective as ɵcv, SprkDatepickerModule as ɵcw, SprkDatepickerDirective as ɵcx, SprkPromoModule as ɵcy, SprkPromoComponent as ɵcz, SprkAlertComponent as ɵd, SprkTableModule as ɵda, SprkTableComponent as ɵdb, SprkTableHeadModule as ɵdc, SprkTableHeadDirective as ɵdd, SprkTableGroupedColumnModule as ɵde, SprkTableGroupedColumnDirective as ɵdf, SprkTableEmptyHeadingModule as ɵdg, SprkTableEmptyHeadingDirective as ɵdh, SprkTableRowHeadingModule as ɵdi, SprkTableRowHeadingDirective as ɵdj, SprkTabbedNavigationTabModule as ɵdk, SprkTabbedNavigationTabDirective as ɵdl, SprkTabbedNavigationPanelModule as ɵdm, SprkTabbedNavigationPanelDirective as ɵdn, SprkPaginationModule as ɵdo, SprkPaginationComponent as ɵdp, SprkFooterModule as ɵdq, SprkFooterComponent as ɵdr, SprkTabbedNavigationModule as ɵds, SprkTabbedNavigationComponent as ɵdt, SprkAccordionModule as ɵe, SprkLinkModule as ɵf, SprkLinkComponent as ɵg, SprkAccordionComponent as ɵh, SprkAccordionItemModule as ɵi, SprkAccordionItemComponent as ɵj, SprkAwardModule as ɵk, SprkStackModule as ɵl, SprkStackComponent as ɵm, SprkStackItemModule as ɵn, SprkStackItemDirective as ɵo, SprkToggleModule as ɵp, SprkToggleComponent as ɵq, SprkAwardComponent as ɵr, SprkButtonModule as ɵs, SprkButtonDirective as ɵt, SprkCardModule as ɵu, SprkCardComponent as ɵv, SprkDictionaryModule as ɵw, SprkDictionaryComponent as ɵx, SprkDividerModule as ɵy, SprkDividerComponent as ɵz };

//# sourceMappingURL=sparkdesignsystem-spark-angular.js.map