import { OnInit } from '@angular/core';
import { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';
import { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';
import { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';
import * as ɵngcc0 from '@angular/core';
export declare class SprkTextareaContainerComponent implements OnInit {
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component.
     */
    additionalClasses: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * icon container.
     */
    iconContainerClasses: string;
    /**
     * This component expects a child label element
     * with the `sprkLabel` directive.
     */
    label: SprkLabelDirective;
    /**
     * This component expects a child input element
     * with the `sprkInput` directive.
     */
    input: SprkInputDirective;
    /**
     * This component expects a child element
     * with the `sprkFieldError` directive.
     */
    error: SprkFieldErrorDirective;
    /**
     * @ignore
     */
    id: string;
    /**
     * @ignore
     */
    input_id: string;
    /**
     * @ignore
     */
    error_id: string;
    /**
     * @ignore
     */
    getClasses(): string;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkTextareaContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkTextareaContainerComponent, "sprk-textarea-container", never, { "additionalClasses": "additionalClasses"; "iconContainerClasses": "iconContainerClasses"; }, {}, ["label", "input", "error"], ["[sprkLabel]", "[sprkInput]", "sprk-selection-item-container", "[sprkHelperText]", "[sprkFieldError]"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay10ZXh0YXJlYS1jb250YWluZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNwcmstdGV4dGFyZWEtY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vLi4vZGlyZWN0aXZlcy9pbnB1dHMvc3Byay1maWVsZC1lcnJvci9zcHJrLWZpZWxkLWVycm9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTcHJrSW5wdXREaXJlY3RpdmUgfSBmcm9tICcuLi8uLi8uLi9kaXJlY3RpdmVzL2lucHV0cy9zcHJrLWlucHV0L3NwcmstaW5wdXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFNwcmtMYWJlbERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uLy4uL2RpcmVjdGl2ZXMvaW5wdXRzL3NwcmstbGFiZWwvc3Byay1sYWJlbC5kaXJlY3RpdmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3Bya1RleHRhcmVhQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICAvKipcbiAgICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAgICogY29tcG9uZW50LlxuICAgICAqL1xuICAgIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgICAqIGljb24gY29udGFpbmVyLlxuICAgICAqL1xuICAgIGljb25Db250YWluZXJDbGFzc2VzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhpcyBjb21wb25lbnQgZXhwZWN0cyBhIGNoaWxkIGxhYmVsIGVsZW1lbnRcbiAgICAgKiB3aXRoIHRoZSBgc3Bya0xhYmVsYCBkaXJlY3RpdmUuXG4gICAgICovXG4gICAgbGFiZWw6IFNwcmtMYWJlbERpcmVjdGl2ZTtcbiAgICAvKipcbiAgICAgKiBUaGlzIGNvbXBvbmVudCBleHBlY3RzIGEgY2hpbGQgaW5wdXQgZWxlbWVudFxuICAgICAqIHdpdGggdGhlIGBzcHJrSW5wdXRgIGRpcmVjdGl2ZS5cbiAgICAgKi9cbiAgICBpbnB1dDogU3Bya0lucHV0RGlyZWN0aXZlO1xuICAgIC8qKlxuICAgICAqIFRoaXMgY29tcG9uZW50IGV4cGVjdHMgYSBjaGlsZCBlbGVtZW50XG4gICAgICogd2l0aCB0aGUgYHNwcmtGaWVsZEVycm9yYCBkaXJlY3RpdmUuXG4gICAgICovXG4gICAgZXJyb3I6IFNwcmtGaWVsZEVycm9yRGlyZWN0aXZlO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBpZDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBpbnB1dF9pZDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBlcnJvcl9pZDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBnZXRDbGFzc2VzKCk6IHN0cmluZztcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xufVxuIl19