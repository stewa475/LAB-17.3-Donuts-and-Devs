import * as ɵngcc0 from '@angular/core';
export declare class SprkAlertComponent {
    /**
     * The type of Alert variant to render.
     * 	Can be `info`, `fail`, or `success`.
     */
    alertType: string;
    /**
     * The value supplied will be assigned to the
     * `data-analytics` attribute on the component.
     * Intended for an outside
     * library to capture data.
     */
    analyticsString: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component.
     */
    additionalClasses: string;
    /**
     * If `false`, the dismiss button will not be rendered and
     * the Alert will not dismissible.
     * If `true`, the dismiss button will be rendered and
     * the Alert will be dismissible.
     */
    dismissible: boolean;
    /**
     * @ignore
     */
    icon: string;
    /**
     * @ignore
     */
    visible: boolean;
    /**
     * @ignore
     */
    getClassesAlertContainer(): string;
    /**
     * When the dismiss button is clicked
     * this method sets the visable state to `false`
     * and hides the Alert component.
     */
    alertDismiss(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkAlertComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkAlertComponent, "sprk-alert", never, { "alertType": "alertType"; "analyticsString": "analyticsString"; "idString": "idString"; "additionalClasses": "additionalClasses"; "dismissible": "dismissible"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1hbGVydC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic3Byay1hbGVydC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVjbGFyZSBjbGFzcyBTcHJrQWxlcnRDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIFRoZSB0eXBlIG9mIEFsZXJ0IHZhcmlhbnQgdG8gcmVuZGVyLlxuICAgICAqIFx0Q2FuIGJlIGBpbmZvYCwgYGZhaWxgLCBvciBgc3VjY2Vzc2AuXG4gICAgICovXG4gICAgYWxlcnRUeXBlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWQgdG8gdGhlXG4gICAgICogYGRhdGEtYW5hbHl0aWNzYCBhdHRyaWJ1dGUgb24gdGhlIGNvbXBvbmVudC5cbiAgICAgKiBJbnRlbmRlZCBmb3IgYW4gb3V0c2lkZVxuICAgICAqIGxpYnJhcnkgdG8gY2FwdHVyZSBkYXRhLlxuICAgICAqL1xuICAgIGFuYWx5dGljc1N0cmluZzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkXG4gICAgICogdG8gdGhlIGBkYXRhLWlkYCBhdHRyaWJ1dGUgb24gdGhlXG4gICAgICogY29tcG9uZW50LiBUaGlzIGlzIGludGVuZGVkIHRvIGJlXG4gICAgICogdXNlZCBhcyBhIHNlbGVjdG9yIGZvciBhdXRvbWF0ZWRcbiAgICAgKiB0b29scy4gVGhpcyB2YWx1ZSBzaG91bGQgYmUgdW5pcXVlXG4gICAgICogcGVyIHBhZ2UuXG4gICAgICovXG4gICAgaWRTdHJpbmc6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAgICogY29tcG9uZW50LlxuICAgICAqL1xuICAgIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogSWYgYGZhbHNlYCwgdGhlIGRpc21pc3MgYnV0dG9uIHdpbGwgbm90IGJlIHJlbmRlcmVkIGFuZFxuICAgICAqIHRoZSBBbGVydCB3aWxsIG5vdCBkaXNtaXNzaWJsZS5cbiAgICAgKiBJZiBgdHJ1ZWAsIHRoZSBkaXNtaXNzIGJ1dHRvbiB3aWxsIGJlIHJlbmRlcmVkIGFuZFxuICAgICAqIHRoZSBBbGVydCB3aWxsIGJlIGRpc21pc3NpYmxlLlxuICAgICAqL1xuICAgIGRpc21pc3NpYmxlOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBpY29uOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIHZpc2libGU6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGdldENsYXNzZXNBbGVydENvbnRhaW5lcigpOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogV2hlbiB0aGUgZGlzbWlzcyBidXR0b24gaXMgY2xpY2tlZFxuICAgICAqIHRoaXMgbWV0aG9kIHNldHMgdGhlIHZpc2FibGUgc3RhdGUgdG8gYGZhbHNlYFxuICAgICAqIGFuZCBoaWRlcyB0aGUgQWxlcnQgY29tcG9uZW50LlxuICAgICAqL1xuICAgIGFsZXJ0RGlzbWlzcyhldmVudDogYW55KTogdm9pZDtcbn1cbiJdfQ==