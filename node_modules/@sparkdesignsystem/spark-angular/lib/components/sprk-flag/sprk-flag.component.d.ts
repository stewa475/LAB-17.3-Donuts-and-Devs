import * as ɵngcc0 from '@angular/core';
export declare class SprkFlagComponent {
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component container.
     */
    additionalClasses: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * container of the media-slot.
     */
    additionalMediaClasses: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * container of the body-slot.
     */
    additionalBodyClasses: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * The Flag component will use this to decide where
     * the media-slot is rendered in relation to the
     * body-slot. The default is the media-slot is on
     * the left of the body-slot. isReversed="true" places the
     * media-slot on the right of the body-slot.
     */
    isReversed: boolean;
    /**
     * The Flag component will use this to stack
     * the element at the `$sprk-flag-stacked-breakpoint`
     */
    isStacked: boolean;
    /**
     * Determines how much space between the
     * media and the body.
     */
    spacing: 'flush' | 'tiny' | 'small' | 'medium' | 'large' | 'huge';
    /**
     * Determines the vertical alignment of content.
     */
    verticalAlignment: 'top' | 'middle' | 'bottom';
    /**
     * @ignore
     */
    getClasses(): string;
    /**
     * @ignore
     */
    getMediaClasses(): string;
    /**
     * @ignore
     */
    getBodyClasses(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkFlagComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkFlagComponent, "sprk-flag", never, { "isReversed": "isReversed"; "isStacked": "isStacked"; "spacing": "spacing"; "verticalAlignment": "verticalAlignment"; "additionalClasses": "additionalClasses"; "additionalMediaClasses": "additionalMediaClasses"; "additionalBodyClasses": "additionalBodyClasses"; "idString": "idString"; }, {}, never, ["[media-slot]", "[body-slot]"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1mbGFnLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzcHJrLWZsYWcuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3Bya0ZsYWdDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICAgKiBjb21wb25lbnQgY29udGFpbmVyLlxuICAgICAqL1xuICAgIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgICAqIGNvbnRhaW5lciBvZiB0aGUgbWVkaWEtc2xvdC5cbiAgICAgKi9cbiAgICBhZGRpdGlvbmFsTWVkaWFDbGFzc2VzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgICAqIGNvbnRhaW5lciBvZiB0aGUgYm9keS1zbG90LlxuICAgICAqL1xuICAgIGFkZGl0aW9uYWxCb2R5Q2xhc3Nlczogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkXG4gICAgICogdG8gdGhlIGBkYXRhLWlkYCBhdHRyaWJ1dGUgb24gdGhlXG4gICAgICogY29tcG9uZW50LiBUaGlzIGlzIGludGVuZGVkIHRvIGJlXG4gICAgICogdXNlZCBhcyBhIHNlbGVjdG9yIGZvciBhdXRvbWF0ZWRcbiAgICAgKiB0b29scy4gVGhpcyB2YWx1ZSBzaG91bGQgYmUgdW5pcXVlXG4gICAgICogcGVyIHBhZ2UuXG4gICAgICovXG4gICAgaWRTdHJpbmc6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgRmxhZyBjb21wb25lbnQgd2lsbCB1c2UgdGhpcyB0byBkZWNpZGUgd2hlcmVcbiAgICAgKiB0aGUgbWVkaWEtc2xvdCBpcyByZW5kZXJlZCBpbiByZWxhdGlvbiB0byB0aGVcbiAgICAgKiBib2R5LXNsb3QuIFRoZSBkZWZhdWx0IGlzIHRoZSBtZWRpYS1zbG90IGlzIG9uXG4gICAgICogdGhlIGxlZnQgb2YgdGhlIGJvZHktc2xvdC4gaXNSZXZlcnNlZD1cInRydWVcIiBwbGFjZXMgdGhlXG4gICAgICogbWVkaWEtc2xvdCBvbiB0aGUgcmlnaHQgb2YgdGhlIGJvZHktc2xvdC5cbiAgICAgKi9cbiAgICBpc1JldmVyc2VkOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFRoZSBGbGFnIGNvbXBvbmVudCB3aWxsIHVzZSB0aGlzIHRvIHN0YWNrXG4gICAgICogdGhlIGVsZW1lbnQgYXQgdGhlIGAkc3Byay1mbGFnLXN0YWNrZWQtYnJlYWtwb2ludGBcbiAgICAgKi9cbiAgICBpc1N0YWNrZWQ6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyBob3cgbXVjaCBzcGFjZSBiZXR3ZWVuIHRoZVxuICAgICAqIG1lZGlhIGFuZCB0aGUgYm9keS5cbiAgICAgKi9cbiAgICBzcGFjaW5nOiAnZmx1c2gnIHwgJ3RpbnknIHwgJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2xhcmdlJyB8ICdodWdlJztcbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHRoZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgY29udGVudC5cbiAgICAgKi9cbiAgICB2ZXJ0aWNhbEFsaWdubWVudDogJ3RvcCcgfCAnbWlkZGxlJyB8ICdib3R0b20nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBnZXRDbGFzc2VzKCk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgZ2V0TWVkaWFDbGFzc2VzKCk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgZ2V0Qm9keUNsYXNzZXMoKTogc3RyaW5nO1xufVxuIl19