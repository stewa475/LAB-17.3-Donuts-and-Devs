import * as ɵngcc0 from '@angular/core';
export declare class SprkDictionaryComponent {
    /**
     * The collection of key-value pairs to be rendered
     * into the component.
     */
    data: object;
    /**
     * Determines the variant of the dictionary component to render.
     * The only available option is `striped`.
     * Supplying no value will cause the base variant to be used.
     */
    dictionaryType: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component.
     */
    additionalClasses: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * @ignore
     * Used to grab all the keys from
     * objects.
     */
    objectKeys: {
        (o: object): string[];
        (o: {}): string[];
    };
    /**
     * @ignore
     */
    getClasses(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkDictionaryComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkDictionaryComponent, "sprk-dictionary", never, { "data": "data"; "dictionaryType": "dictionaryType"; "additionalClasses": "additionalClasses"; "idString": "idString"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1kaWN0aW9uYXJ5LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzcHJrLWRpY3Rpb25hcnkuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWNsYXJlIGNsYXNzIFNwcmtEaWN0aW9uYXJ5Q29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBUaGUgY29sbGVjdGlvbiBvZiBrZXktdmFsdWUgcGFpcnMgdG8gYmUgcmVuZGVyZWRcbiAgICAgKiBpbnRvIHRoZSBjb21wb25lbnQuXG4gICAgICovXG4gICAgZGF0YTogb2JqZWN0O1xuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgdGhlIHZhcmlhbnQgb2YgdGhlIGRpY3Rpb25hcnkgY29tcG9uZW50IHRvIHJlbmRlci5cbiAgICAgKiBUaGUgb25seSBhdmFpbGFibGUgb3B0aW9uIGlzIGBzdHJpcGVkYC5cbiAgICAgKiBTdXBwbHlpbmcgbm8gdmFsdWUgd2lsbCBjYXVzZSB0aGUgYmFzZSB2YXJpYW50IHRvIGJlIHVzZWQuXG4gICAgICovXG4gICAgZGljdGlvbmFyeVR5cGU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAgICogY29tcG9uZW50LlxuICAgICAqL1xuICAgIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWRcbiAgICAgKiB0byB0aGUgYGRhdGEtaWRgIGF0dHJpYnV0ZSBvbiB0aGVcbiAgICAgKiBjb21wb25lbnQuIFRoaXMgaXMgaW50ZW5kZWQgdG8gYmVcbiAgICAgKiB1c2VkIGFzIGEgc2VsZWN0b3IgZm9yIGF1dG9tYXRlZFxuICAgICAqIHRvb2xzLiBUaGlzIHZhbHVlIHNob3VsZCBiZSB1bmlxdWVcbiAgICAgKiBwZXIgcGFnZS5cbiAgICAgKi9cbiAgICBpZFN0cmluZzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKiBVc2VkIHRvIGdyYWIgYWxsIHRoZSBrZXlzIGZyb21cbiAgICAgKiBvYmplY3RzLlxuICAgICAqL1xuICAgIG9iamVjdEtleXM6IHtcbiAgICAgICAgKG86IG9iamVjdCk6IHN0cmluZ1tdO1xuICAgICAgICAobzoge30pOiBzdHJpbmdbXTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBnZXRDbGFzc2VzKCk6IHN0cmluZztcbn1cbiJdfQ==