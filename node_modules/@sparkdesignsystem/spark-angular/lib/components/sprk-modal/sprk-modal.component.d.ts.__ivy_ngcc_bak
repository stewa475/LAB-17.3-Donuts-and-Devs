import { EventEmitter } from '@angular/core';
export declare class SprkModalComponent {
    title: string;
    /**
     * This determines the variant of the Modal.
     * Can be `choice`, `info`, or `wait`.
     */
    modalType: string;
    /**
     * The value supplied will be
     * rendered as the text for the confirm button.
     */
    confirmText: string;
    /**
     * The value supplied will be rendered
     * as the text for the cancel button.
     */
    cancelText: string;
    /**
     * The value supplied will be assigned to the
     * `data-analytics` attribute
     * on the confirm button. Intended
     * for an outside library to capture data.
     */
    confirmAnalyticsString: string;
    /**
     * The value supplied will be assigned to the
     * `data-analytics` attribute
     * on the cancel button. Intended
     * for an outside library to capture data.
     */
    cancelAnalyticsString: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * If `true`, the Modal will be shown.
     * If `false`, the modal will not be shown.
     */
    isVisible: boolean;
    /**
     * When the Modal is closed the hide event is
     * emitted and a callback function can
     * be triggered if supplied.
     */
    hide: EventEmitter<any>;
    /**
     * Available when the Modal type is `choice`.
     * The Modal will emit a confirm click event
     * when the confirmation button is clicked.
     * A callback function can be triggered if
     * supplied.
     */
    confirmClick: EventEmitter<any>;
    /**
     * Available when the Modal type is `choice`.
     * The Modal will emit a cancel click event
     * when the cancel link is clicked.
     * A callback function can be triggered if supplied.
     */
    cancelClick: EventEmitter<any>;
    /**
     * @ignore
     */
    componentID: string;
    /**
     * @ignore
     */
    heading_id: string;
    /**
     * @ignore
     */
    content_id: string;
    /**
     * @ignore
     */
    handleKeyboardEvent(event: KeyboardEvent): void;
    /**
     * @ignore
     */
    constructor();
    /**
     * @ignore
     */
    closeModal(event: any): void;
    /**
     * Emits an event when the confirmation
     * button is clicked.
     */
    emitConfirmClick(event: any): void;
    /**
     * Emits an event when the cancel
     * link is clicked.
     */
    emitCancelClick(event: any): void;
}
