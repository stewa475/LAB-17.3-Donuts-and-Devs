import { OnInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class SprkMastheadAccordionItemComponent implements OnInit {
    title: string;
    /**
     * The value supplied will be assigned to the
     * `data-analytics` attribute on the component.
     * Intended for an outside
     * library to capture data.
     */
    analyticsString: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component.
     */
    additionalClasses: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * heading.
     */
    additionalHeadingClasses: string;
    /**
     * If `true`, the Masthead accordion item
     * will be open when it is rendered.
     */
    isOpen: boolean;
    /**
     * If `true`, the Masthead ccordion item
     * will be active when it is rendered.
     */
    isActive: boolean;
    /**
     * The name of the icon to use
     * for the clickable close icon.
     */
    iconTypeClosed: string;
    /**
     * The name of the icon to use
     * for the clickable open icon.
     */
    iconTypeOpen: string;
    /**
     * Expects a name of an icon to use
     * as a leading icon for the Masthead accordion item.
     */
    leadingIcon: string;
    /**
     * @ignore
     */
    componentID: string;
    /**
     * @ignore
     */
    accordion_controls_id: string;
    /**
     * @ignore
     */
    currentIconType: string;
    /**
     * @ignore
     */
    iconStateClass: string;
    /**
     * @ignore
     */
    animState: string;
    /**
     * @ignore
     */
    accordionState(): void;
    /**
     * @ignore
     */
    toggleAccordion(event: any): void;
    /**
     * @ignore
     */
    getClasses(): string;
    /**
     * @ignore
     */
    getHeadingClasses(): string;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkMastheadAccordionItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkMastheadAccordionItemComponent, "sprk-masthead-accordion-item", never, { "isOpen": "isOpen"; "iconTypeClosed": "iconTypeClosed"; "iconTypeOpen": "iconTypeOpen"; "title": "title"; "analyticsString": "analyticsString"; "idString": "idString"; "additionalClasses": "additionalClasses"; "additionalHeadingClasses": "additionalHeadingClasses"; "isActive": "isActive"; "leadingIcon": "leadingIcon"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1tYXN0aGVhZC1hY2NvcmRpb24taXRlbS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic3Byay1tYXN0aGVhZC1hY2NvcmRpb24taXRlbS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3Bya01hc3RoZWFkQWNjb3JkaW9uSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZCB0byB0aGVcbiAgICAgKiBgZGF0YS1hbmFseXRpY3NgIGF0dHJpYnV0ZSBvbiB0aGUgY29tcG9uZW50LlxuICAgICAqIEludGVuZGVkIGZvciBhbiBvdXRzaWRlXG4gICAgICogbGlicmFyeSB0byBjYXB0dXJlIGRhdGEuXG4gICAgICovXG4gICAgYW5hbHl0aWNzU3RyaW5nOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWRcbiAgICAgKiB0byB0aGUgYGRhdGEtaWRgIGF0dHJpYnV0ZSBvbiB0aGVcbiAgICAgKiBjb21wb25lbnQuIFRoaXMgaXMgaW50ZW5kZWQgdG8gYmVcbiAgICAgKiB1c2VkIGFzIGEgc2VsZWN0b3IgZm9yIGF1dG9tYXRlZFxuICAgICAqIHRvb2xzLiBUaGlzIHZhbHVlIHNob3VsZCBiZSB1bmlxdWVcbiAgICAgKiBwZXIgcGFnZS5cbiAgICAgKi9cbiAgICBpZFN0cmluZzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICAgKiBjb21wb25lbnQuXG4gICAgICovXG4gICAgYWRkaXRpb25hbENsYXNzZXM6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAgICogaGVhZGluZy5cbiAgICAgKi9cbiAgICBhZGRpdGlvbmFsSGVhZGluZ0NsYXNzZXM6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBJZiBgdHJ1ZWAsIHRoZSBNYXN0aGVhZCBhY2NvcmRpb24gaXRlbVxuICAgICAqIHdpbGwgYmUgb3BlbiB3aGVuIGl0IGlzIHJlbmRlcmVkLlxuICAgICAqL1xuICAgIGlzT3BlbjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBJZiBgdHJ1ZWAsIHRoZSBNYXN0aGVhZCBjY29yZGlvbiBpdGVtXG4gICAgICogd2lsbCBiZSBhY3RpdmUgd2hlbiBpdCBpcyByZW5kZXJlZC5cbiAgICAgKi9cbiAgICBpc0FjdGl2ZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgaWNvbiB0byB1c2VcbiAgICAgKiBmb3IgdGhlIGNsaWNrYWJsZSBjbG9zZSBpY29uLlxuICAgICAqL1xuICAgIGljb25UeXBlQ2xvc2VkOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGljb24gdG8gdXNlXG4gICAgICogZm9yIHRoZSBjbGlja2FibGUgb3BlbiBpY29uLlxuICAgICAqL1xuICAgIGljb25UeXBlT3Blbjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEV4cGVjdHMgYSBuYW1lIG9mIGFuIGljb24gdG8gdXNlXG4gICAgICogYXMgYSBsZWFkaW5nIGljb24gZm9yIHRoZSBNYXN0aGVhZCBhY2NvcmRpb24gaXRlbS5cbiAgICAgKi9cbiAgICBsZWFkaW5nSWNvbjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjb21wb25lbnRJRDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBhY2NvcmRpb25fY29udHJvbHNfaWQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgY3VycmVudEljb25UeXBlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGljb25TdGF0ZUNsYXNzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGFuaW1TdGF0ZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBhY2NvcmRpb25TdGF0ZSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICB0b2dnbGVBY2NvcmRpb24oZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGdldENsYXNzZXMoKTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBnZXRIZWFkaW5nQ2xhc3NlcygpOiBzdHJpbmc7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbn1cbiJdfQ==