import { ISprkFooterGlobalLink, ISprkFooterLocalLinkColumn, ISprkFooterSocialLink, ISprkFooterAward, ISprkFooterBadgeLink, ISprkDisclaimerText, ISprkDisclaimerToggle } from './sprk-footer.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class SprkFooterComponent {
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component.
     */
    additionalClasses: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * The heading for the "Global" section.
     */
    globalHeading: string;
    /**
     * The heading for the "Awards" section.
     */
    awardsHeading: string;
    /**
     * The heading for the "Connect With Us" section.
     */
    connectHeading: string;
    /**
     * Array of
     * [ISprkFooterGlobalLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)
     *  used to build the
     * links in the "Global" section.
     */
    globalLinks: ISprkFooterGlobalLink[];
    /**
     * Array of
     * [ISprkFooterLocalLinkColumn](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)
     *  used to build
     * the columns of links
     * in the "Site Links" section.
     */
    localLinks: ISprkFooterLocalLinkColumn[];
    /**
     * Array of
     * [ISprkFooterSocialLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)
     *  used to build the
     * icon links in the "Connect With Us section".
     */
    socialLinks: ISprkFooterSocialLink[];
    /**
     * Array of
     * [ISprkFooterAward](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)
     *  used to build the
     * awards in the "Awards" section.
     */
    awards: ISprkFooterAward[];
    /**
     * Array of
     * [ISprkFooterBadgeLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)
     *  used to build the
     * icon links in the icon
     * section in the bottom
     * of the Footer.
     */
    badgeLinks: ISprkFooterBadgeLink[];
    /**
     * Array of
     * [ISprkDisclaimerText](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)
     *  used to build disclaimer text in the
     * of the Footer.
     */
    disclaimerText: ISprkDisclaimerText[];
    /**
     * Array of
     * [ISprkDisclaimerToggle](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)
     *  used to build
     * the disclamer toggle(s) in
     * the the Footer.
     */
    disclaimerToggle: ISprkDisclaimerToggle[];
    /**
     * @ignore
     */
    getClasses(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkFooterComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkFooterComponent, "sprk-footer", never, { "additionalClasses": "additionalClasses"; "idString": "idString"; "globalHeading": "globalHeading"; "awardsHeading": "awardsHeading"; "connectHeading": "connectHeading"; "globalLinks": "globalLinks"; "localLinks": "localLinks"; "socialLinks": "socialLinks"; "awards": "awards"; "badgeLinks": "badgeLinks"; "disclaimerText": "disclaimerText"; "disclaimerToggle": "disclaimerToggle"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1mb290ZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNwcmstZm9vdGVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElTcHJrRm9vdGVyR2xvYmFsTGluaywgSVNwcmtGb290ZXJMb2NhbExpbmtDb2x1bW4sIElTcHJrRm9vdGVyU29jaWFsTGluaywgSVNwcmtGb290ZXJBd2FyZCwgSVNwcmtGb290ZXJCYWRnZUxpbmssIElTcHJrRGlzY2xhaW1lclRleHQsIElTcHJrRGlzY2xhaW1lclRvZ2dsZSB9IGZyb20gJy4vc3Byay1mb290ZXIuaW50ZXJmYWNlcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTcHJrRm9vdGVyQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBFeHBlY3RzIGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZ1xuICAgICAqIG9mIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlXG4gICAgICogY29tcG9uZW50LlxuICAgICAqL1xuICAgIGFkZGl0aW9uYWxDbGFzc2VzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWRcbiAgICAgKiB0byB0aGUgYGRhdGEtaWRgIGF0dHJpYnV0ZSBvbiB0aGVcbiAgICAgKiBjb21wb25lbnQuIFRoaXMgaXMgaW50ZW5kZWQgdG8gYmVcbiAgICAgKiB1c2VkIGFzIGEgc2VsZWN0b3IgZm9yIGF1dG9tYXRlZFxuICAgICAqIHRvb2xzLiBUaGlzIHZhbHVlIHNob3VsZCBiZSB1bmlxdWVcbiAgICAgKiBwZXIgcGFnZS5cbiAgICAgKi9cbiAgICBpZFN0cmluZzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBoZWFkaW5nIGZvciB0aGUgXCJHbG9iYWxcIiBzZWN0aW9uLlxuICAgICAqL1xuICAgIGdsb2JhbEhlYWRpbmc6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgaGVhZGluZyBmb3IgdGhlIFwiQXdhcmRzXCIgc2VjdGlvbi5cbiAgICAgKi9cbiAgICBhd2FyZHNIZWFkaW5nOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGhlYWRpbmcgZm9yIHRoZSBcIkNvbm5lY3QgV2l0aCBVc1wiIHNlY3Rpb24uXG4gICAgICovXG4gICAgY29ubmVjdEhlYWRpbmc6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBBcnJheSBvZlxuICAgICAqIFtJU3Bya0Zvb3Rlckdsb2JhbExpbmtdKGh0dHBzOi8vZ2l0aHViLmNvbS9zcGFya2Rlc2lnbnN5c3RlbS9zcGFyay1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFzdGVyL2FuZ3VsYXIvcHJvamVjdHMvc3BhcmstYW5ndWxhci9zcmMvbGliL2NvbXBvbmVudHMvc3Byay1mb290ZXIvc3Byay1mb290ZXIuaW50ZXJmYWNlcy50cylcbiAgICAgKiAgdXNlZCB0byBidWlsZCB0aGVcbiAgICAgKiBsaW5rcyBpbiB0aGUgXCJHbG9iYWxcIiBzZWN0aW9uLlxuICAgICAqL1xuICAgIGdsb2JhbExpbmtzOiBJU3Bya0Zvb3Rlckdsb2JhbExpbmtbXTtcbiAgICAvKipcbiAgICAgKiBBcnJheSBvZlxuICAgICAqIFtJU3Bya0Zvb3RlckxvY2FsTGlua0NvbHVtbl0oaHR0cHM6Ly9naXRodWIuY29tL3NwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYXN0ZXIvYW5ndWxhci9wcm9qZWN0cy9zcGFyay1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9zcHJrLWZvb3Rlci9zcHJrLWZvb3Rlci5pbnRlcmZhY2VzLnRzKVxuICAgICAqICB1c2VkIHRvIGJ1aWxkXG4gICAgICogdGhlIGNvbHVtbnMgb2YgbGlua3NcbiAgICAgKiBpbiB0aGUgXCJTaXRlIExpbmtzXCIgc2VjdGlvbi5cbiAgICAgKi9cbiAgICBsb2NhbExpbmtzOiBJU3Bya0Zvb3RlckxvY2FsTGlua0NvbHVtbltdO1xuICAgIC8qKlxuICAgICAqIEFycmF5IG9mXG4gICAgICogW0lTcHJrRm9vdGVyU29jaWFsTGlua10oaHR0cHM6Ly9naXRodWIuY29tL3NwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYXN0ZXIvYW5ndWxhci9wcm9qZWN0cy9zcGFyay1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9zcHJrLWZvb3Rlci9zcHJrLWZvb3Rlci5pbnRlcmZhY2VzLnRzKVxuICAgICAqICB1c2VkIHRvIGJ1aWxkIHRoZVxuICAgICAqIGljb24gbGlua3MgaW4gdGhlIFwiQ29ubmVjdCBXaXRoIFVzIHNlY3Rpb25cIi5cbiAgICAgKi9cbiAgICBzb2NpYWxMaW5rczogSVNwcmtGb290ZXJTb2NpYWxMaW5rW107XG4gICAgLyoqXG4gICAgICogQXJyYXkgb2ZcbiAgICAgKiBbSVNwcmtGb290ZXJBd2FyZF0oaHR0cHM6Ly9naXRodWIuY29tL3NwYXJrZGVzaWduc3lzdGVtL3NwYXJrLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYXN0ZXIvYW5ndWxhci9wcm9qZWN0cy9zcGFyay1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9zcHJrLWZvb3Rlci9zcHJrLWZvb3Rlci5pbnRlcmZhY2VzLnRzKVxuICAgICAqICB1c2VkIHRvIGJ1aWxkIHRoZVxuICAgICAqIGF3YXJkcyBpbiB0aGUgXCJBd2FyZHNcIiBzZWN0aW9uLlxuICAgICAqL1xuICAgIGF3YXJkczogSVNwcmtGb290ZXJBd2FyZFtdO1xuICAgIC8qKlxuICAgICAqIEFycmF5IG9mXG4gICAgICogW0lTcHJrRm9vdGVyQmFkZ2VMaW5rXShodHRwczovL2dpdGh1Yi5jb20vc3BhcmtkZXNpZ25zeXN0ZW0vc3BhcmstZGVzaWduLXN5c3RlbS9ibG9iL21hc3Rlci9hbmd1bGFyL3Byb2plY3RzL3NwYXJrLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL3NwcmstZm9vdGVyL3NwcmstZm9vdGVyLmludGVyZmFjZXMudHMpXG4gICAgICogIHVzZWQgdG8gYnVpbGQgdGhlXG4gICAgICogaWNvbiBsaW5rcyBpbiB0aGUgaWNvblxuICAgICAqIHNlY3Rpb24gaW4gdGhlIGJvdHRvbVxuICAgICAqIG9mIHRoZSBGb290ZXIuXG4gICAgICovXG4gICAgYmFkZ2VMaW5rczogSVNwcmtGb290ZXJCYWRnZUxpbmtbXTtcbiAgICAvKipcbiAgICAgKiBBcnJheSBvZlxuICAgICAqIFtJU3Bya0Rpc2NsYWltZXJUZXh0XShodHRwczovL2dpdGh1Yi5jb20vc3BhcmtkZXNpZ25zeXN0ZW0vc3BhcmstZGVzaWduLXN5c3RlbS9ibG9iL21hc3Rlci9hbmd1bGFyL3Byb2plY3RzL3NwYXJrLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL3NwcmstZm9vdGVyL3NwcmstZm9vdGVyLmludGVyZmFjZXMudHMpXG4gICAgICogIHVzZWQgdG8gYnVpbGQgZGlzY2xhaW1lciB0ZXh0IGluIHRoZVxuICAgICAqIG9mIHRoZSBGb290ZXIuXG4gICAgICovXG4gICAgZGlzY2xhaW1lclRleHQ6IElTcHJrRGlzY2xhaW1lclRleHRbXTtcbiAgICAvKipcbiAgICAgKiBBcnJheSBvZlxuICAgICAqIFtJU3Bya0Rpc2NsYWltZXJUb2dnbGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zcGFya2Rlc2lnbnN5c3RlbS9zcGFyay1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFzdGVyL2FuZ3VsYXIvcHJvamVjdHMvc3BhcmstYW5ndWxhci9zcmMvbGliL2NvbXBvbmVudHMvc3Byay1mb290ZXIvc3Byay1mb290ZXIuaW50ZXJmYWNlcy50cylcbiAgICAgKiAgdXNlZCB0byBidWlsZFxuICAgICAqIHRoZSBkaXNjbGFtZXIgdG9nZ2xlKHMpIGluXG4gICAgICogdGhlIHRoZSBGb290ZXIuXG4gICAgICovXG4gICAgZGlzY2xhaW1lclRvZ2dsZTogSVNwcmtEaXNjbGFpbWVyVG9nZ2xlW107XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGdldENsYXNzZXMoKTogc3RyaW5nO1xufVxuIl19