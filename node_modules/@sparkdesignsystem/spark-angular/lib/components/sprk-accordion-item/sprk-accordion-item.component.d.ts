import { OnInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class SprkAccordionItemComponent implements OnInit {
    /**
     * The value supplied will be rendered
     * inside the title area of the Accordion item.
     */
    title: string;
    /**
     * The value supplied will be assigned to the
     * `data-analytics` attribute on the component.
     * Intended for an outside
     * library to capture data.
     */
    analyticsString: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component.
     */
    additionalClasses: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * heading in the Accordion item.
     */
    additionalHeadingClasses: string;
    /**
     * The Accordion item will use this to decide
     * if it should be open or closed on first render.
     * (Interacting with the toggle will override this input.)
     */
    isOpen: boolean;
    /**
     * If `true`, the active CSS class
     * will be applied to the item.
     */
    isActive: boolean;
    /**
     * The name of the icon to use for
     * a closed Accordion item.
     */
    iconTypeClosed: string;
    /**
     * The name of the icon to use for
     * an open Accordion item.
     */
    iconTypeOpen: string;
    /**
     * The name of the icon to use before
     * the title in the Accordion item.
     * This is optional.
     */
    leadingIcon: string;
    /**
     * @ignore
     */
    componentID: string;
    /**
     * @ignore
     */
    accordion_controls_id: string;
    /**
     * @ignore
     */
    currentIconType: string;
    /**
     * @ignore
     */
    iconStateClass: string;
    /**
     * @ignore
     */
    animState: string;
    /**
     * @ignore
     */
    accordionState(): void;
    /**
     * @ignore
     */
    toggleAccordion(event: any): void;
    /**
     * @ignore
     */
    getClasses(): string;
    /**
     * @ignore
     */
    getHeadingClasses(): string;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkAccordionItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkAccordionItemComponent, "sprk-accordion-item", never, { "isOpen": "isOpen"; "iconTypeClosed": "iconTypeClosed"; "iconTypeOpen": "iconTypeOpen"; "title": "title"; "analyticsString": "analyticsString"; "idString": "idString"; "additionalClasses": "additionalClasses"; "additionalHeadingClasses": "additionalHeadingClasses"; "isActive": "isActive"; "leadingIcon": "leadingIcon"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1hY2NvcmRpb24taXRlbS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic3Byay1hY2NvcmRpb24taXRlbS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3Bya0FjY29yZGlvbkl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIHJlbmRlcmVkXG4gICAgICogaW5zaWRlIHRoZSB0aXRsZSBhcmVhIG9mIHRoZSBBY2NvcmRpb24gaXRlbS5cbiAgICAgKi9cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkIHRvIHRoZVxuICAgICAqIGBkYXRhLWFuYWx5dGljc2AgYXR0cmlidXRlIG9uIHRoZSBjb21wb25lbnQuXG4gICAgICogSW50ZW5kZWQgZm9yIGFuIG91dHNpZGVcbiAgICAgKiBsaWJyYXJ5IHRvIGNhcHR1cmUgZGF0YS5cbiAgICAgKi9cbiAgICBhbmFseXRpY3NTdHJpbmc6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZFxuICAgICAqIHRvIHRoZSBgZGF0YS1pZGAgYXR0cmlidXRlIG9uIHRoZVxuICAgICAqIGNvbXBvbmVudC4gVGhpcyBpcyBpbnRlbmRlZCB0byBiZVxuICAgICAqIHVzZWQgYXMgYSBzZWxlY3RvciBmb3IgYXV0b21hdGVkXG4gICAgICogdG9vbHMuIFRoaXMgdmFsdWUgc2hvdWxkIGJlIHVuaXF1ZVxuICAgICAqIHBlciBwYWdlLlxuICAgICAqL1xuICAgIGlkU3RyaW5nOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgICAqIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBhZGRpdGlvbmFsQ2xhc3Nlczogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICAgKiBoZWFkaW5nIGluIHRoZSBBY2NvcmRpb24gaXRlbS5cbiAgICAgKi9cbiAgICBhZGRpdGlvbmFsSGVhZGluZ0NsYXNzZXM6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgQWNjb3JkaW9uIGl0ZW0gd2lsbCB1c2UgdGhpcyB0byBkZWNpZGVcbiAgICAgKiBpZiBpdCBzaG91bGQgYmUgb3BlbiBvciBjbG9zZWQgb24gZmlyc3QgcmVuZGVyLlxuICAgICAqIChJbnRlcmFjdGluZyB3aXRoIHRoZSB0b2dnbGUgd2lsbCBvdmVycmlkZSB0aGlzIGlucHV0LilcbiAgICAgKi9cbiAgICBpc09wZW46IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogSWYgYHRydWVgLCB0aGUgYWN0aXZlIENTUyBjbGFzc1xuICAgICAqIHdpbGwgYmUgYXBwbGllZCB0byB0aGUgaXRlbS5cbiAgICAgKi9cbiAgICBpc0FjdGl2ZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgaWNvbiB0byB1c2UgZm9yXG4gICAgICogYSBjbG9zZWQgQWNjb3JkaW9uIGl0ZW0uXG4gICAgICovXG4gICAgaWNvblR5cGVDbG9zZWQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgaWNvbiB0byB1c2UgZm9yXG4gICAgICogYW4gb3BlbiBBY2NvcmRpb24gaXRlbS5cbiAgICAgKi9cbiAgICBpY29uVHlwZU9wZW46IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgaWNvbiB0byB1c2UgYmVmb3JlXG4gICAgICogdGhlIHRpdGxlIGluIHRoZSBBY2NvcmRpb24gaXRlbS5cbiAgICAgKiBUaGlzIGlzIG9wdGlvbmFsLlxuICAgICAqL1xuICAgIGxlYWRpbmdJY29uOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGNvbXBvbmVudElEOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGFjY29yZGlvbl9jb250cm9sc19pZDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjdXJyZW50SWNvblR5cGU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgaWNvblN0YXRlQ2xhc3M6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgYW5pbVN0YXRlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGFjY29yZGlvblN0YXRlKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIHRvZ2dsZUFjY29yZGlvbihldmVudDogYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgZ2V0Q2xhc3NlcygpOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGdldEhlYWRpbmdDbGFzc2VzKCk6IHN0cmluZztcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xufVxuIl19