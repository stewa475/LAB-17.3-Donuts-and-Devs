import { AfterViewInit } from '@angular/core';
import 'focus-visible';
import * as ɵngcc0 from '@angular/core';
export declare class SprkToggleComponent implements AfterViewInit {
    /**
     * The value supplied will be assigned to the
     * `data-analytics` attribute on the component.
     * Intended for an outside
     * library to capture data.
     */
    analyticsString: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component.
     */
    additionalClasses: string;
    /**
     * The value supplied will be
     * rendered as the main Toggle link text.
     */
    title: string;
    /**
     * The value supplied will be assigned as a
     * CSS class on the icon used in the Toggle.
     * This is intended for overrides.
     */
    iconClass: string;
    /**
     * The value supplied will be assigned as a CSS class
     * on the clickable title text used in the Toggle.
     * This is intended for overrides.
     */
    titleFontClass: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * A string that is used to set the `id` on the content
     * and the `aria-controls` for the toggle trigger button.
     */
    contentId: string;
    /**
     * @ignore
     */
    isOpen: boolean;
    /**
     * @ignore
     */
    iconStateClass: string;
    /**
     * @ignore
     */
    animState: string;
    /**
     * @ignore
     */
    toggleState(): void;
    /**
     * @ignore
     */
    toggle(event: any): void;
    /**
     * @ignore
     */
    getClasses(): string;
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkToggleComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkToggleComponent, "sprk-toggle", never, { "titleFontClass": "titleFontClass"; "contentId": "contentId"; "analyticsString": "analyticsString"; "additionalClasses": "additionalClasses"; "title": "title"; "iconClass": "iconClass"; "idString": "idString"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay10b2dnbGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNwcmstdG9nZ2xlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICdmb2N1cy12aXNpYmxlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNwcmtUb2dnbGVDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZCB0byB0aGVcbiAgICAgKiBgZGF0YS1hbmFseXRpY3NgIGF0dHJpYnV0ZSBvbiB0aGUgY29tcG9uZW50LlxuICAgICAqIEludGVuZGVkIGZvciBhbiBvdXRzaWRlXG4gICAgICogbGlicmFyeSB0byBjYXB0dXJlIGRhdGEuXG4gICAgICovXG4gICAgYW5hbHl0aWNzU3RyaW5nOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgICAqIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBhZGRpdGlvbmFsQ2xhc3Nlczogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlXG4gICAgICogcmVuZGVyZWQgYXMgdGhlIG1haW4gVG9nZ2xlIGxpbmsgdGV4dC5cbiAgICAgKi9cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkIGFzIGFcbiAgICAgKiBDU1MgY2xhc3Mgb24gdGhlIGljb24gdXNlZCBpbiB0aGUgVG9nZ2xlLlxuICAgICAqIFRoaXMgaXMgaW50ZW5kZWQgZm9yIG92ZXJyaWRlcy5cbiAgICAgKi9cbiAgICBpY29uQ2xhc3M6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZCBhcyBhIENTUyBjbGFzc1xuICAgICAqIG9uIHRoZSBjbGlja2FibGUgdGl0bGUgdGV4dCB1c2VkIGluIHRoZSBUb2dnbGUuXG4gICAgICogVGhpcyBpcyBpbnRlbmRlZCBmb3Igb3ZlcnJpZGVzLlxuICAgICAqL1xuICAgIHRpdGxlRm9udENsYXNzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWRcbiAgICAgKiB0byB0aGUgYGRhdGEtaWRgIGF0dHJpYnV0ZSBvbiB0aGVcbiAgICAgKiBjb21wb25lbnQuIFRoaXMgaXMgaW50ZW5kZWQgdG8gYmVcbiAgICAgKiB1c2VkIGFzIGEgc2VsZWN0b3IgZm9yIGF1dG9tYXRlZFxuICAgICAqIHRvb2xzLiBUaGlzIHZhbHVlIHNob3VsZCBiZSB1bmlxdWVcbiAgICAgKiBwZXIgcGFnZS5cbiAgICAgKi9cbiAgICBpZFN0cmluZzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEEgc3RyaW5nIHRoYXQgaXMgdXNlZCB0byBzZXQgdGhlIGBpZGAgb24gdGhlIGNvbnRlbnRcbiAgICAgKiBhbmQgdGhlIGBhcmlhLWNvbnRyb2xzYCBmb3IgdGhlIHRvZ2dsZSB0cmlnZ2VyIGJ1dHRvbi5cbiAgICAgKi9cbiAgICBjb250ZW50SWQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgaXNPcGVuOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBpY29uU3RhdGVDbGFzczogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBhbmltU3RhdGU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgdG9nZ2xlU3RhdGUoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgdG9nZ2xlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBnZXRDbGFzc2VzKCk6IHN0cmluZztcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbn1cbiJdfQ==