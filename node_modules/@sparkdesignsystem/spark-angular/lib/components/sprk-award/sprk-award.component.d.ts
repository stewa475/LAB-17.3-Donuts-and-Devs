import * as ɵngcc0 from '@angular/core';
export declare class SprkAwardComponent {
    /**
     * The relative size of the viewport that
     * the Award component should switch
     * from a stacked layout to a side by side
     * layout. You will need to experiment
     * with your content to see which value
     * is the best fit. Can be `tiny`,
     * `small`, `medium`, `large` or `huge`.
     */
    splitAt: string;
    /**
     * The `alt` text that will be applied
     * to the first image.
     */
    imgOneAlt: string;
    /**
     * The image `href` value that will be
     * applied to the first image.
     */
    imgOneHref: string;
    /**
     * The image `href` value that will be
     * applied to the second image.
     */
    imgTwoHref: string;
    /**
     * The `alt` text that will be applied
     * 'to the second image.
     */
    imgTwoAlt: string;
    /**
     * The image source that will be
     * applied to the first image.
     */
    imgOneSrc: string;
    /**
     * The image source that will be
     * applied to the second image.
     */
    imgTwoSrc: string;
    /**
     * The string that will be assigned to the
     * `data-analytics` attribute of the first image.
     */
    analyticsStringImgOne: string;
    /**
     * The string that will be assigned to the
     * `data-analytics` attribute of the second image.
     */
    analyticsStringImgTwo: string;
    /**
     * The string that will be assigned to the
     * `data-analytics` attribute of
     * the clickable disclaimer.
     */
    analyticsStringDisclaimer: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * component.
     */
    additionalClasses: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * first image.
     */
    additionalClassesImgOne: string;
    /**
     * Expects a space separated string
     * of classes to be added to the
     * second image.
     */
    additionalClassesImgTwo: string;
    /**
     * The text that appears above the
     * images and serves as the heading
     * for the Award.
     */
    title: string;
    /**
     * The text that will be the clickable
     * title of the disclaimer toggle.
     */
    disclaimerTitle: string;
    /**
     * The text that will be inside the
     * disclaimer toggle.
     */
    disclaimerCopy: string;
    /**
     * If `false`, the disclaimer
     * toggle will not be rendered.
     */
    disclaimer: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    /**
     * @ignore
     */
    getClasses(): string;
    /**
     * @ignore
     */
    getImgContainerClasses(): string;
    /**
     * @ignore
     */
    getClassesImgOne(): string;
    /**
     * @ignore
     */
    getClassesImgTwo(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkAwardComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SprkAwardComponent, "sprk-award", never, { "splitAt": "splitAt"; "imgOneAlt": "imgOneAlt"; "imgOneHref": "imgOneHref"; "imgTwoHref": "imgTwoHref"; "imgTwoAlt": "imgTwoAlt"; "imgOneSrc": "imgOneSrc"; "imgTwoSrc": "imgTwoSrc"; "analyticsStringImgOne": "analyticsStringImgOne"; "analyticsStringImgTwo": "analyticsStringImgTwo"; "analyticsStringDisclaimer": "analyticsStringDisclaimer"; "additionalClasses": "additionalClasses"; "additionalClassesImgOne": "additionalClassesImgOne"; "additionalClassesImgTwo": "additionalClassesImgTwo"; "title": "title"; "disclaimerTitle": "disclaimerTitle"; "disclaimerCopy": "disclaimerCopy"; "disclaimer": "disclaimer"; "idString": "idString"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1hd2FyZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic3Byay1hd2FyZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3Bya0F3YXJkQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBUaGUgcmVsYXRpdmUgc2l6ZSBvZiB0aGUgdmlld3BvcnQgdGhhdFxuICAgICAqIHRoZSBBd2FyZCBjb21wb25lbnQgc2hvdWxkIHN3aXRjaFxuICAgICAqIGZyb20gYSBzdGFja2VkIGxheW91dCB0byBhIHNpZGUgYnkgc2lkZVxuICAgICAqIGxheW91dC4gWW91IHdpbGwgbmVlZCB0byBleHBlcmltZW50XG4gICAgICogd2l0aCB5b3VyIGNvbnRlbnQgdG8gc2VlIHdoaWNoIHZhbHVlXG4gICAgICogaXMgdGhlIGJlc3QgZml0LiBDYW4gYmUgYHRpbnlgLFxuICAgICAqIGBzbWFsbGAsIGBtZWRpdW1gLCBgbGFyZ2VgIG9yIGBodWdlYC5cbiAgICAgKi9cbiAgICBzcGxpdEF0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGBhbHRgIHRleHQgdGhhdCB3aWxsIGJlIGFwcGxpZWRcbiAgICAgKiB0byB0aGUgZmlyc3QgaW1hZ2UuXG4gICAgICovXG4gICAgaW1nT25lQWx0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGltYWdlIGBocmVmYCB2YWx1ZSB0aGF0IHdpbGwgYmVcbiAgICAgKiBhcHBsaWVkIHRvIHRoZSBmaXJzdCBpbWFnZS5cbiAgICAgKi9cbiAgICBpbWdPbmVIcmVmOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGltYWdlIGBocmVmYCB2YWx1ZSB0aGF0IHdpbGwgYmVcbiAgICAgKiBhcHBsaWVkIHRvIHRoZSBzZWNvbmQgaW1hZ2UuXG4gICAgICovXG4gICAgaW1nVHdvSHJlZjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBgYWx0YCB0ZXh0IHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gICAgICogJ3RvIHRoZSBzZWNvbmQgaW1hZ2UuXG4gICAgICovXG4gICAgaW1nVHdvQWx0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGltYWdlIHNvdXJjZSB0aGF0IHdpbGwgYmVcbiAgICAgKiBhcHBsaWVkIHRvIHRoZSBmaXJzdCBpbWFnZS5cbiAgICAgKi9cbiAgICBpbWdPbmVTcmM6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgaW1hZ2Ugc291cmNlIHRoYXQgd2lsbCBiZVxuICAgICAqIGFwcGxpZWQgdG8gdGhlIHNlY29uZCBpbWFnZS5cbiAgICAgKi9cbiAgICBpbWdUd29TcmM6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgc3RyaW5nIHRoYXQgd2lsbCBiZSBhc3NpZ25lZCB0byB0aGVcbiAgICAgKiBgZGF0YS1hbmFseXRpY3NgIGF0dHJpYnV0ZSBvZiB0aGUgZmlyc3QgaW1hZ2UuXG4gICAgICovXG4gICAgYW5hbHl0aWNzU3RyaW5nSW1nT25lOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHN0cmluZyB0aGF0IHdpbGwgYmUgYXNzaWduZWQgdG8gdGhlXG4gICAgICogYGRhdGEtYW5hbHl0aWNzYCBhdHRyaWJ1dGUgb2YgdGhlIHNlY29uZCBpbWFnZS5cbiAgICAgKi9cbiAgICBhbmFseXRpY3NTdHJpbmdJbWdUd286IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgc3RyaW5nIHRoYXQgd2lsbCBiZSBhc3NpZ25lZCB0byB0aGVcbiAgICAgKiBgZGF0YS1hbmFseXRpY3NgIGF0dHJpYnV0ZSBvZlxuICAgICAqIHRoZSBjbGlja2FibGUgZGlzY2xhaW1lci5cbiAgICAgKi9cbiAgICBhbmFseXRpY3NTdHJpbmdEaXNjbGFpbWVyOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRXhwZWN0cyBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmdcbiAgICAgKiBvZiBjbGFzc2VzIHRvIGJlIGFkZGVkIHRvIHRoZVxuICAgICAqIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBhZGRpdGlvbmFsQ2xhc3Nlczogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICAgKiBmaXJzdCBpbWFnZS5cbiAgICAgKi9cbiAgICBhZGRpdGlvbmFsQ2xhc3Nlc0ltZ09uZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEV4cGVjdHMgYSBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nXG4gICAgICogb2YgY2xhc3NlcyB0byBiZSBhZGRlZCB0byB0aGVcbiAgICAgKiBzZWNvbmQgaW1hZ2UuXG4gICAgICovXG4gICAgYWRkaXRpb25hbENsYXNzZXNJbWdUd286IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCB0aGF0IGFwcGVhcnMgYWJvdmUgdGhlXG4gICAgICogaW1hZ2VzIGFuZCBzZXJ2ZXMgYXMgdGhlIGhlYWRpbmdcbiAgICAgKiBmb3IgdGhlIEF3YXJkLlxuICAgICAqL1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgdGhhdCB3aWxsIGJlIHRoZSBjbGlja2FibGVcbiAgICAgKiB0aXRsZSBvZiB0aGUgZGlzY2xhaW1lciB0b2dnbGUuXG4gICAgICovXG4gICAgZGlzY2xhaW1lclRpdGxlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgdGhhdCB3aWxsIGJlIGluc2lkZSB0aGVcbiAgICAgKiBkaXNjbGFpbWVyIHRvZ2dsZS5cbiAgICAgKi9cbiAgICBkaXNjbGFpbWVyQ29weTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIElmIGBmYWxzZWAsIHRoZSBkaXNjbGFpbWVyXG4gICAgICogdG9nZ2xlIHdpbGwgbm90IGJlIHJlbmRlcmVkLlxuICAgICAqL1xuICAgIGRpc2NsYWltZXI6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgc3VwcGxpZWQgd2lsbCBiZSBhc3NpZ25lZFxuICAgICAqIHRvIHRoZSBgZGF0YS1pZGAgYXR0cmlidXRlIG9uIHRoZVxuICAgICAqIGNvbXBvbmVudC4gVGhpcyBpcyBpbnRlbmRlZCB0byBiZVxuICAgICAqIHVzZWQgYXMgYSBzZWxlY3RvciBmb3IgYXV0b21hdGVkXG4gICAgICogdG9vbHMuIFRoaXMgdmFsdWUgc2hvdWxkIGJlIHVuaXF1ZVxuICAgICAqIHBlciBwYWdlLlxuICAgICAqL1xuICAgIGlkU3RyaW5nOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGdldENsYXNzZXMoKTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBnZXRJbWdDb250YWluZXJDbGFzc2VzKCk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgZ2V0Q2xhc3Nlc0ltZ09uZSgpOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGdldENsYXNzZXNJbWdUd28oKTogc3RyaW5nO1xufVxuIl19