import { Renderer2, ElementRef, OnInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class SprkLinkDirective implements OnInit {
    private renderer;
    private el;
    /**
     * @ignore
     */
    constructor(renderer: Renderer2, el: ElementRef);
    /**
     * Will cause the appropriate variant type to render.
     * If omitted, the default Spark Link class is applied.
     */
    variant: 'simple' | 'icon' | 'unstyled' | 'plain';
    /**
     * If `true`, will set disabled styles on the link.
     */
    isDisabled: boolean;
    /**
     * The value supplied will be assigned to the
     * `data-analytics` attribute on the element.
     * Intended for an outside
     * library to capture data.
     */
    analyticsString: string;
    /**
     * The value supplied will be assigned
     * to the `data-id` attribute on the
     * component. This is intended to be
     * used as a selector for automated
     * tools. This value should be unique
     * per page.
     */
    idString: string;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SprkLinkDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SprkLinkDirective, "[sprkLink]", never, { "variant": "variant"; "isDisabled": "isDisabled"; "analyticsString": "analyticsString"; "idString": "idString"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Byay1saW5rLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJzcHJrLWxpbmsuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlbmRlcmVyMiwgRWxlbWVudFJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTcHJrTGlua0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIGVsO1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZW5kZXJlcjogUmVuZGVyZXIyLCBlbDogRWxlbWVudFJlZik7XG4gICAgLyoqXG4gICAgICogV2lsbCBjYXVzZSB0aGUgYXBwcm9wcmlhdGUgdmFyaWFudCB0eXBlIHRvIHJlbmRlci5cbiAgICAgKiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBTcGFyayBMaW5rIGNsYXNzIGlzIGFwcGxpZWQuXG4gICAgICovXG4gICAgdmFyaWFudDogJ3NpbXBsZScgfCAnaWNvbicgfCAndW5zdHlsZWQnIHwgJ3BsYWluJztcbiAgICAvKipcbiAgICAgKiBJZiBgdHJ1ZWAsIHdpbGwgc2V0IGRpc2FibGVkIHN0eWxlcyBvbiB0aGUgbGluay5cbiAgICAgKi9cbiAgICBpc0Rpc2FibGVkOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBzdXBwbGllZCB3aWxsIGJlIGFzc2lnbmVkIHRvIHRoZVxuICAgICAqIGBkYXRhLWFuYWx5dGljc2AgYXR0cmlidXRlIG9uIHRoZSBlbGVtZW50LlxuICAgICAqIEludGVuZGVkIGZvciBhbiBvdXRzaWRlXG4gICAgICogbGlicmFyeSB0byBjYXB0dXJlIGRhdGEuXG4gICAgICovXG4gICAgYW5hbHl0aWNzU3RyaW5nOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIHN1cHBsaWVkIHdpbGwgYmUgYXNzaWduZWRcbiAgICAgKiB0byB0aGUgYGRhdGEtaWRgIGF0dHJpYnV0ZSBvbiB0aGVcbiAgICAgKiBjb21wb25lbnQuIFRoaXMgaXMgaW50ZW5kZWQgdG8gYmVcbiAgICAgKiB1c2VkIGFzIGEgc2VsZWN0b3IgZm9yIGF1dG9tYXRlZFxuICAgICAqIHRvb2xzLiBUaGlzIHZhbHVlIHNob3VsZCBiZSB1bmlxdWVcbiAgICAgKiBwZXIgcGFnZS5cbiAgICAgKi9cbiAgICBpZFN0cmluZzogc3RyaW5nO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG59XG4iXX0=