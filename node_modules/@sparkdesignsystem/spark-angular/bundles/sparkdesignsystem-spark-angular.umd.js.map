{"version":3,"file":"sparkdesignsystem-spark-angular.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@sparkdesignsystem/spark-angular/environment/environment.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-datepicker/sprk-datepicker.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-datepicker/sprk-datepicker.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-field-error/sprk-field-error.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-field-error/sprk-field-error.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-helper-text/sprk-helper-text.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-helper-text/sprk-helper-text.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-input/sprk-input.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-input/sprk-input.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-label/sprk-label.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-label/sprk-label.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-selection-input/sprk-selection-input.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-selection-input/sprk-selection-input.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-selection-label/sprk-selection-label.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-selection-label/sprk-selection-label.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-stack-item/sprk-stack-item.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-stack-item/sprk-stack-item.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-table-head/sprk-table-head.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-table-head/sprk-table-head.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-table-row-heading/sprk-table-row-heading.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-table-row-heading/sprk-table-row-heading.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-input-container/sprk-input-container.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-input-container/sprk-input-container.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-huge-input-container/sprk-huge-input-container.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-huge-input-container/sprk-huge-input-container.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-textarea-container/sprk-textarea-container.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-textarea-container/sprk-textarea-container.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-selection-container/sprk-selection-container.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-selection-container/sprk-selection-container.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-icon/sprk-icon.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-icon/sprk-icon.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-link/sprk-link.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-link/sprk-link.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-toggle/sprk-toggle-animations.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-accordion-item/sprk-accordion-item.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-accordion-item/sprk-accordion-item.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-link/sprk-link.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-link/sprk-link.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-accordion/sprk-accordion.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-accordion/sprk-accordion.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-alert/sprk-alert.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-alert/sprk-alert.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-divider/sprk-divider.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-divider/sprk-divider.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-dropdown/sprk-dropdown.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-dropdown/sprk-dropdown.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-stack/sprk-stack.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-stack/sprk-stack.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-toggle/sprk-toggle.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-toggle/sprk-toggle.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-footer/sprk-footer.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-footer/sprk-footer.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-list-item/sprk-list-item.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-list-item/sprk-list-item.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-masthead/sprk-masthead.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-modal/sprk-modal.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-modal/sprk-modal.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-ordered-list/sprk-ordered-list.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-ordered-list/sprk-ordered-list.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-unordered-list/sprk-unordered-list.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-unordered-list/sprk-unordered-list.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-pagination/sprk-pagination.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-pagination/sprk-pagination.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-promo/sprk-promo.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-promo/sprk-promo.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-table/sprk-table.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-table/sprk-table.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-button/sprk-button.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/inputs/sprk-button/sprk-button.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-award/sprk-award.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-award/sprk-award.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-card/sprk-card.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-card/sprk-card.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-dictionary/sprk-dictionary.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-dictionary/sprk-dictionary.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-highlight-board/sprk-highlight-board.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-highlight-board/sprk-highlight-board.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-box/sprk-box.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-box/sprk-box.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-text/sprk-text.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-text/sprk-text.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-heading/sprk-heading.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-heading/sprk-heading.module.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-flag/sprk-flag.component.ts","ng://@sparkdesignsystem/spark-angular/lib/components/sprk-flag/sprk-flag.module.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-centered-column/sprk-centered-column.directive.ts","ng://@sparkdesignsystem/spark-angular/lib/directives/sprk-centered-column/sprk-centered-column.module.ts","ng://@sparkdesignsystem/spark-angular/lib/spark-angular.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const environment = {\n  version: '10.0.0'\n};\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterDate]'\n})\nexport class SprkFormatterDateDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatDate(value);\n  }\n\n  formatDate(value): string {\n    const m = value.match(\n      // tslint:disable-next-line:max-line-length\n      /^(((0[13578]|1[02])([/-]?)(0[1-9]|[12]\\d|3[01])|(0[469]|11)([/-]?)(0[1-9]|[12]\\d|30)|02([/-]?)((0[1-9])|[12]\\d))(\\4|\\7|\\9)[12]\\d{3})?$/\n    );\n\n    let newValue = '';\n    const cleanValue = value.replace(/[/-]/g, '');\n\n    if (m) {\n      for (let i = 0; i < cleanValue.length; i += 1) {\n        if (i === 1 || i === 3) {\n          newValue += `${cleanValue[i]}/`;\n        } else {\n          newValue += cleanValue[i];\n        }\n      }\n      return newValue;\n    } else {\n      return value;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFormatterDateDirective } from './sprk-formatter-date.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFormatterDateDirective],\n  exports: [SprkFormatterDateDirective]\n})\nexport class SprkFormatterDateModule {}\n","import { Directive, ElementRef, HostListener, Attribute } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\n@Directive({\n  selector: '[sprkFormatterMonetary]'\n})\nexport class SprkFormatterMonetaryDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('blur', ['this.ref.nativeElement.value'])\n  onBlur(value) {\n    this.ref.nativeElement.value = this.formatMonetary(value);\n  }\n\n  formatMonetary(value): void {\n    let number;\n    if (this.ref.nativeElement.validity.valid) {\n      number = Number(value.replace(/[\\$,]/g, ''));\n\n      if (isNaN(number)) {\n        return value;\n      }\n\n      return number\n        .toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n        .replace(/\\$/g, '');\n    }\n    return value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFormatterMonetaryDirective } from './sprk-formatter-monetary.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFormatterMonetaryDirective],\n  exports: [SprkFormatterMonetaryDirective]\n})\nexport class SprkFormatterMonetaryModule {}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterPhoneNumber]'\n})\nexport class SprkFormatterPhoneNumberDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatPhone(value);\n  }\n\n  formatPhone(value): string {\n    const newValue = `${value}`.replace(/\\D/g, '');\n    const m = newValue.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n\n    if (m) {\n      return `(${m[1]}) ${m[2]}-${m[3]}`;\n    } else {\n      return value;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFormatterPhoneNumberDirective } from './sprk-formatter-phone-number.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFormatterPhoneNumberDirective],\n  exports: [SprkFormatterPhoneNumberDirective]\n})\nexport class SprkFormatterPhoneNumberModule {}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterSsn]'\n})\nexport class SprkFormatterSsnDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatSSN(value);\n  }\n\n  formatSSN(value): string {\n    const m = value.match(\n      /(^(?!666|000|9\\d{2})\\d{3}([-]{0,1})(?!00)\\d{2}\\1(?!0{4})\\2\\d{4}$)|^$/\n    );\n    if (m) {\n      let val = value.trim().replace(/[ -]/g, '');\n      let newVal = '';\n      const sizes = [3, 2, 4];\n\n      sizes.forEach(size => {\n        if (val.length > size) {\n          newVal += `${val.substr(0, size)}-`;\n          val = val.substr(size);\n        }\n      });\n\n      newVal += val;\n      return newVal;\n    }\n    return value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFormatterSsnDirective } from './sprk-formatter-ssn.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFormatterSsnDirective],\n  exports: [SprkFormatterSsnDirective]\n})\nexport class SprkFormatterSsnModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport TinyDatePicker from 'tiny-date-picker';\n\n@Directive({\n  selector: '[sprkDatepicker]'\n})\nexport class SprkDatepickerDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * Exposes configuration provided\n   * by `tiny-date-picker`,\n   * see [github](https://github.com/chrisdavies/tiny-date-picker) for documentation.\n   */\n  @Input()\n  sprkDatePickerConfig: object;\n\n  ngOnInit(): void {\n    const input = this.ref.nativeElement;\n    const tdpConfig = {\n      mode: 'dp-below',\n      lang: {\n        days: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n      },\n      min: '01/1/2008',\n      max: '01/1/2068',\n      format: date =>\n        date\n          .toLocaleDateString('en-US', {\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric'\n          })\n          .replace(/[^ -~]/g, '')\n    };\n\n    if (TinyDatePicker) {\n      TinyDatePicker(input, {\n        ...tdpConfig,\n        ...this.sprkDatePickerConfig\n      }).on('select', () => {\n\n        let event;\n\n        if (typeof(Event) === 'function') {\n          event = new Event('input');\n        } else {\n          event = document.createEvent('Event');\n          event.initEvent('input', true, true);\n        }\n\n        this.ref.nativeElement.dispatchEvent(event);\n        this.ref.nativeElement.focus();\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkDatepickerDirective } from './sprk-datepicker.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkDatepickerDirective],\n  exports: [SprkDatepickerDirective]\n})\nexport class SprkDatepickerModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFieldError]'\n})\nexport class SprkFieldErrorDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-ErrorContainer'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkFieldErrorDirective } from './sprk-field-error.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkFieldErrorDirective],\n  exports: [SprkFieldErrorDirective]\n})\nexport class SprkFieldErrorModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkHelperText]'\n})\nexport class SprkHelperTextDirective implements OnInit {\n /**\n  * @ignore\n  */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-HelperText'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkHelperTextDirective } from './sprk-helper-text.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkHelperTextDirective],\n  exports: [SprkHelperTextDirective]\n})\nexport class SprkHelperTextModule {}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  HostListener,\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkInput]'\n})\nexport class SprkInputDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  @HostListener('change', ['$event'])\n  OnChange($event) {\n    const value = (this.ref.nativeElement as HTMLInputElement).value;\n    if (value.length > 0) {\n      this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');\n    } else {\n      this.ref.nativeElement.classList.remove('sprk-b-Input--has-floating-label');\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.ref.nativeElement.nodeName === 'SELECT') {\n      this.ref.nativeElement.classList.add('sprk-b-Select');\n    } else if (this.ref.nativeElement.nodeName === 'TEXTAREA') {\n      this.ref.nativeElement.classList.add('sprk-b-TextInput');\n      this.ref.nativeElement.classList.add('sprk-b-TextArea');\n    } else {\n      this.ref.nativeElement.classList.add('sprk-b-TextInput');\n    }\n\n    if ((this.ref.nativeElement as HTMLInputElement).value.length > 0 ) {\n      this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');\n    }\n    this.ref.nativeElement.classList.add('sprk-u-Width-100');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkInputDirective } from './sprk-input.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkInputDirective],\n  exports: [SprkInputDirective]\n})\nexport class SprkInputModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkLabel]'\n})\nexport class SprkLabelDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-Label'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkLabelDirective } from './sprk-label.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkLabelDirective],\n  exports: [SprkLabelDirective]\n})\nexport class SprkLabelModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkSelectionInput]'\n})\nexport class SprkSelectionInputDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-SelectionInput'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkSelectionInputDirective } from './sprk-selection-input.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkSelectionInputDirective],\n  exports: [SprkSelectionInputDirective]\n})\nexport class SprkSelectionInputModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkSelectionLabel]'\n})\nexport class SprkSelectionLabelDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-Label', 'sprk-b-Label--inline'];\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkSelectionLabelDirective } from './sprk-selection-label.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkSelectionLabelDirective],\n  exports: [SprkSelectionLabelDirective]\n})\nexport class SprkSelectionLabelModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkStackItem]'\n})\nexport class SprkStackItemDirective implements OnInit {\n  ngOnInit(): void {\n    this.ref.nativeElement.classList.add('sprk-o-Stack__item');\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkStackItemDirective } from './sprk-stack-item.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkStackItemDirective],\n  exports: [SprkStackItemDirective]\n})\nexport class SprkStackItemModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableEmptyHeading]'\n})\nexport class SprkTableEmptyHeadingDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__empty-heading'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableEmptyHeadingDirective } from './sprk-table-empty-heading.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableEmptyHeadingDirective],\n  exports: [SprkTableEmptyHeadingDirective]\n})\nexport class SprkTableEmptyHeadingModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableGroupedColumn]'\n})\nexport class SprkTableGroupedColumnDirective implements OnInit {\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * element.\n  */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__grouped-column'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableGroupedColumnDirective } from './sprk-table-grouped-column.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableGroupedColumnDirective],\n  exports: [SprkTableGroupedColumnDirective]\n})\nexport class SprkTableGroupedColumnModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableHead]'\n})\nexport class SprkTableHeadDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__head'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableHeadDirective } from './sprk-table-head.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableHeadDirective],\n  exports: [SprkTableHeadDirective]\n})\nexport class SprkTableHeadModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableRowHeading]'\n})\nexport class SprkTableRowHeadingDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__row-heading'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableRowHeadingDirective } from './sprk-table-row-heading.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableRowHeadingDirective],\n  exports: [SprkTableRowHeadingDirective]\n})\nexport class SprkTableRowHeadingModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTabbedNavigationPanel]'\n})\nexport class SprkTabbedNavigationPanelDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, the Panel will\n   * be set as the active Panel on render.\n   */\n  @Input()\n  defaultActive: boolean;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-c-Tabs__content'];\n\n    if (!this.defaultActive) {\n      classArray.push('sprk-u-HideWhenJs');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.ref.nativeElement.setAttribute('role', 'tabpanel');\n    this.ref.nativeElement.setAttribute('tabindex', '0');\n\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTabbedNavigationPanelDirective } from './sprk-tabbed-navigation-panel.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTabbedNavigationPanelDirective],\n  exports: [SprkTabbedNavigationPanelDirective]\n})\nexport class SprkTabbedNavigationPanelModule {}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTabbedNavigationTab]'\n})\nexport class SprkTabbedNavigationTabDirective implements OnInit {\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * element.\n  */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, the Tab will have\n   * active styles and aria attributes on render.\n   */\n  @Input()\n  defaultActive: boolean;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-c-Tabs__button'];\n\n    if (this.defaultActive) {\n      classArray.push('sprk-c-Tabs__button--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray;\n  }\n\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n\n    this.ref.nativeElement.setAttribute('role', 'tab');\n    this.ref.nativeElement.setAttribute(\n      'aria-selected',\n      this.defaultActive ? 'true' : 'false'\n    );\n\n    if (this.analyticsString) {\n      this.ref.nativeElement.setAttribute(\n        'data-analytics',\n        this.analyticsString\n      );\n    }\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTabbedNavigationTabDirective } from './sprk-tabbed-navigation-tab.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTabbedNavigationTabDirective],\n  exports: [SprkTabbedNavigationTabDirective]\n})\nexport class SprkTabbedNavigationTabModule {}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"[sprk-select-icon]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SparkInputContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SparkInputContainerComponent } from './sprk-input-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SparkInputContainerComponent],\n  exports: [SparkInputContainerComponent]\n})\nexport class SparkInputContainerModule {}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport { uniqueId } from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-huge-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprk-select-icon]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkHugeInputContainerComponent implements OnInit {\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * component.\n  */\n  @Input()\n  additionalClasses: string;\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * icon container.\n  */\n  @Input()\n  iconContainerClasses: string;\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n /**\n  * This component expects a child input element\n  * with the `sprkInput` directive.\n  */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-InputContainer',\n      'sprk-b-InputContainer--huge'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkHugeInputContainerComponent } from './sprk-huge-input-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkHugeInputContainerComponent],\n  exports: [SprkHugeInputContainerComponent]\n})\nexport class SprkHugeInputContainerModule {}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-textarea-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkTextareaContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-InputContainer',\n      'sprk-b-InputContainer--textarea'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkTextareaContainerComponent } from './sprk-textarea-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkTextareaContainerComponent],\n  exports: [SprkTextareaContainerComponent]\n})\nexport class SprkTextareaContainerModule {}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-icon-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <div [ngClass]=\"getIconContainerClasses()\">\n        <ng-content select=\"[sprkLabel]\"></ng-content>\n        <ng-content select=\"[sprk-input-icon]\"></ng-content>\n        <ng-content select=\"[sprkInput]\"></ng-content>\n      </div>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkIconInputContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n  /**\n   * @ignore\n   */\n  getIconContainerClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer__icon-container'];\n\n    if (this.iconContainerClasses) {\n      this.iconContainerClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconInputContainerComponent } from './sprk-icon-input-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkIconInputContainerComponent],\n  exports: [SprkIconInputContainerComponent]\n})\nexport class SprkIconInputContainerModule {}\n","import { Component, ContentChild, Input, OnInit, Renderer2 } from '@angular/core';\nimport uniqueId from 'lodash/uniqueId';\nimport { SprkSelectionInputDirective } from '../../../directives/inputs/sprk-selection-input/sprk-selection-input.directive';\nimport { SprkSelectionLabelDirective } from '../../../directives/inputs/sprk-selection-label/sprk-selection-label.directive';\n\n@Component({\n  selector: 'sprk-selection-item-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkSelectionInput]\"></ng-content>\n      <ng-content select=\"[sprkSelectionLabel]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkSelectionItemContainerComponent implements OnInit {\n  constructor( private renderer: Renderer2) {}\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkSelectionLabel` directive.\n   */\n  @ContentChild(SprkSelectionLabelDirective, { static: true })\n  label: SprkSelectionLabelDirective;\n  /**\n   * This component expects a child selection input\n   * with the `sprkSelectionInput` directive.\n   */\n  @ContentChild(SprkSelectionInputDirective, { static: true })\n  input: SprkSelectionInputDirective;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-SelectionContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  addInputTypeClasses(): void {\n    const inputType = this.input.ref.nativeElement.type;\n    if (inputType === 'checkbox') {\n      this.renderer.addClass(this.input.ref.nativeElement, 'sprk-b-Checkbox__input');\n      this.renderer.addClass(this.label.ref.nativeElement, 'sprk-b-Checkbox__label');\n    }\n    if (inputType === 'radio') {\n      this.renderer.addClass(this.input.ref.nativeElement, 'sprk-b-Radio__input');\n      this.renderer.addClass(this.label.ref.nativeElement, 'sprk-b-Radio__label');\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  generateIdForInput(): void {\n    let inputId = this.input.ref.nativeElement.id;\n    const labelFor = this.label.ref.nativeElement.htmlFor;\n\n    // Warn if 'for' exists but the 'id' does not\n    if (labelFor && !inputId) {\n      console.warn(`Spark Design System Warning - The value of 'for' (${labelFor}) on the label expects a matching 'id' on the input.`);\n      return;\n    }\n\n    // Warn if 'for' and 'id' both exist but don't match\n    if (inputId && labelFor && inputId !== labelFor) {\n      console.warn(\n        `Spark Design System Warning - The value of 'for' (${labelFor}) on the label should match the 'id' on the input (${inputId}).`\n      );\n      return;\n    }\n\n    // If we don't have a valid id, generate one with lodash\n    if (!inputId) {\n      inputId = uniqueId(`sprk_input_`);\n      this.renderer.setProperty(this.input.ref.nativeElement, 'id', inputId);\n      this.renderer.setAttribute(this.label.ref.nativeElement, 'for', inputId);\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.generateIdForInput();\n      this.addInputTypeClasses();\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Input,\n  QueryList\n} from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\nimport { SprkSelectionItemContainerComponent } from '../sprk-selection-item-container/sprk-selection-item-container.component';\n\n@Component({\n  selector: 'sprk-selection-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <fieldset class=\"sprk-b-Fieldset\">\n        <legend class=\"sprk-b-Legend\">\n          <ng-content select=\"[sprkLabel]\"></ng-content>\n        </legend>\n        <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      </fieldset>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkSelectionContainerComponent implements AfterContentInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: false })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: false })\n  error: SprkFieldErrorDirective;\n  /**\n   * This component expects a child\n   * `<sprk-selection-item-container>` component.\n   */\n  @ContentChildren(SprkSelectionItemContainerComponent)\n  selectionItems: QueryList<SprkSelectionItemContainerComponent>;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  ngAfterContentInit(): void {\n    if (this.selectionItems && this.error) {\n      this.selectionItems.forEach(item => {\n        item.input.ref.nativeElement.setAttribute(\n          'aria-describedby',\n          this.error_id\n        );\n      });\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkSelectionContainerComponent } from './sprk-selection-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkSelectionContainerComponent],\n  exports: [SprkSelectionContainerComponent]\n})\nexport class SprkSelectionContainerModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SprkSelectionItemContainerComponent } from './sprk-selection-item-container.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  declarations: [SprkSelectionItemContainerComponent],\n  exports: [SprkSelectionItemContainerComponent]\n})\nexport class SprkSelectionItemContainerModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-icon',\n  template: `\n    <svg [ngClass]=\"getClasses()\" viewBox=\"0 0 64 64\" [attr.data-id]=\"idString\">\n      <use [attr.xlink:href]=\"icon\" />\n    </svg>\n  `,\n  styles: [':host { line-height: 1; }']\n})\nexport class SprkIconComponent {\n  /**\n   * Determines which icon is rendered.\n   * Expects the value to match the exact name\n   * of the icon found in the docs\n   * (i.e. `chevron-down`, instead of `chevron down`).\n   */\n  @Input()\n  iconType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  public icon: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Icon'];\n\n    this.icon = `#${this.iconType}`;\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconComponent } from './sprk-icon.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkIconComponent],\n  exports: [SprkIconComponent]\n})\nexport class SprkIconModule {}\n","import {\n  Directive,\n  Input,\n  HostBinding,\n  Renderer2,\n  ElementRef,\n  OnInit\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkLink]'\n})\nexport class SprkLinkDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(private renderer: Renderer2, private el: ElementRef) { }\n  /**\n   * Will cause the appropriate variant type to render.\n   * If omitted, the default Spark Link class is applied.\n   */\n  @Input() variant:\n    | 'simple'\n    | 'icon'\n    | 'unstyled'\n    | 'plain';\n\n  /**\n   * If `true`, will set disabled styles on the link.\n   */\n  @HostBinding('class.sprk-b-Link--disabled')\n  @Input() isDisabled: boolean;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the element.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @HostBinding('attr.data-analytics')\n  @Input() analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @HostBinding('attr.data-id')\n  @Input() idString: string;\n\n  ngOnInit() {\n    if (this.variant !== 'unstyled') {\n      this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link');\n    }\n    if (this.variant === 'simple' || this.variant === 'icon') {\n      this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--simple');\n    }\n    if (this.variant === 'icon') {\n      this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--has-icon');\n    }\n    if (this.variant === 'plain') {\n      this.renderer.addClass(this.el.nativeElement, 'sprk-b-Link--plain');\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkLinkDirective } from './sprk-link.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkLinkDirective],\n  exports: [SprkLinkDirective]\n})\nexport class SprkLinkDirectiveModule {}\n","import {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport const toggleAnimations: {\n  readonly toggleContent: AnimationTriggerMetadata;\n} = {\n  toggleContent: trigger('toggleContent', [\n    state(\n      'closed',\n      style({\n        height: '0',\n        overflow: 'hidden',\n        visibility: 'hidden',\n      })\n    ),\n    state(\n      'open',\n      style({\n        height: '*',\n        visibility: 'visible',\n      })\n    ),\n    transition('open <=> closed', animate('300ms ease-in'))\n  ])\n};\n","import { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { toggleAnimations } from '../sprk-toggle/sprk-toggle-animations';\n\n@Component({\n  selector: 'sprk-accordion-item',\n  template: `\n    <li [ngClass]=\"getClasses()\">\n      <button\n        sprkLink\n        variant=\"unstyled\"\n        href=\"#\"\n        [attr.aria-controls]=\"accordion_controls_id\"\n        [attr.aria-expanded]=\"isOpen\"\n        class=\"sprk-c-Accordion__summary\"\n        [analyticsString]=\"analyticsString\"\n        [idString]=\"idString\"\n        (click)=\"toggleAccordion($event)\"\n      >\n        <span [ngClass]=\"getHeadingClasses()\">\n          <sprk-icon\n            [iconType]=\"leadingIcon\"\n            additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-u-mrs\"\n            *ngIf=\"leadingIcon\"\n          ></sprk-icon>\n          {{ title }}\n        </span>\n\n        <sprk-icon\n          additionalClasses=\"sprk-c-Accordion__icon sprk-c-Icon--toggle sprk-c-Icon--l {{\n            iconStateClass\n          }}\"\n          [iconType]=\"currentIconType\"\n        ></sprk-icon>\n      </button>\n\n      <div [@toggleContent]=\"animState\">\n        <div\n          [id]=\"accordion_controls_id\"\n          class=\"sprk-c-Accordion__content sprk-b-TypeBodyTwo\"\n        >\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </li>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkAccordionItemComponent implements OnInit {\n  /**\n   * The value supplied will be rendered\n   * inside the title area of the Accordion item.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * heading in the Accordion item.\n   */\n  @Input()\n  additionalHeadingClasses: string;\n  /**\n   * The Accordion item will use this to decide\n   * if it should be open or closed on first render.\n   * (Interacting with the toggle will override this input.)\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * If `true`, the active CSS class\n   * will be applied to the item.\n   */\n  @Input()\n  isActive: boolean;\n  /**\n   * The name of the icon to use for\n   * a closed Accordion item.\n   */\n  @Input()\n  iconTypeClosed = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use for\n   * an open Accordion item.\n   */\n  @Input()\n  iconTypeOpen = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use before\n   * the title in the Accordion item.\n   * This is optional.\n   */\n  @Input()\n  leadingIcon: string;\n\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  accordion_controls_id = `accordionHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  public currentIconType = this.iconTypeClosed;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  accordionState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.currentIconType = this.iconTypeClosed)\n      : (this.currentIconType = this.iconTypeOpen);\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n\n  /**\n   * @ignore\n   */\n  toggleAccordion(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.accordionState();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Accordion__item',\n      'sprk-u-Overflow--hidden'\n    ];\n\n    if (this.isOpen) {\n      classArray.push('sprk-c-Accordion__item--open');\n    }\n\n    if (this.isActive) {\n      classArray.push('sprk-c-Accordion__item--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getHeadingClasses(): string {\n    const classArray: string[] = ['sprk-c-Accordion__heading'];\n\n    if (this.additionalHeadingClasses) {\n      this.additionalHeadingClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit() {\n    this.accordionState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkAccordionItemComponent } from './sprk-accordion-item.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],\n  declarations: [SprkAccordionItemComponent],\n  exports: [SprkAccordionItemComponent]\n})\nexport class SprkAccordionItemModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'sprk-link',\n  template: `\n    <a\n      (click)=\"handleClick($event)\"\n      [ngClass]=\"getClasses()\"\n      [href]=\"href\"\n      [attr.data-analytics]=\"analyticsString\"\n      [attr.target]=\"target\"\n      [attr.data-id]=\"idString\"\n      [attr.disabled]=\"isDisabled\"\n      [attr.aria-controls]=\"ariaControls\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      [attr.aria-haspopup]=\"ariaHasPopUp\"\n      [attr.role]=\"role\"\n      [attr.id]=\"id\"\n      [attr.aria-current]=\"ariaCurrent\"\n      [attr.aria-expanded]=\"ariaExpanded\"\n      [attr.aria-hidden]=\"ariaHidden\"\n      [attr.aria-selected]=\"ariaSelected\"\n    >\n      <ng-content></ng-content>\n    </a>\n  `\n})\n/**\n * @deprecate This component will be removed in\n * a future release in favor of the `sprkLink` directive.\n * Please use the Spark Link\n * directive.\n */\nexport class SprkLinkComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public router: Router) {}\n\n  /**\n   * Will cause the appropriate variant type to render.\n   * Optional values are: `simple`, `icon`, `unstyled` or `plain`.\n   * If omitted, the default Spark Link class is applied.\n   * The `unstyled` variant will render an `href` with no\n   * CSS classes.\n   */\n  @Input()\n  linkType: string;\n  /**\n   * The `href` value of the link. If omitted,\n   * the href will be set to `#`\n   * and the routing will be disabled. If\n   * set to reference an ID then the page\n   * will scroll to that anchor as normal.\n   */\n  @Input()\n  href: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Value for the `role`\n   * attribute of the link.\n   */\n  @Input()\n  role: string;\n  /**\n   * The string that will be\n   * assigned to the `id` attribute of\n   * the link.\n   */\n  @Input()\n  id: string;\n  /**\n   * Expects a value to assign to the\n   * `aria-controls` attribute of the link.\n   */\n  @Input()\n  ariaControls: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-labelledby` attribute of the link.\n   */\n  @Input()\n  ariaLabelledby: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-selected` attribute of the link.\n   */\n  @Input()\n  ariaSelected: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-hidden` attribute of the link.\n   */\n  @Input()\n  ariaHidden: string;\n  /**\n   * Expects a value to assign\n   * to the `aria-curren`t attribute of the link.\n   */\n  @Input()\n  ariaCurrent: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-expanded `attribute of the link.\n   */\n  @Input()\n  ariaExpanded: string;\n  /**\n   * Expects a value to assign\n   * to the `aria-haspopup` attribute of the link.\n   */\n  @Input()\n  ariaHasPopUp: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-label` attribute of the link.\n   */\n  @Input()\n  ariaLabel: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a value to assign to\n   * the `target` attribute of the link.\n   */\n  @Input()\n  target: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, will set disabled styles on the link.\n   */\n  @Input()\n  isDisabled: boolean;\n  /**\n   * By default, the component determines if\n   * the `href` is an external or internal link\n   * by looking for the `:` character in the\n   * `href` string. If external link functionality\n   * is desired with an `href` value that contains\n   * a `:` set this input to true. This overrides\n   * the default and avoids using the Angular Router.\n   */\n  @Input()\n  isExternal = false;\n\n  ngOnInit() {\n\n    // This message is split up like this so that we can keep the line\n    // length down in the editor while also logging a single unformatted\n    // line of text in the console.\n    const message = 'Spark Design System Warning: Spark Link has been ' +\n    'refactored to be an Angular Directive. The old Angular Component ' +\n    'version has been deprecated. This version will be permanently removed ' +\n    'from Spark in our Summer 2020 release. To update to the new version, ' +\n    'replace any instance of the <sprk-link> component in your codebase with ' +\n    'the new Directive syntax.';\n\n    console.warn(message);\n\n    // Sets the default href if none provided\n    if (this.href === '' || this.href === null || this.href === undefined) {\n      this.href = '#';\n      return;\n    }\n    // Build jump link's href\n    if (this.isJumpLink(this.href)) {\n      this.href = `${this.getPathWithoutHash(this.router.url)}${this.href}`;\n    }\n  }\n  /**\n   * @ignore\n   */\n  isExternalLink(value): boolean {\n    return new RegExp('^.*:', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isJumpLinkWithPage(value): boolean {\n    return new RegExp('^.*#.+', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isJumpLink(value): boolean {\n    return new RegExp('^#.+', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isNoActionLink(value): boolean {\n    return value === '#';\n  }\n  /**\n   * @ignore\n   */\n  getPathWithoutHash(value): string {\n    return value.split('#')[0];\n  }\n  /**\n   * @ignore\n   */\n  scrollToId() {\n    const elementID = this.href.split('#').pop();\n    const element: HTMLElement = document.getElementById(elementID);\n    if (element) {\n      element.scrollIntoView();\n    }\n  }\n  /**\n   * @ignore\n   */\n  handleClick(event): void {\n    // Let browser handle route if external Link\n    if (this.isExternalLink(this.href) || this.isExternal) {\n      return;\n    }\n\n    event.preventDefault();\n\n    // Prevent default and return\n    if (this.isNoActionLink(this.href)) {\n      return;\n    } else if (this.isJumpLinkWithPage(this.href)) {\n      if (\n        this.getPathWithoutHash(this.href) ===\n        this.getPathWithoutHash(this.router.url)\n      ) {\n        this.scrollToId();\n      } else {\n        this.router.navigateByUrl(this.href);\n      }\n    } else {\n      this.router.navigateByUrl(this.href);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [];\n\n    switch (this.linkType) {\n      case 'unstyled':\n        break;\n      case 'simple':\n        classArray.push('sprk-b-Link sprk-b-Link--simple');\n        break;\n      case 'plain':\n        classArray.push('sprk-b-Link sprk-b-Link--plain');\n        break;\n      case 'icon':\n        classArray.push(\n          'sprk-b-Link sprk-b-Link--simple sprk-b-Link--has-icon'\n        );\n        break;\n      default:\n        classArray.push('sprk-b-Link');\n        break;\n    }\n\n    if (this.isDisabled) {\n      classArray.push('sprk-b-Link--disabled');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkLinkComponent } from './sprk-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkLinkComponent],\n  exports: [SprkLinkComponent]\n})\nexport class SprkLinkModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-accordion',\n  template: `\n    <ul [ngClass]=\"getClasses()\">\n      <ng-content></ng-content>\n    </ul>\n  `\n})\nexport class SprkAccordionComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Accordion', 'sprk-o-VerticalList'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkModule } from '../sprk-link/sprk-link.module';\nimport { SprkAccordionComponent } from './sprk-accordion.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SprkIconModule, SprkLinkModule],\n  declarations: [SprkAccordionComponent],\n  exports: [SprkAccordionComponent]\n})\nexport class SprkAccordionModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-alert',\n  template: `\n    <div\n      *ngIf=\"visible\"\n      [ngClass]=\"getClassesAlertContainer()\"\n      role=\"alert\"\n      [attr.data-analytics]=\"analyticsString\"\n      [attr.data-id]=\"idString\"\n    >\n      <div class=\"sprk-c-Alert__content\">\n        <sprk-icon\n          iconType=\"{{ icon }}\"\n          additionalClasses=\"sprk-c-Alert__icon sprk-c-Icon--l sprk-c-Icon--stroke-current-color\"\n          aria-hidden=\"true\"\n        ></sprk-icon>\n\n        <p class=\"sprk-c-Alert__text\"><ng-content></ng-content></p>\n      </div>\n\n      <button\n        *ngIf=\"dismissible !== false\"\n        class=\"sprk-c-Alert__icon sprk-c-Alert__icon--dismiss\"\n        type=\"button\"\n        title=\"Dismiss\"\n        (click)=\"alertDismiss($event)\"\n      >\n        <sprk-icon\n          iconType=\"close\"\n          additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n          aria-hidden=\"true\"\n        ></sprk-icon>\n      </button>\n    </div>\n  `\n})\nexport class SprkAlertComponent {\n  /**\n   * The type of Alert variant to render.\n   * \tCan be `info`, `fail`, or `success`.\n   */\n  @Input()\n  alertType: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `false`, the dismiss button will not be rendered and\n   * the Alert will not dismissible.\n   * If `true`, the dismiss button will be rendered and\n   * the Alert will be dismissible.\n   */\n  @Input()\n  dismissible: boolean;\n\n  /**\n   * @ignore\n   */\n  public icon: string;\n  /**\n   * @ignore\n   */\n  public visible = true;\n\n  /**\n   * @ignore\n   */\n  getClassesAlertContainer(): string {\n    const alertClassArray: string[] = ['sprk-c-Alert'];\n\n    switch (this.alertType) {\n      case 'success':\n        alertClassArray.push('sprk-c-Alert--success');\n        this.icon = 'check-mark';\n        break;\n      case 'info':\n        alertClassArray.push('sprk-c-Alert--info');\n        this.icon = 'bell';\n        break;\n      case 'fail':\n        alertClassArray.push('sprk-c-Alert--fail');\n        this.icon = 'exclamation';\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        alertClassArray.push(className);\n      });\n    }\n\n    return alertClassArray.join(' ');\n  }\n\n  /**\n   * When the dismiss button is clicked\n   * this method sets the visable state to `false`\n   * and hides the Alert component.\n   */\n  alertDismiss(event): void {\n    this.visible = false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkAlertComponent } from './sprk-alert.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SprkIconModule],\n  declarations: [SprkAlertComponent],\n  exports: [SprkAlertComponent]\n})\nexport class SprkAlertModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-divider',\n  template: `\n    <span [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\"> </span>\n  `\n})\nexport class SprkDividerComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Divider'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkDividerComponent } from './sprk-divider.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkDividerComponent],\n  exports: [SprkDividerComponent]\n})\nexport class SprkDividerModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  HostListener,\n  EventEmitter\n} from '@angular/core';\nimport { ISprkDropdownChoice } from './sprk-dropdown.interfaces';\n\n@Component({\n  selector: 'sprk-dropdown',\n  template: `\n    <div\n      [ngClass]=\"{\n        'sprk-c-MastheadMask': isOpen && dropdownType === 'mastheadSelector'\n      }\"\n    >\n      <div [ngClass]=\"{ 'sprk-o-Box': dropdownType === 'mastheadSelector' }\">\n        <a\n          sprkLink\n          [ngClass]=\"getTriggerClasses()\"\n          (click)=\"toggle($event)\"\n          [idString]=\"idString\"\n          [analyticsString]=\"analyticsString\"\n          aria-haspopup=\"listbox\"\n          href=\"#\"\n          [attr.aria-label]=\"triggerText ? triggerText : (screenReaderText || 'Choose One')\"\n        >\n          <span [ngClass]=\"getTriggerTextClasses()\">{{ triggerText }}</span>\n          <span class=\"sprk-u-ScreenReaderText\">{{ screenReaderText }}</span>\n          <sprk-icon\n            [iconType]=\"triggerIconType\"\n            additionalClasses=\"sprk-u-mls sprk-c-Icon--stroke-current-color {{\n              additionalIconClasses\n            }}\"\n          ></sprk-icon>\n        </a>\n      </div>\n\n      <div [ngClass]=\"getClasses()\" *ngIf=\"isOpen\">\n        <div\n          class=\"sprk-c-Dropdown__header\"\n          *ngIf=\"dropdownType === 'mastheadSelector' || title || selector\"\n        >\n          <h2 class=\"sprk-c-Dropdown__title sprk-b-TypeBodyTwo\" *ngIf=\"title\">\n            {{ title }}\n          </h2>\n\n          <a\n            sprkLink\n            *ngIf=\"selector && !title\"\n            variant=\"plain\"\n            class=\"sprk-o-Stack sprk-o-Stack--split@xxs sprk-o-Stack--center-column sprk-u-Width-100\"\n            (click)=\"toggle($event)\"\n            [attr.aria-label]=\"title\"\n            href=\"#\"\n          >\n            <span\n              class=\"sprk-c-Dropdown__title sprk-b-TypeBodyTwo sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n              >{{ selector }}</span\n            >\n            <sprk-icon\n              [iconType]=\"triggerIconType\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mls sprk-c-Icon--toggle sprk-Stack__item {{\n                additionalIconClasses\n              }}\"\n            ></sprk-icon>\n          </a>\n        </div>\n\n        <ul\n          class=\"sprk-c-Dropdown__links\"\n          role=\"listbox\"\n          [attr.aria-label]=\"title ? title : (screenReaderText || 'My Choices')\"\n        >\n          <li\n            class=\"sprk-c-Dropdown__item\"\n            *ngFor=\"let choice of choices; let i = index\"\n            [attr.data-sprk-dropdown-choice-index]=\"i\"\n            (click)=\"choiceClick($event)\"\n            [attr.aria-selected]=\"choice.active\"\n            role=\"option\"\n          >\n            <div *ngIf=\"choice.content; then content; else link\"></div>\n            <ng-template #link>\n              <a\n                sprkLink\n                variant=\"unstyled\"\n                [attr.href]=\"choice.href\"\n                [analyticsString]=\"choice.analyticsString\"\n                [ngClass]=\"{\n                  'sprk-c-Dropdown__link': true,\n                  'sprk-c-Dropdown__link--active': choice.active\n                }\"\n                [attr.aria-label]=\"choice.text\"\n                >{{ choice.text }}\n              </a>\n            </ng-template>\n            <ng-template #content>\n              <a\n                sprkLink\n                variant=\"unstyled\"\n                [attr.href]=\"choice.href\"\n                [analyticsString]=\"choice.analyticsString\"\n                [ngClass]=\"{\n                  'sprk-c-Dropdown__link': true,\n                  'sprk-c-Dropdown__link--active': choice.active\n                }\"\n                [attr.aria-label]=\"choice.content.title\"\n              >\n                <p class=\"sprk-b-TypeBodyOne\">{{ choice.content.title }}</p>\n                <p>{{ choice.content.infoLine1 }}</p>\n                <p>{{ choice.content.infoLine2 }}</p>\n              </a>\n            </ng-template>\n          </li>\n        </ul>\n        <ng-content select=\"[sprkDropdownFooter]\"></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class SprkDropdownComponent {\n  /**\n   * The variant of the Dropdown to render.\n   */\n  @Input()\n  dropdownType = 'base';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon.\n   */\n  @Input()\n  additionalIconClasses: string;\n  /**\n   * Expects a space separated string of\n   * classes to be added to the trigger link element.\n   */\n  @Input()\n  additionalTriggerClasses: string;\n  /**\n   * Expects a space separated string of\n   * classes to be added to the trigger text.\n   */\n  @Input()\n  additionalTriggerTextClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * If `true`, the Dropdown will be open when rendered.\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * The value supplied will be displayed\n   * in a box above the choices.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to\n   * the title text.\n   */\n  @Input()\n  selector: string;\n  /**\n   * Expects an array of\n   * [ISprkDropdownChoice](https://github.com/sparkdesignsystem/spark-design-system/tree/master/src/angular/projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.interfaces.ts)\n   *  objects.\n   */\n  @Input()\n  choices: ISprkDropdownChoice[];\n  /**\n   * If supplied, will render the icon\n   * to the right of the trigger text.\n   */\n  @Input()\n  triggerIconType: string;\n  /**\n   * The text that is initially rendered to the trigger.\n   * If `dropdownType` is `informational`,\n   * clicking on a choice will change the trigger text.\n   */\n  @Input()\n  triggerText: string;\n  /**\n   * The value supplied will be visually hidden\n   * inside the trigger. Userful\n   * for when title is empty,\n   * and only `triggerIconType` is supplied.\n   */\n  @Input()\n  screenReaderText: string;\n  /**\n   * The event that is\n   * emitted from the Dropdown when a choice\n   * is clicked. The event contains the value\n   * of the choice that was clicked.\n   */\n  @Output()\n  choiceMade: EventEmitter<string> = new EventEmitter();\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n  /**\n   * @ignore\n   */\n  toggle(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event): void {\n    if (\n      !this.ref.nativeElement.contains(event.target) ||\n      event.target.classList.contains('sprk-c-MastheadMask')\n    ) {\n      this.hideDropdown();\n    }\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusin(event): void {\n    /* istanbul ignore else: angular focus event isnt setting e.target */\n    if (\n      !this.ref.nativeElement.contains(event.target) ||\n      event.target.classList.contains('sprk-c-MastheadMask')\n    ) {\n      this.hideDropdown();\n    }\n  }\n  /**\n   * @ignore\n   */\n  choiceClick(event) {\n    this.clearActiveChoices();\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    const clickedChoice = this.choices[choiceIndex];\n    if (\n      this.dropdownType === 'informational' ||\n      this.dropdownType === 'mastheadSelector'\n    ) {\n      this.setActiveChoice(event);\n      this.updateTriggerText(event);\n    }\n    this.hideDropdown();\n    this.choiceMade.emit(clickedChoice['value']);\n  }\n  /**\n   * @ignore\n   */\n  setActiveChoice(event): void {\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    this.choices[choiceIndex]['active'] = true;\n  }\n  /**\n   * @ignore\n   */\n  updateTriggerText(event): void {\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    this.triggerText = this.choices[choiceIndex]['value'];\n  }\n\n  /**\n   * @ignore\n   */\n  clearActiveChoices(): void {\n    this.choices.forEach((choice: ISprkDropdownChoice) => {\n      choice['active'] = false;\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  hideDropdown(): void {\n    this.isOpen = false;\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Dropdown'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTriggerClasses(): string {\n    const classArray: string[] = [];\n\n    if (this.additionalTriggerClasses) {\n      this.additionalTriggerClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTriggerTextClasses(): string {\n    const classArray: string[] = [''];\n\n    if (this.additionalTriggerTextClasses) {\n      this.additionalTriggerTextClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkDropdownComponent } from './sprk-dropdown.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],\n  declarations: [SprkDropdownComponent],\n  exports: [SprkDropdownComponent]\n})\nexport class SprkDropdownModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-stack',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-analytics]=\"analyticsString\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkStackComponent {\n  /**\n   * The value supplied can be `tiny`, `small`, `medium`, `large`, or `huge`.\n   * This is used as the breakpoint at which the component\n   * moves or \"splits\" to a side by side layout.\n   */\n  @Input()\n  splitAt: string;\n  /**\n   * This is used as the amount of spacing\n   * between the child `sprkStackItem` items.\n   * The value supplied can be `tiny`, `small`, `medium`, `large`, or `huge`.\n   */\n  @Input()\n  itemSpacing: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-o-Stack'];\n\n    // Handle the choice of item split breakpoint by adding CSS class\n    switch (this.splitAt) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--split@xs');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--split@s');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--split@m');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--split@l');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--split@xl');\n        break;\n      default:\n        break;\n    }\n\n    // Handle the choice of item spacing by adding CSS class\n    switch (this.itemSpacing) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--tiny');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--small');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--medium');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--large');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--huge');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkStackComponent } from './sprk-stack.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkStackComponent],\n  exports: [SprkStackComponent]\n})\nexport class SprkStackModule {}\n","import { Component, Input, AfterViewInit } from '@angular/core';\nimport { toggleAnimations } from './sprk-toggle-animations';\nimport { uniqueId } from 'lodash';\nimport 'focus-visible';\n\n@Component({\n  selector: 'sprk-toggle',\n  template: `\n    <div\n      class=\"sprk-c-Toggle {{ additionalClasses }}\"\n      [attr.data-id]=\"idString\"\n    >\n      <button\n        variant=\"icon\"\n        [ngClass]=\"getClasses()\"\n        (click)=\"toggle($event)\"\n        [attr.aria-expanded]=\"isOpen ? 'true' : 'false'\"\n        [attr.data-analytics]=\"analyticsString\"\n        [attr.aria-controls]=\"contentId\"\n      >\n        <sprk-icon\n          iconType=\"chevron-down-circle-two-color\"\n          additionalClasses=\"{{\n            iconClass\n          }} sprk-c-Icon--l sprk-u-mrs sprk-c-Icon--toggle {{ iconStateClass }}\"\n        ></sprk-icon>\n        {{ title }}\n      </button>\n\n      <div\n        [@toggleContent]=\"animState\"\n        [id]=\"contentId\"\n      >\n        <div class=\"sprk-u-pts sprk-u-pbs sprk-c-Toggle__content\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkToggleComponent implements AfterViewInit {\n\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be\n   * rendered as the main Toggle link text.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned as a\n   * CSS class on the icon used in the Toggle.\n   * This is intended for overrides.\n   */\n  @Input()\n  iconClass: string;\n  /**\n   * The value supplied will be assigned as a CSS class\n   * on the clickable title text used in the Toggle.\n   * This is intended for overrides.\n   */\n  @Input()\n  titleFontClass = 'sprk-b-TypeBodyThree';\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * A string that is used to set the `id` on the content\n   * and the `aria-controls` for the toggle trigger button.\n   */\n  @Input()\n  contentId = uniqueId(`sprk_toggle_content_`);\n\n  /**\n   * @ignore\n   */\n  public isOpen = false;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  toggleState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n\n  /**\n   * @ignore\n   */\n  toggle(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.toggleState();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Toggle__trigger sprk-u-TextCrop--none',\n      this.titleFontClass,\n    ];\n    return classArray.join(' ');\n  }\n\n  ngAfterViewInit() {\n    this.toggleState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkToggleComponent } from './sprk-toggle.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkIconModule,\n    SprkLinkDirectiveModule\n  ],\n  declarations: [SprkToggleComponent],\n  exports: [SprkToggleComponent]\n})\nexport class SprkToggleModule {}\n","import { Component, Input } from '@angular/core';\nimport {\n  ISprkFooterGlobalLink,\n  ISprkFooterLocalLinkColumn,\n  ISprkFooterSocialLink,\n  ISprkFooterAward,\n  ISprkFooterBadgeLink,\n  ISprkDisclaimerText,\n  ISprkDisclaimerToggle\n} from './sprk-footer.interfaces';\n\n@Component({\n  selector: 'sprk-footer',\n  template: `\n    <div class=\"sprk-o-Box sprk-o-Box--large sprk-u-BackgroundColor--gray\">\n      <footer\n        [ngClass]=\"getClasses()\"\n        role=\"contentinfo\"\n        [attr.data-id]=\"idString\"\n      >\n        <div\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m\"\n        >\n          <div\n            *ngIf=\"globalLinks\"\n            class=\"sprk-o-Stack__item sprk-o-Stack__item--three-tenths@m sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-prh\"\n          >\n            <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n              {{ globalHeading }}\n            </h3>\n\n            <div\n              *ngFor=\"let item of globalLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium\"\n            >\n              <div class=\"sprk-o-Stack__item\">\n                <a\n                  sprkLink\n                  variant=\"plain\"\n                  href=\"{{ item.href }}\"\n                  analyticsString=\"{{ item.analytics || item.analyticsString }}\"\n                >\n                  <sprk-icon\n                    *ngIf=\"item.icon\"\n                    iconType=\"{{ item.icon }}\"\n                    additionalClasses=\"{{ item.iconCSS }}\"\n                  ></sprk-icon>\n                  <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                    item.iconScreenReaderText\n                  }}</span>\n                  <img\n                    *ngIf=\"item.imgSrc\"\n                    src=\"{{ item.imgSrc }}\"\n                    alt=\"{{ item.imgAlt }}\"\n                    class=\"{{ item.imgCSS }}\"\n                  />\n                </a>\n              </div>\n\n              <p class=\"sprk-o-Stack__item sprk-b-TypeBodyFour\">\n                {{ item.text }}\n              </p>\n            </div>\n          </div>\n\n          <div\n            class=\"sprk-o-Stack__item sprk-o-Stack__item--seven-tenths@m sprk-o-Stack sprk-o-Stack--medium\"\n          >\n            <div\n              *ngIf=\"localLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m\"\n            >\n              <div\n                *ngFor=\"let item of localLinks\"\n                class=\"sprk-o-Stack__item sprk-o-Stack__item--third@m sprk-o-Box sprk-u-PaddingRight--a sprk-o-Stack sprk-o-Stack--large\"\n              >\n                <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n                  {{ item.heading }}\n                </h3>\n\n                <ul\n                  class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-a sprk-b-List sprk-b-List--bare\"\n                >\n                  <li\n                    class=\"sprk-o-Stack__item\"\n                    *ngFor=\"let link of item.links\"\n                  >\n                    <a\n                      sprkLink\n                      variant=\"simple\"\n                      class=\"sprk-u-FontWeight--normal\"\n                      href=\"{{ link.href }}\"\n                      analyticsString=\"{{ link.analyticsString || link.analytics }}\"\n                    >\n                      {{ link.text }}\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div\n              *ngIf=\"socialLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Box\"\n            >\n              <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n                {{ connectHeading }}\n              </h3>\n\n              <div\n                class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Stack--split@m\"\n              >\n                <ul\n                  *ngIf=\"socialLinks\"\n                  class=\"\n                    sprk-o-Stack__item\n                    sprk-o-Stack__item--flex@m\n                    sprk-o-Stack\n                    sprk-o-Stack--split@xxs\n                    sprk-o-Stack--medium\n                    sprk-b-List\n                    sprk-b-List--bare\"\n                >\n                  <li\n                    *ngFor=\"let item of socialLinks\"\n                    class=\"sprk-o-Stack__item\"\n                  >\n                    <a\n                      sprkLink\n                      variant=\"plain\"\n                      href=\"{{ item.href }}\"\n                      analyticsString=\"{{ item.analytics || item.analyticsString }}\"\n                    >\n                      <sprk-icon\n                        *ngIf=\"item.icon\"\n                        iconType=\"{{ item.icon }}\"\n                        additionalClasses=\"{{ item.iconCSS }}\"\n                      ></sprk-icon>\n                      <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                        item.iconScreenReaderText\n                      }}</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <span\n          class=\"sprk-c-Divider sprk-u-mvn sprk-u-mhm\"\n          data-id=\"divider-1\"\n        ></span>\n\n        <div\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-PaddingTop--b\"\n        >\n          <div\n            *ngIf=\"awards\"\n            class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large\"\n          >\n            <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n              {{ awardsHeading }}\n            </h3>\n\n            <div\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@s sprk-u-mbm\"\n            >\n              <div class=\"sprk-o-Stack__item\" *ngFor=\"let award of awards\">\n                <a\n                  sprkLink\n                  variant=\"plain\"\n                  class=\"sprk-o-Stack__item\"\n                  href=\"{{ award.href }}\"\n                  analyticsString=\"{{ award.analytics || award.analyticsString }}\"\n                >\n                  <img\n                    *ngIf=\"award.imgSrc\"\n                    src=\"{{ award.imgSrc }}\"\n                    alt=\"{{ award.imgAlt }}\"\n                    class=\"{{ award.imgCSS }}\"\n                  />\n                </a>\n              </div>\n            </div>\n\n            <div\n              *ngFor=\"let toggle of disclaimerToggle\"\n              class=\"sprk-o-Stack__item\"\n            >\n              <sprk-toggle\n                title=\"{{ toggle.title }}\"\n                analyticsString=\"{{ toggle.analytics || toggle.analyticsString }}\"\n                iconClass=\"sprk-c-Icon--stroke-current-color\"\n                titleFontClass=\"sprk-b-TypeBodyFour\"\n              >\n                <p class=\"sprk-b-TypeBodyFour\">{{ toggle.body }}</p>\n              </sprk-toggle>\n            </div>\n          </div>\n\n          <div\n            *ngIf=\"disclaimerText\"\n            class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large\"\n          >\n            <p\n              *ngFor=\"let disclaimer of disclaimerText\"\n              class=\"sprk-o-Stack__item sprk-b-TypeBodyFour\"\n            >\n              {{ disclaimer.text }}\n            </p>\n          </div>\n\n          <ul\n            *ngIf=\"badgeLinks\"\n            class=\"\n              sprk-o-Stack__item\n              sprk-o-Stack__item--flex@m\n              sprk-o-Stack\n              sprk-o-Stack--split@xxs\n              sprk-o-Stack--medium\n              sprk-b-List\n              sprk-b-List--bare\"\n          >\n            <li *ngFor=\"let item of badgeLinks\" class=\"sprk-o-Stack__item\">\n              <a\n                sprkLink\n                variant=\"plain\"\n                href=\"{{ item.href }}\"\n                analyticsString=\"{{ item.analytics || item.analyticsString }}\"\n              >\n                <sprk-icon\n                  *ngIf=\"item.icon\"\n                  iconType=\"{{ item.icon }}\"\n                  additionalClasses=\"{{ item.iconCSS }}\"\n                ></sprk-icon>\n                <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                  item.iconScreenReaderText\n                }}</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </footer>\n    </div>\n  `\n})\nexport class SprkFooterComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * The heading for the \"Global\" section.\n   */\n  @Input()\n  globalHeading: string;\n  /**\n   * The heading for the \"Awards\" section.\n   */\n  @Input()\n  awardsHeading: string;\n  /**\n   * The heading for the \"Connect With Us\" section.\n   */\n  @Input()\n  connectHeading: string;\n  /**\n   * Array of\n   * [ISprkFooterGlobalLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build the\n   * links in the \"Global\" section.\n   */\n  @Input()\n  globalLinks: ISprkFooterGlobalLink[];\n  /**\n   * Array of\n   * [ISprkFooterLocalLinkColumn](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build\n   * the columns of links\n   * in the \"Site Links\" section.\n   */\n  @Input()\n  localLinks: ISprkFooterLocalLinkColumn[];\n  /**\n   * Array of\n   * [ISprkFooterSocialLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build the\n   * icon links in the \"Connect With Us section\".\n   */\n  @Input()\n  socialLinks: ISprkFooterSocialLink[];\n  /**\n   * Array of\n   * [ISprkFooterAward](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build the\n   * awards in the \"Awards\" section.\n   */\n  @Input()\n  awards: ISprkFooterAward[];\n  /**\n   * Array of\n   * [ISprkFooterBadgeLink](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build the\n   * icon links in the icon\n   * section in the bottom\n   * of the Footer.\n   */\n  @Input()\n  badgeLinks: ISprkFooterBadgeLink[];\n  /**\n   * Array of\n   * [ISprkDisclaimerText](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build disclaimer text in the\n   * of the Footer.\n   */\n  @Input()\n  disclaimerText: ISprkDisclaimerText[];\n  /**\n   * Array of\n   * [ISprkDisclaimerToggle](https://github.com/sparkdesignsystem/spark-design-system/blob/master/angular/projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.interfaces.ts)\n   *  used to build\n   * the disclamer toggle(s) in\n   * the the Footer.\n   */\n  @Input()\n  disclaimerToggle: ISprkDisclaimerToggle[];\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-o-CenteredColumn sprk-o-Stack sprk-o-Stack--misc-b'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkStackItemModule } from '../../directives/sprk-stack-item/sprk-stack-item.module';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkStackModule } from '../sprk-stack/sprk-stack.module';\nimport { SprkToggleModule } from '../sprk-toggle/sprk-toggle.module';\nimport { SprkFooterComponent } from './sprk-footer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkIconModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    SprkToggleModule,\n    SprkLinkDirectiveModule\n  ],\n  declarations: [SprkFooterComponent],\n  exports: [SprkFooterComponent]\n})\nexport class SprkFooterModule {}\n","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'sprk-list-item',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `\n})\nexport class SprkListItemComponent {\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  @ViewChild(TemplateRef, { static: true }) content: TemplateRef<any>;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkListItemComponent } from './sprk-list-item.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkListItemComponent],\n  exports: [SprkListItemComponent]\n})\nexport class SprkListItemModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-masthead-accordion',\n  template: `\n    <nav role=\"navigation\" [attr.data-id]=\"idString\">\n      <ul [ngClass]=\"getClasses()\">\n        <ng-content></ng-content>\n      </ul>\n    </nav>\n  `\n})\nexport class SprkMastheadAccordionComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-MastheadAccordion',\n      'sprk-b-List',\n      'sprk-b-List--bare'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../../sprk-icon/sprk-icon.module';\nimport {\n  SprkMastheadAccordionComponent\n} from './sprk-masthead-accordion.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule],\n  declarations: [SprkMastheadAccordionComponent],\n  exports: [SprkMastheadAccordionComponent]\n})\nexport class SprkMastheadAccordionModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { toggleAnimations } from '../../sprk-toggle/sprk-toggle-animations';\n\n@Component({\n  selector: 'sprk-masthead-accordion-item',\n  template: `\n    <li [ngClass]=\"getClasses()\">\n      <div\n        class=\"sprk-u-Position--relative sprk-o-Stack__item sprk-u-Width-100\"\n      >\n        <button\n          [attr.aria-controls]=\"accordion_controls_id\"\n          class=\"sprk-c-MastheadAccordion__summary\"\n          [attr.data-analytics]=\"analyticsString\"\n          [attr.data-id]=\"idString\"\n          (click)=\"toggleAccordion($event)\"\n          [attr.aria-expanded]=\"isOpen\"\n        >\n          <span [ngClass]=\"getHeadingClasses()\">\n            <sprk-icon\n              [iconType]=\"leadingIcon\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-c-Icon--toggle sprk-u-mrs\"\n              *ngIf=\"leadingIcon\"\n            ></sprk-icon>\n            {{ title }}\n          </span>\n\n          <sprk-icon\n            additionalClasses=\"sprk-c-MastheadAccordion__icon sprk-c-Icon--stroke-current-color sprk-c-Icon--toggle {{\n              iconStateClass\n            }}\"\n            [iconType]=\"currentIconType\"\n          ></sprk-icon>\n        </button>\n      </div>\n\n      <div [@toggleContent]=\"animState\">\n        <div [id]=\"accordion_controls_id\"><ng-content></ng-content></div>\n      </div>\n    </li>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkMastheadAccordionItemComponent implements OnInit {\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * heading.\n   */\n  @Input()\n  additionalHeadingClasses: string;\n  /**\n   * If `true`, the Masthead accordion item\n   * will be open when it is rendered.\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * If `true`, the Masthead ccordion item\n   * will be active when it is rendered.\n   */\n  @Input()\n  isActive: boolean;\n  /**\n   * The name of the icon to use\n   * for the clickable close icon.\n   */\n  @Input()\n  iconTypeClosed = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use\n   * for the clickable open icon.\n   */\n  @Input()\n  iconTypeOpen = 'chevron-up-circle-two-color';\n  /**\n   * Expects a name of an icon to use\n   * as a leading icon for the Masthead accordion item.\n   */\n  @Input()\n  leadingIcon: string;\n\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  accordion_controls_id = `accordionHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  public currentIconType = this.iconTypeClosed;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  accordionState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.currentIconType = this.iconTypeClosed)\n      : (this.currentIconType = this.iconTypeOpen);\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n  /**\n   * @ignore\n   */\n  toggleAccordion(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.accordionState();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-MastheadAccordion__item',\n      'sprk-u-Overflow--hidden'\n    ];\n\n    if (this.isOpen) {\n      classArray.push('sprk-c-MastheadAccordion__item--open');\n    }\n\n    if (this.isActive) {\n      classArray.push('sprk-c-MastheadAccordion__item--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getHeadingClasses(): string {\n    const classArray: string[] = ['sprk-c-MastheadAccordion__heading'];\n\n    if (this.additionalHeadingClasses) {\n      this.additionalHeadingClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit() {\n    this.accordionState();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../../sprk-icon/sprk-icon.module';\nimport {\n  SprkMastheadAccordionItemComponent\n} from './sprk-masthead-accordion-item.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule],\n  declarations: [SprkMastheadAccordionItemComponent],\n  exports: [SprkMastheadAccordionItemComponent]\n})\nexport class SprkMastheadAccordionItemModule {}\n","import {\n  Component,\n  HostListener,\n  Input,\n  Renderer2,\n  AfterContentInit\n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport * as _ from 'lodash';\nimport {\n  ISprkNarrowNavLink,\n  ISprkNarrowSelector,\n  ISprkBigNavLink\n} from './sprk-masthead.interfaces';\n\n@Component({\n  selector: 'sprk-masthead',\n  template: `\n    <header [ngClass]=\"getClasses()\" role=\"banner\" [attr.data-id]=\"idString\">\n      <div\n        class=\"sprk-c-Masthead__content sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--split@xxs\"\n      >\n        <div\n          class=\"sprk-c-Masthead__menu sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <button\n            class=\"sprk-c-Menu\"\n            type=\"button\"\n            [attr.aria-expanded]=\"isNarrowNavOpen ? true : false\"\n            (click)=\"toggleNarrowNav($event)\"\n            [attr.aria-controls]=\"narrowNavId\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">Toggle Navigation</span>\n            <svg\n              [ngClass]=\"{\n                'sprk-c-Icon': true,\n                'sprk-c-Icon--l': true,\n                'sprk-c-Menu__icon': true,\n                'sprk-c-Menu__icon--open': isNarrowNavOpen\n              }\"\n              aria-hidden=\"true\"\n              viewBox=\"0 0 64 64\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g>\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--two\"\n                  d=\"m8 32h48\"\n                />\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--one\"\n                  d=\"m8 18.68h48\"\n                />\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--three\"\n                  d=\"m8 45.32h48\"\n                />\n              </g>\n            </svg>\n          </button>\n        </div>\n\n        <div\n          class=\"sprk-c-Masthead__branding sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <a sprkLink [attr.href]=\"logoHref\" variant=\"unstyled\">\n            <ng-content select=\"[logo-slot]\"></ng-content>\n            <span class=\"sprk-u-ScreenReaderText\">{{\n              logoLinkScreenReaderText\n            }}</span>\n          </a>\n        </div>\n\n        <div\n          class=\"sprk-c-Masthead__nav-item sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <ng-content select=\"[navItem-slot]\"></ng-content>\n        </div>\n        <nav\n          class=\"\n          sprk-c-Masthead__little-nav\n          sprk-o-Stack__item\n          sprk-o-Stack__item--flex@xxs\n          sprk-o-Stack\n          sprk-o-Stack--misc-a\n          sprk-o-Stack--split@xxs\n          sprk-o-Stack--end-row\"\n          role=\"navigation\"\n        >\n          <ng-content select=\"[little-nav-slot]\"></ng-content>\n\n          <ng-content select=\"[utility-slot]\"></ng-content>\n        </nav>\n      </div>\n\n      <div class=\"sprk-o-Stack__item\">\n        <nav\n          class=\"sprk-c-Masthead__big-nav\"\n          role=\"navigation\"\n          [attr.data-id]=\"idString\"\n          *ngIf=\"bigNavLinks\"\n        >\n          <ul [ngClass]=\"getSecondaryNavClasses()\">\n            <li\n              *ngFor=\"let link of bigNavLinks\"\n              [ngClass]=\"{\n                'sprk-c-Masthead__big-nav-item': true,\n                'sprk-o-Stack__item': true,\n                'sprk-c-Masthead__big-nav-item--open':\n                  link.focused && link.subNav\n              }\"\n              routerLinkActive=\"sprk-c-Masthead__big-nav-item--active\"\n              [attr.aria-haspopup]=\"link.subNav ? 'true' : null\"\n            >\n              <div *ngIf=\"link.subNav\">\n                <sprk-dropdown\n                  [choices]=\"link.subNav\"\n                  additionalTriggerClasses=\"sprk-b-Link--plain sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n                  additionalClasses=\"sprk-u-TextAlign--left\"\n                  triggerIconType=\"chevron-down\"\n                  [analyticsString]=\"link.analyticsString\"\n                  [triggerText]=\"link.text\"\n                ></sprk-dropdown>\n              </div>\n              <div *ngIf=\"!link.subNav\">\n                <a\n                  sprkLink\n                  variant=\"plain\"\n                  [analyticsString]=\"link.analyticsString\"\n                  class=\"sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n                  [attr.href]=\"link.href\"\n                >\n                  {{ link.text }}\n                </a>\n              </div>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <nav\n        *ngIf=\"isNarrowNavOpen\"\n        class=\"sprk-c-Masthead__narrow-nav\"\n        role=\"navigation\"\n        [id]=\"narrowNavId\"\n      >\n        <sprk-dropdown\n          *ngIf=\"narrowSelector\"\n          dropdownType=\"mastheadSelector\"\n          additionalClasses=\"sprk-c-Masthead__selector-dropdown\"\n          additionalTriggerClasses=\"\n            sprk-c-Masthead__selector\n            sprk-b-Link\n            sprk-b-Link--plain\n            sprk-o-Stack\n            sprk-o-Stack--split@xxs\n            sprk-o-Stack--center-column\"\n          additionalTriggerTextClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n          additionalIconClasses=\"sprk-Stack__item sprk-u-mrs\"\n          [triggerText]=\"narrowSelector['trigger'].text\"\n          selector=\"Select One\"\n          triggerIconType=\"chevron-down\"\n          [choices]=\"narrowSelector['choices']\"\n        >\n          <div\n            *ngIf=\"narrowSelector['footer']\"\n            class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n            sprkDropdownFooter\n          >\n            <a\n              sprkLink\n              variant=\"unstyled\"\n              [analyticsString]=\"narrowSelector['footer'].analyticsString\"\n              [attr.href]=\"narrowSelector['footer'].href\"\n              class=\"sprk-c-Button sprk-c-Button--tertiary\"\n            >\n              {{ narrowSelector['footer'].text }}\n            </a>\n          </div>\n        </sprk-dropdown>\n\n        <sprk-masthead-accordion [additionalClasses]=\"getNarrowNavClasses()\">\n          <div *ngFor=\"let narrowLink of narrowNavLinks\">\n            <div *ngIf=\"narrowLink.subNav\">\n              <sprk-masthead-accordion-item\n                iconTypeOpen=\"chevron-down\"\n                iconTypeClosed=\"chevron-down\"\n                [leadingIcon]=\"narrowLink.leadingIcon\"\n                [isActive]=\"narrowLink.active\"\n                [title]=\"narrowLink.text\"\n              >\n                <ul\n                  class=\"sprk-b-List sprk-b-List--bare sprk-c-MastheadAccordion__details\"\n                >\n                  <li\n                    class=\"sprk-c-MastheadAccordion__item\"\n                    *ngFor=\"let subNavLink of narrowLink.subNav\"\n                  >\n                    <a\n                      sprkLink\n                      variant=\"unstyled\"\n                      class=\"sprk-c-MastheadAccordion__summary\"\n                      [attr.href]=\"subNavLink.href\"\n                      [analyticsString]=\"subNavLink.analyticsString\"\n                    >\n                      <sprk-icon\n                        [iconType]=\"subNavLink.leadingIcon\"\n                        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                        *ngIf=\"subNavLink.leadingIcon\"\n                      ></sprk-icon>\n                      {{ subNavLink.text }}\n                    </a>\n                  </li>\n                </ul>\n              </sprk-masthead-accordion-item>\n            </div>\n            <div *ngIf=\"!narrowLink.subNav\">\n              <li\n                [ngClass]=\"{\n                  'sprk-c-MastheadAccordion__item': true,\n                  'sprk-c-MastheadAccordion__item--active': narrowLink.active\n                }\"\n              >\n                <a\n                  sprkLink\n                  variant=\"unstyled\"\n                  class=\"sprk-c-MastheadAccordion__summary\"\n                  [attr.href]=\"narrowLink.href\"\n                  [analyticsString]=\"narrowLink.analyticsString\"\n                >\n                  <span class=\"sprk-c-MastheadAccordion__heading\">\n                    <sprk-icon\n                      [iconType]=\"narrowLink.leadingIcon\"\n                      additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                      *ngIf=\"narrowLink.leadingIcon\"\n                    ></sprk-icon>\n                    {{ narrowLink.text }}\n                  </span>\n                </a>\n              </li>\n            </div>\n          </div>\n        </sprk-masthead-accordion>\n        <ng-content select=\"[narrowNavFooter]\"></ng-content>\n      </nav>\n    </header>\n  `\n})\nexport class SprkMastheadComponent implements AfterContentInit {\n  /**\n   * @ignore\n   */\n  constructor(private renderer: Renderer2, router: Router) {\n    router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        this.closeNarrowNav();\n      }\n    });\n  }\n\n /**\n  *  The `href` value of the logo.\n  */\n  @Input()\n  logoHref = '/';\n  /**\n   * The value supplied will be used as\n   * screen reader text that is visually hidden\n   * for the link that wraps the logo.\n   */\n  @Input()\n  logoLinkScreenReaderText = 'Go to the homepage';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * big navigation link container.\n   */\n  @Input()\n  additionalBigNavClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * narrow navigation container.\n   */\n  @Input()\n  additionalNarrowNavClasses: string;\n  /**\n   * Expects an array of\n   * [ISprkNarrowNavLink](https://github.com/sparkdesignsystem/spark-design-system/tree/master/src/angular/projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.interfaces.ts)\n   * to be\n   * represented in the narrow nav element\n   * of the Masthead component.\n   */\n  @Input()\n  narrowNavLinks: ISprkNarrowNavLink[];\n  /**\n   * Represents the initial state of the\n   * narrow nav element of the Masthead component.\n   */\n  @Input()\n  isNarrowNavOpen = false;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects an array of\n   * [ISprkBigNavLink](https://github.com/sparkdesignsystem/spark-design-system/tree/master/src/angular/projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.interfaces.ts)\n   * to be\n   * used to create the Big Navigation of\n   * the Masthead component.\n   */\n  @Input()\n  bigNavLinks: ISprkBigNavLink[];\n  /**\n   * Expects a [ISprkNarrowSelector](https://github.com/sparkdesignsystem/spark-design-system/tree/master/src/angular/projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.interfaces.ts)\n   * object that\n   * represents dropdown choices inside the dropdown\n   * rendered in the Narrow Navigation.\n   */\n  @Input()\n  narrowSelector: ISprkNarrowSelector;\n  /**\n   * A string that is used to set the `id` on the narrow nav\n   * and the `aria-controls` for the menu trigger button.\n   */\n  @Input()\n  narrowNavId = _.uniqueId(`sprk_masthead_narrow_nav_`);\n\n  /**\n   * @ignore\n   */\n  iconType = 'chevron-down';\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  controls_id = `sprk-narrow-navigation-item__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  isScrolled = false;\n  /**\n   * @ignore\n   */\n  isNarrowLayout = false;\n  /**\n   * @ignore\n   */\n  scrollDirection = 'up';\n  /**\n   * @ignore\n   */\n  isHidden = false;\n  /**\n   * @ignore\n   */\n  isNarrowOnResize = false;\n  /**\n   * @ignore\n   */\n  scrollPosition = 0;\n  /**\n   * @ignore\n   */\n  throttledCheckScrollDirection = _.throttle(this.checkScrollDirection, 500);\n  /**\n   * @ignore\n   */\n  throttledUpdateLayoutState = _.throttle(this.updateLayoutState, 500);\n\n  /**\n   * @ignore\n   * Closes the narrow navigation menu\n   * if it is left open when\n   * the viewport is expanded.\n   */\n  @HostListener('window:orientationchange')\n  handleResizeEvent() {\n    this.closeNarrowNav();\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('window:scroll', ['$event'])\n  onScroll(event): void {\n    window.scrollY >= 10 ? (this.isScrolled = true) : (this.isScrolled = false);\n    if (this.isNarrowLayout) {\n      this.throttledCheckScrollDirection();\n    }\n  }\n\n  /**\n   * @ignore\n   * Handles when viewport size changes to\n   * large while narrow nav is hidden.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event): void {\n    this.isNarrowOnResize = this.isElementVisible('.sprk-c-Masthead__menu');\n    this.throttledUpdateLayoutState();\n  }\n\n  /**\n   * @ignore\n   */\n  updateLayoutState() {\n    if (this.isNarrowLayout !== this.isNarrowOnResize) {\n      this.isNarrowLayout = this.isNarrowOnResize;\n\n      // If is not narrow on resize update, make sure it's visible\n      if (!this.isNarrowLayout) {\n        this.isHidden = false;\n      }\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterContentInit() {\n    this.isNarrowLayout = this.isElementVisible('.sprk-c-Masthead__menu');\n  }\n\n  /**\n   * @ignore\n   */\n  isElementVisible(selector) {\n    if (typeof window === 'undefined') { return; }\n    const element = document.querySelector(selector);\n    if (!element) {\n      return;\n    }\n    const elementDisplayValue = window.getComputedStyle(element).display;\n    const elementVisibilityValue = window.getComputedStyle(element).visibility;\n    const elementIsVisible =\n      elementDisplayValue === 'none' || elementVisibilityValue === 'hidden'\n        ? false\n        : true;\n    return elementIsVisible;\n  }\n\n  /**\n   * @ignore\n   */\n  scrollYDirection() {\n    if (typeof window !== 'undefined') {\n      const newScrollPos = window.scrollY;\n      if (newScrollPos < 0) {\n        return;\n      }\n      const diff = newScrollPos - this.scrollPosition;\n      const direction = diff > 0 ? 'down' : 'up';\n      this.scrollPosition = newScrollPos;\n      return direction;\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  checkScrollDirection() {\n    const newDirection = this.scrollYDirection();\n    if (this.scrollDirection !== newDirection) {\n      this.scrollDirection = newDirection;\n      this.scrollDirection === 'down'\n        ? (this.isHidden = true)\n        : (this.isHidden = false);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Masthead', 'sprk-o-Stack'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    if (this.isNarrowNavOpen) {\n      classArray.push('sprk-c-Masthead--open');\n    }\n\n    if (this.isScrolled) {\n      classArray.push('sprk-c-Masthead--scroll');\n    }\n\n    if (this.isHidden) {\n      classArray.push('sprk-c-Masthead--hidden');\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getNarrowNavClasses(): string {\n    const classArray: string[] = [];\n\n    if (this.additionalNarrowNavClasses) {\n      this.additionalNarrowNavClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getSecondaryNavClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Masthead__big-nav-items',\n      'sprk-o-Stack',\n      'sprk-o-Stack--misc-a',\n      'sprk-o-Stack--center-row',\n      'sprk-o-Stack--split@xxs',\n      'sprk-b-List',\n      'sprk-b-List--bare'\n    ];\n\n    if (this.additionalBigNavClasses) {\n      this.additionalBigNavClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  toggleNarrowNav(event): void {\n    event.preventDefault();\n    if (this.isNarrowNavOpen) {\n      this.closeNarrowNav();\n    } else {\n      this.openNarrowNav();\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  openNarrowNav(): void {\n    this.renderer.addClass(document.body, 'sprk-u-Overflow--hidden');\n    this.renderer.addClass(\n      document.body.parentElement,\n      'sprk-u-Overflow--hidden'\n    );\n    this.renderer.addClass(document.body, 'sprk-u-Height--100');\n    this.renderer.addClass(document.body.parentElement, 'sprk-u-Height--100');\n    this.isNarrowNavOpen = true;\n  }\n\n  /**\n   * @ignore\n   */\n  closeNarrowNav(): void {\n    this.renderer.removeClass(document.body, 'sprk-u-Overflow--hidden');\n    this.renderer.removeClass(\n      document.body.parentElement,\n      'sprk-u-Overflow--hidden'\n    );\n    this.renderer.removeClass(document.body, 'sprk-u-Height--100');\n    this.renderer.removeClass(\n      document.body.parentElement,\n      'sprk-u-Height--100'\n    );\n    this.isNarrowNavOpen = false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport {\n  SprkMastheadAccordionModule\n} from './sprk-masthead-accordion/sprk-masthead-accordion.module';\nimport {\n  SprkMastheadAccordionItemModule\n} from './sprk-masthead-accordion-item/sprk-masthead-accordion-item.module';\nimport { SprkMastheadComponent } from './sprk-masthead.component';\nimport { SprkDropdownModule } from '../sprk-dropdown/sprk-dropdown.module';\nimport { SprkAccordionModule } from '../sprk-accordion/sprk-accordion.module';\nimport {\n  SprkAccordionItemModule\n} from '../sprk-accordion-item/sprk-accordion-item.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkIconModule,\n    RouterModule,\n    SprkMastheadAccordionModule,\n    SprkMastheadAccordionItemModule,\n    SprkDropdownModule,\n    SprkAccordionModule,\n    SprkAccordionItemModule,\n    SprkLinkDirectiveModule,\n  ],\n  declarations: [SprkMastheadComponent],\n  exports: [SprkMastheadComponent],\n})\nexport class SprkMastheadModule {}\n","import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output\n} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'sprk-modal',\n  template: `\n    <div\n      *ngIf=\"isVisible\"\n      [ngClass]=\"{\n        'sprk-c-Modal': true,\n        'sprk-c-Modal--wait': modalType === 'wait'\n      }\"\n      role=\"dialog\"\n      tabindex=\"1\"\n      [attr.aria-labelledby]=\"heading_id\"\n      aria-modal=\"true\"\n      [attr.aria-describedby]=\"content_id\"\n      [attr.data-id]=\"idString\"\n    >\n      <div class=\"sprk-o-Stack sprk-o-Stack--large\">\n        <header class=\"sprk-o-Stack__item sprk-c-Modal__header\">\n          <h2\n            class=\"sprk-c-Modal__heading sprk-b-TypeDisplayFour\"\n            [id]=\"heading_id\"\n          >\n            {{ title }}\n          </h2>\n\n          <button\n            *ngIf=\"modalType != 'wait'\"\n            class=\"sprk-c-Modal__icon\"\n            type=\"button\"\n            aria-label=\"Close Modal\"\n            (click)=\"closeModal($event)\"\n          >\n            <sprk-icon\n              iconType=\"close\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n            ></sprk-icon>\n          </button>\n        </header>\n\n        <div\n          class=\"sprk-o-Stack__item sprk-c-Modal__body sprk-o-Stack sprk-o-Stack--medium\"\n        >\n          <div\n            *ngIf=\"modalType == 'wait'\"\n            class=\"sprk-o-Stack__item sprk-c-Spinner sprk-c-Spinner--circle sprk-c-Spinner--large sprk-c-Spinner--dark\"\n          ></div>\n          <ng-content></ng-content>\n        </div>\n\n        <footer\n          *ngIf=\"modalType === 'choice'\"\n          class=\"sprk-o-Stack__item sprk-c-Modal__footer\"\n        >\n          <button\n            class=\"sprk-c-Button sprk-u-mrm\"\n            [attr.data-analytics]=\"confirmAnalyticsString\"\n            (click)=\"emitConfirmClick($event)\"\n          >\n            {{ confirmText }}\n          </button>\n\n          <button\n            class=\"sprk-c-Button sprk-c-Button--tertiary\"\n            [attr.data-analytics]=\"cancelAnalyticsString\"\n            (click)=\"emitCancelClick($event)\"\n          >\n            {{ cancelText }}\n          </button>\n        </footer>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"isVisible\"\n      class=\"sprk-c-ModalMask\"\n      tabindex=\"-1\"\n      (click)=\"closeModal($event)\"\n    ></div>\n  `\n})\nexport class SprkModalComponent {\n  @Input()\n  title: string;\n  /**\n   * This determines the variant of the Modal.\n   * Can be `choice`, `info`, or `wait`.\n   */\n  @Input()\n  modalType: string;\n  /**\n   * The value supplied will be\n   * rendered as the text for the confirm button.\n   */\n  @Input()\n  confirmText = 'Confirm';\n  /**\n   * The value supplied will be rendered\n   * as the text for the cancel button.\n   */\n  @Input()\n  cancelText = 'Cancel';\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute\n   * on the confirm button. Intended\n   * for an outside library to capture data.\n   */\n  @Input()\n  confirmAnalyticsString: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute\n   * on the cancel button. Intended\n   * for an outside library to capture data.\n   */\n  @Input()\n  cancelAnalyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * If `true`, the Modal will be shown.\n   * If `false`, the modal will not be shown.\n   */\n  @Input()\n  isVisible = false;\n  /**\n   * When the Modal is closed the hide event is\n   * emitted and a callback function can\n   * be triggered if supplied.\n   */\n  @Output()\n  hide = new EventEmitter<any>();\n  /**\n   * Available when the Modal type is `choice`.\n   * The Modal will emit a confirm click event\n   * when the confirmation button is clicked.\n   * A callback function can be triggered if\n   * supplied.\n   */\n  @Output()\n  confirmClick = new EventEmitter<any>();\n  /**\n   * Available when the Modal type is `choice`.\n   * The Modal will emit a cancel click event\n   * when the cancel link is clicked.\n   * A callback function can be triggered if supplied.\n   */\n  @Output()\n  cancelClick = new EventEmitter<any>();\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  heading_id = `modalHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  content_id = `modalContent__${this.componentID}`;\n\n  /**\n   * @ignore\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.isVisible && event.key === 'Escape') {\n      this.closeModal(event);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  closeModal(event): void {\n    if (this.modalType !== 'wait') {\n      event.preventDefault();\n      this.hide.emit(event);\n    }\n  }\n\n  /**\n   * Emits an event when the confirmation\n   * button is clicked.\n   */\n  emitConfirmClick(event): void {\n    this.confirmClick.emit(event);\n  }\n\n  /**\n   * Emits an event when the cancel\n   * link is clicked.\n   */\n  emitCancelClick(event): void {\n    event.preventDefault();\n    this.cancelClick.emit(event);\n    this.closeModal(event);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkModalComponent } from './sprk-modal.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SprkIconModule],\n  declarations: [SprkModalComponent],\n  exports: [SprkModalComponent]\n})\nexport class SprkModalModule {}\n","import { Component, Input, ContentChildren, QueryList } from '@angular/core';\nimport { SprkListItemComponent } from '../sprk-list-item/sprk-list-item.component';\n\n@Component({\n  selector: 'sprk-ordered-list',\n  template: `\n    <ol [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <li\n        *ngFor=\"let item of items\"\n        [attr.data-analytics]=\"item.analyticsString\"\n        [attr.data-id]=\"item.idString\"\n        [ngClass]=\"item.additionalClasses\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item.content\"></ng-container>\n      </li>\n    </ol>\n  `\n})\nexport class SprkOrderedListComponent {\n  /**\n   * Will cause the appropriate variant type to render.\n   * Can be `bare` or `indented`.\n   */\n  @Input()\n  listType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * This component expects children\n   * components of `<sprk-list-item></<sprk-list-item>`.\n   */\n  @ContentChildren(SprkListItemComponent) items: QueryList<\n    SprkListItemComponent\n  >;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-List'];\n\n    switch (this.listType) {\n      case 'indented':\n        classArray.push('sprk-b-List--indented');\n        break;\n      case 'bare':\n        classArray.push('sprk-b-List--bare');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkOrderedListComponent } from './sprk-ordered-list.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkOrderedListComponent],\n  exports: [SprkOrderedListComponent]\n})\nexport class SprkOrderedListModule {}\n","import { Component, Input, ContentChildren, QueryList } from '@angular/core';\nimport { SprkListItemComponent } from '../sprk-list-item/sprk-list-item.component';\n\n@Component({\n  selector: 'sprk-unordered-list',\n  template: `\n    <ul [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <li\n        *ngFor=\"let item of items\"\n        [attr.data-analytics]=\"item.analyticsString\"\n        [attr.data-id]=\"item.idString\"\n        [ngClass]=\"item.additionalClasses\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item.content\"></ng-container>\n      </li>\n    </ul>\n  `\n})\nexport class SprkUnorderedListComponent {\n  /**\n   * This value determines what List variant is rendered.\n   * Can be `bare` or `indented`.\n   */\n  @Input()\n  listType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * This component expects children `<sprk-list-item></sprk-list-item>`\n   * components.\n   */\n  @ContentChildren(SprkListItemComponent) items: QueryList<\n    SprkListItemComponent\n  >;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [''];\n\n    switch (this.listType) {\n      case 'indented':\n        classArray.push('sprk-b-List');\n        classArray.push('sprk-b-List--indented');\n        break;\n      case 'bare':\n        classArray.push('sprk-b-List');\n        classArray.push('sprk-b-List--bare');\n        break;\n      case 'horizontal':\n        classArray.push('sprk-o-HorizontalList');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkUnorderedListComponent } from './sprk-unordered-list.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkUnorderedListComponent],\n  exports: [SprkUnorderedListComponent]\n})\nexport class SprkUnorderedListModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sprk-pagination',\n  template: `\n    <nav\n      aria-label=\"Pagination Navigation\"\n      [ngClass]=\"getClasses()\"\n      [attr.data-id]=\"idString\"\n    >\n      <sprk-unordered-list\n        listType=\"horizontal\"\n        additionalClasses=\"sprk-c-Pagination sprk-o-HorizontalList--spacing-medium\"\n      >\n        <sprk-list-item>\n          <a\n            sprkLink\n            variant=\"plain\"\n            (click)=\"goBack($event, currentPage)\"\n            [isDisabled]=\"currentPage === 1\"\n            class=\"sprk-c-Pagination__icon\"\n            [analyticsString]=\"analyticsStringLinkPrev\"\n            aria-label=\"Previous Page\"\n            href=\"#\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">{{ prevLinkText }}</span>\n            <sprk-icon\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n              iconType=\"chevron-left\"\n            ></sprk-icon>\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item *ngIf=\"showNumbers()\">\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, 1)\"\n            [ngClass]=\"{\n              'sprk-c-Pagination__link': true,\n              'sprk-c-Pagination__link--current': currentPage === 1\n            }\"\n            [analyticsString]=\"analyticsStringFirstLink\"\n            [attr.aria-current]=\"currentPage === 1\"\n            aria-label=\"Page 1\"\n          >\n            1\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage !== 2 && totalPages() === 3\"\n        >\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, 2)\"\n            class=\"sprk-c-Pagination__link\"\n            [attr.aria-current]=\"false\"\n            aria-label=\"Page 2\"\n          >\n            2\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage > 2 && totalPages() > 3\"\n        >\n          ...\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage > 1 && currentPage < totalPages()\"\n        >\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, currentPage)\"\n            class=\"sprk-c-Pagination__link sprk-c-Pagination__link--current\"\n            aria-current=\"true\"\n            [analyticsString]=\"analyticsStringSecondLink\"\n            attr.aria-label=\"Page {{ currentPage }}\"\n          >\n            {{ currentPage }}\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"\n            showNumbers() && currentPage < totalPages() - 1 && totalPages() > 3\n          \"\n        >\n          ...\n        </sprk-list-item>\n\n        <sprk-list-item *ngIf=\"showNumbers() && totalPages() > 1\">\n          <a\n            sprkLink\n            href=\"#\"\n            (click)=\"goToPage($event, totalPages())\"\n            [ngClass]=\"{\n              'sprk-c-Pagination__link': true,\n              'sprk-c-Pagination__link--current': currentPage === totalPages()\n            }\"\n            attr.aria-label=\"Page {{ totalPages() }}\"\n            [analyticsString]=\"analyticsStringThirdLink\"\n            [attr.aria-current]=\"currentPage === totalPages()\"\n          >\n            {{ totalPages() }}\n          </a>\n        </sprk-list-item>\n\n        <sprk-list-item>\n          <a\n            sprkLink\n            href=\"#\"\n            variant=\"plain\"\n            [isDisabled]=\"isLastPage()\"\n            (click)=\"goForward($event, currentPage)\"\n            class=\"sprk-c-Pagination__icon\"\n            [analyticsString]=\"analyticsStringLinkNext\"\n            aria-label=\"Next Page\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">{{ nextLinkText }}</span>\n            <sprk-icon\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n              iconType=\"chevron-right\"\n            ></sprk-icon>\n          </a>\n        </sprk-list-item>\n      </sprk-unordered-list>\n    </nav>\n  `\n})\nexport class SprkPaginationComponent {\n  /**\n   * If set to `pager`, the component will render\n   * in the Pager variant with no visible number\n   * links. Otherwise, the component will render in\n   * the Default variant if there three or fewer\n   * pages or in the Long variant if there are\n   * more than three pages.\n   */\n  @Input()\n  paginationType = 'default';\n  /**\n   * The total number of items in the\n   * paged data. This is used to calculate\n   * the number of pages.\n   */\n  @Input()\n  totalItems: number;\n  /**\n   * The total number of items\n   * to render per page. This is\n   * used to calculate the number of pages.\n   */\n  @Input()\n  itemsPerPage: number;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Screen reader text for the \"Next Page\" icon.\n   */\n  @Input()\n  nextLinkText = 'Next';\n  /**\n   * Screen reader text for the \"Previous Page\"\n   * icon.\n   */\n  @Input()\n  prevLinkText = 'Prev';\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the first link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringFirstLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the second link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringSecondLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the third link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringThirdLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the \"Next\" link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringLinkNext: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the \"Prev\" link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringLinkPrev: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  private _currentPage = 1;\n\n  /**\n   * The current page number.\n   * In the Default and Long variants,\n   * this value corresponds to the active page link.\n   */\n  @Input()\n  set currentPage(value: number) {\n    if (value > this.totalPages()) {\n      value = this.totalPages();\n    } else if (value < 1) {\n      value = 1;\n    }\n\n    this._currentPage = value;\n  }\n  get currentPage(): number {\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a function to run when the\n   * previous link is clicked.\n   * On click, `previousClick`\n   * will emit the click event and current page.\n   */\n  @Output()\n  previousClick = new EventEmitter();\n  /**\n   * Accepts a function\n   * to run when the next link is clicked.\n   * On click, `nextClick` will emit the click event and current page.\n   */\n  @Output()\n  nextClick = new EventEmitter();\n  /**\n   * Accepts a function to run when the individual page\n   * links are clicked. On click, `pageClick` will\n   * emit the click event and current page.\n   */\n  @Output()\n  pageClick = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  goToPage(event, page): void {\n    event.preventDefault();\n    this.currentPage = page;\n    this.pageClick.emit({ event, page });\n  }\n\n  /**\n   * @ignore\n   */\n  goBack(event, page): void {\n    event.preventDefault();\n    let newPage = page;\n\n    if (this.currentPage > 1) {\n      newPage = this.currentPage - 1;\n      this.currentPage = newPage;\n    }\n\n    // Page is still returning the old page. This allows us to\n    // close Issue 1401 without introducing a breaking change.\n    this.previousClick.emit({ event, page, newPage });\n  }\n\n  /**\n   * @ignore\n   */\n  goForward(event, page): void {\n    event.preventDefault();\n    let newPage = page;\n\n    if (this.currentPage < this.totalPages()) {\n      newPage = this.currentPage + 1;\n      this.currentPage = newPage;\n    }\n\n    // Page is still returning the old page. This allows us to\n    // close Issue 1401 without introducing a breaking change.\n    this.nextClick.emit({ event, page, newPage });\n  }\n\n  /**\n   * @ignore\n   * @returns total number of pages based on total\n   * number of items and the desired number of\n   * items to show per page.\n   */\n  totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  /**\n   * @ignore\n   * @returns true if currently on the last page.\n   */\n  isLastPage(): boolean {\n    return this.currentPage === this.totalPages();\n  }\n\n  /**\n   * @ignore\n   * @returns true if the component is in\n   * either the default or long variant.\n   */\n  showNumbers(): boolean {\n    return this.paginationType !== 'pager';\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [''];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport {\n  SprkUnorderedListModule\n} from '../sprk-unordered-list/sprk-unordered-list.module';\nimport { SprkListItemModule } from '../sprk-list-item/sprk-list-item.module';\nimport { SprkPaginationComponent } from './sprk-pagination.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkUnorderedListModule,\n    SprkIconModule,\n    SprkLinkDirectiveModule,\n    SprkListItemModule\n  ],\n  declarations: [SprkPaginationComponent],\n  exports: [SprkPaginationComponent]\n})\nexport class SprkPaginationModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-promo',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"isFlag && !mediaRev\"\n        [ngClass]=\"getClassesFlag()\"\n        [attr.href]=\"imgHref\"\n        [analyticsString]=\"flagLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Promo__image--flag\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </a>\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"imgSrc && !mediaRev && !isFlag\"\n        [attr.href]=\"imgHref\"\n        [analyticsString]=\"imgLinkAnalytics\"\n        [ngClass]=\"getClassesImg()\"\n      >\n        <img\n          class=\"sprk-c-Promo__image\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </a>\n\n      <div [ngClass]=\"getClassesContent()\">\n        <h3\n          *ngIf=\"title\"\n          class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item sprk-c-Promo__title\"\n        >\n          {{ title }}\n        </h3>\n\n        <div *ngIf=\"subtitle\" class=\"sprk-c-Promo__subtitle sprk-o-Stack__item\">\n          {{ subtitle }}\n        </div>\n\n        <div class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">\n          <ng-content></ng-content>\n        </div>\n\n        <div *ngIf=\"cta === 'button'\" class=\"sprk-o-Stack__item\">\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            [attr.href]=\"buttonHref\"\n            class=\"sprk-c-Button\"\n            [analyticsString]=\"buttonLinkAnalytics\"\n          >\n            {{ ctaText }}\n          </a>\n        </div>\n\n        <a\n          sprkLink\n          variant=\"simple\"\n          *ngIf=\"cta === 'link'\"\n          [attr.href]=\"ctaLinkHref\"\n          class=\"sprk-o-Stack__item\"\n          [analyticsString]=\"ctaLinkAnalytics\"\n        >\n          {{ ctaText }}\n        </a>\n      </div>\n\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"isFlag && mediaRev\"\n        [attr.href]=\"imgHref\"\n        [ngClass]=\"getClassesFlag()\"\n        [analyticsString]=\"flagLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Promo__image--flag\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </a>\n\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"imgSrc && mediaRev && !isFlag\"\n        [attr.href]=\"imgHref\"\n        [analyticsString]=\"imgLinkAnalytics\"\n        [ngClass]=\"getClassesImg()\"\n      >\n        <img\n          class=\"sprk-c-Promo__image\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </a>\n    </div>\n  `\n})\nexport class SprkPromoComponent {\n  /**\n   * The main heading on the Promo.\n   */\n  @Input()\n  title: string;\n  /**\n   * If supplied, this will be used as the\n   * text for a subtitle.\n   */\n  @Input()\n  subtitle: string;\n  /**\n   * Can be `link` or `button`.\n   * This determines the type for the call to action in the Promo body.\n   */\n  @Input()\n  cta: string;\n  /**\n   * This determines the text for the call to action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * This will be the `href` for the button\n   * if `cta` is set to `button`.\n   */\n  @Input()\n  buttonHref: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the\n   * call-to-action button if `cta` is set to `button`.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  buttonLinkAnalytics: string;\n  /**\n   * This will be the href for the the link if `cta` is set to `link`.\n   */\n  @Input()\n  ctaLinkHref: string;\n  /**\n   * The value supplied will be assigned to\n   * the `data-analytics` attribute on the\n   * call-to-action link if `cta` is set to\n   * `link`. This is intended for an\n   * outside library to capture data.\n   */\n  @Input()\n  ctaLinkAnalytics: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * content container.\n   */\n  @Input()\n  additionalClassesContent: string;\n  /**\n   * If `true`, the Flag Promo variant will be rendered.\n   */\n  @Input()\n  isFlag: boolean;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * link surrounding the image in the Flag variant.\n   */\n  @Input()\n  additionalClassesFlagLink: string;\n  /**\n   * If `isFlag` is set to `true`,\n   * the Promo will render with\n   * an anchor element containing the\n   * image specified in `imgSrc`. The value\n   * supplied here will be assigned to the `data-analytics`\n   * attribute on that anchor element.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  flagLinkAnalytics: string;\n  /**\n   * The source value for the Promo image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * The `alt` text for the Promo image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * The `href` value for the Promo image.\n   */\n  @Input()\n  imgHref: string;\n  /**\n   * If `imgSrc` is true and `isFlag` is `false`,\n   * the value supplied will be assigned to\n   * the `data-analytics` attribute on the\n   * anchor containing the Promo image.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  imgLinkAnalytics: string;\n  /**\n   * If `imgSrc` is true and `isFlag` is false,\n   * this string of additional classes will\n   * be added to the anchor containing the Promo\n   * image. This is intended for overrides.\n   */\n  @Input()\n  additionalClassesImgLink: string;\n  /**\n   * If `true`, the media will render\n   * on the right side of the Promo content.\n   */\n  @Input()\n  mediaRev: boolean;\n  /**\n   * If `true`, the Promo will be rendered\n   * with a border.\n   */\n  @Input()\n  hasBorder: boolean;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Promo',\n      'sprk-o-Stack',\n      'sprk-o-Stack--split@s'\n    ];\n\n    if (this.isFlag) {\n      classArray.push('sprk-c-Promo--flag');\n    }\n\n    if (this.hasBorder) {\n      classArray.push('sprk-c-Promo--bordered');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesFlag(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item--fourth@s',\n      'sprk-o-Stack__item'\n    ];\n\n    if (this.additionalClassesFlagLink) {\n      this.additionalClassesFlagLink.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesImg(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item',\n      'sprk-o-Stack__item--half@s'\n    ];\n\n    if (this.additionalClassesImgLink) {\n      this.additionalClassesImgLink.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesContent(): string {\n    const classArray: string[] = [\n      'sprk-c-Promo__content',\n      'sprk-o-Stack__item',\n      'sprk-o-Stack',\n      'sprk-o-Stack--large'\n    ];\n\n    if (this.isFlag) {\n      classArray.push('sprk-o-Stack__item--three-fourths@s');\n    } else {\n      if (this.imgSrc) {\n        classArray.push('sprk-o-Stack__item--half@s');\n      }\n    }\n\n    if (this.additionalClassesContent) {\n      this.additionalClassesContent.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkPromoComponent } from './sprk-promo.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkIconModule,\n    SprkLinkDirectiveModule\n  ],\n  declarations: [SprkPromoComponent],\n  exports: [SprkPromoComponent]\n})\nexport class SprkPromoModule {}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  QueryList\n} from '@angular/core';\nimport * as _ from 'lodash';\nimport {\n  SprkTabbedNavigationPanelDirective\n} from '../../directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive';\nimport {\n  SprkTabbedNavigationTabDirective\n} from '../../directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive';\n\n@Component({\n  selector: 'sprk-tabbed-navigation',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <div class=\"sprk-c-Tabs__buttons\" role=\"tablist\">\n        <ng-content select=\"[sprkTabbedNavigationTab]\"></ng-content>\n      </div>\n      <ng-content select=\"[sprkTabbedNavigationPane]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkTabbedNavigationComponent implements AfterContentInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * This component expects children `<button>` elements\n   * with the `SprkTabbedNavigationTabDirective` on them.\n   * These serve as the Tabs.\n   */\n  @ContentChildren(SprkTabbedNavigationTabDirective)\n  tabs: QueryList<SprkTabbedNavigationTabDirective>;\n  /**\n   * This component expects children `<div>` elements\n   * with the `SprkTabbedNavigationPanelDirective` on them.\n   * These serve as the Panels.\n   */\n  @ContentChildren(SprkTabbedNavigationPanelDirective)\n  panels: QueryList<SprkTabbedNavigationPanelDirective>;\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  activeClass = 'sprk-c-Tabs__button--active';\n\n  /**\n   * @ignore\n   */\n  @HostListener('click', ['$event'])\n  onClick($event) {\n    if ($event.target.classList.contains('sprk-c-Tabs__button')) {\n      const activePanel = this.panels.find(panel => {\n        return (\n          panel.ref.nativeElement.id ===\n          $event.target.getAttribute('aria-controls')\n        );\n      });\n\n      this.resetTabs(\n        this.tabs.map(tab => tab.ref.nativeElement),\n        this.panels.map(panel => panel.ref.nativeElement),\n        this.activeClass\n      );\n\n      this.setActiveTab(\n        $event.target,\n        activePanel.ref.nativeElement,\n        this.activeClass\n      );\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.ariaOrientation(window.innerWidth, this.ref.nativeElement);\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('keydown', ['$event'])\n  onKeydown($event) {\n    const isTabsButton = $event.target.classList.contains('sprk-c-Tabs__button');\n    if (!isTabsButton) {\n      return;\n    }\n\n    const keys = {\n      end: 35,\n      home: 36,\n      left: 37,\n      up: 38,\n      right: 39,\n      down: 40,\n      tab: 9\n    };\n\n    const tabElements = this.tabs.map(tab => tab.ref.nativeElement);\n    const panelElements = this.panels.map(panel => panel.ref.nativeElement);\n\n    if ($event.keyCode === keys.left || $event.keyCode === keys.up) {\n      this.incrementTab(tabElements, panelElements, this.activeClass, -1);\n    } else if ($event.keyCode === keys.right || $event.keyCode === keys.down) {\n      this.incrementTab(tabElements, panelElements, this.activeClass, 1);\n    } else if ($event.keyCode === keys.tab) {\n      if ($event.target.getAttribute('role') === 'tab') {\n        $event.preventDefault();\n        panelElements[\n          this.getActiveTabIndex(tabElements, this.activeClass)\n        ].focus();\n      }\n    } else if ($event.keyCode === keys.home) {\n      this.goToEndTab(tabElements, panelElements, this.activeClass, -1);\n    } else if ($event.keyCode === keys.end) {\n      this.goToEndTab(tabElements, panelElements, this.activeClass, 1);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Tabs'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterContentInit(): void {\n    let tabIDs = [];\n    let panelIDs = [];\n\n    if (this.tabs && this.panels) {\n      this.tabs.forEach((tab, index) => {\n        const tabID = `tabbed-navigation-${this.componentID}-tab-${index}`;\n        const panelID = `tabbed-navigation-${this.componentID}-panel-${index}`;\n\n        tab.ref.nativeElement.setAttribute('id', tabID);\n        tab.ref.nativeElement.setAttribute('aria-controls', panelID);\n        tabIDs.push(tabID);\n        panelIDs.push(panelID);\n      });\n\n      tabIDs = tabIDs.reverse();\n      panelIDs = panelIDs.reverse();\n\n      this.panels.forEach(panel => {\n        panel.ref.nativeElement.setAttribute('id', panelIDs.pop());\n        panel.ref.nativeElement.setAttribute('aria-labelledby', tabIDs.pop());\n      });\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ariaOrientation(width, element) {\n    // switch aria-orientation on mobile (based on _tabs.scss breakpoint)\n    if (width <= 736) {\n      element.setAttribute('aria-orientation', 'vertical');\n    } else {\n      element.setAttribute('aria-orientation', 'horizontal');\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getActiveTabIndex(tabs, activeClass) {\n    let activeIndex = null;\n    tabs.forEach((tab, index) => {\n      if (\n        tab.classList.contains(activeClass || 'sprk-c-Tabs__button--active')\n      ) {\n        activeIndex = index;\n      }\n    });\n\n    return activeIndex;\n  }\n\n  /**\n   * @ignore\n   */\n  resetTabs(tabs, tabpanels, activeClass) {\n    tabs.forEach(tab => {\n      tab.classList.remove(activeClass || 'sprk-c-Tabs__button--active');\n      tab.removeAttribute('tabindex');\n      tab.setAttribute('aria-selected', 'false');\n      tabpanels.forEach(panel => {\n        panel.classList.add('sprk-u-HideWhenJs');\n      });\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  incrementTab(tabs, tabpanels, activeClass, direction) {\n    let activeIndex = this.getActiveTabIndex(tabs, activeClass);\n\n    let foundNewIndex = false;\n\n    // Start looking for the next available tab\n    while (foundNewIndex === false) {\n      // if the next tab would be off the left of the tabstrip\n      if (activeIndex + direction < 0) {\n        // loop to the end and keep looking\n        activeIndex = tabs.length;\n\n      // if the next tab would be off the right of the tabstrip\n      } else if (activeIndex + direction >= tabs.length) {\n        // loop back to the beginning and keep looking\n        activeIndex = -1;\n\n      // If the next tab is not disabled\n      } else if (!tabs[activeIndex + direction].hasAttribute('disabled')) {\n        // move to the next tab\n        activeIndex += direction;\n        // stop looking for the correct tab\n        foundNewIndex = true;\n\n      } else {\n        // move to the next tab and keep looking\n        activeIndex += direction;\n      }\n    }\n\n    // deselect all tabs\n    this.resetTabs(tabs, tabpanels, activeClass);\n    // select the correct tab\n    this.setActiveTab(tabs[activeIndex], tabpanels[activeIndex], activeClass);\n  }\n\n  goToEndTab(tabs, tabpanels, activeClass, direction) {\n    let newActiveIndex;\n\n    // if direction is positive, go to the right-most tab\n    if (direction > 0) {\n      newActiveIndex = tabs.length - 1;\n\n    // else go to the left-most tab\n    } else {\n      newActiveIndex = 0;\n    }\n\n    let foundNewIndex = false;\n\n    // step through the tabs until we find one that isn't disabled\n    while (foundNewIndex === false) {\n\n      // if this tab is not disabled\n      if (!tabs[newActiveIndex].hasAttribute('disabled')) {\n\n        // stop looking for the correct tab\n        foundNewIndex = true;\n\n      // else step one tab away from the end and keep looking\n      } else {\n        newActiveIndex -= direction;\n      }\n    }\n\n    this.resetTabs(tabs, tabpanels, activeClass);\n    this.setActiveTab(tabs[newActiveIndex], tabpanels[newActiveIndex], activeClass);\n  }\n\n  /**\n   * @ignore\n   */\n  setActiveTab(tab, tabpanel, activeClass) {\n    tab.classList.add(activeClass || 'sprk-c-Tabs__button--active');\n    tab.setAttribute('tabindex', '0');\n    tab.setAttribute('aria-selected', 'true');\n    if (tabpanel) {\n      tabpanel.classList.remove('sprk-u-HideWhenJs');\n    }\n    tab.focus();\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {\n    this.ariaOrientation(window.innerWidth, this.ref.nativeElement);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTabbedNavigationComponent } from './sprk-tabbed-navigation.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTabbedNavigationComponent],\n  exports: [SprkTabbedNavigationComponent]\n})\nexport class SprkTabbedNavigationModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-table',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <table [ngClass]=\"getTableClasses()\">\n        <ng-content></ng-content>\n      </table>\n    </div>\n  `\n})\nexport class SprkTableComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component container element.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * `table` element.\n   */\n  @Input()\n  additionalTableClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-TableContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTableClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-Table',\n      'sprk-b-Table--spacing-medium',\n    ];\n\n    if (this.additionalTableClasses) {\n      this.additionalTableClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkTableComponent } from './sprk-table.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkTableComponent],\n  exports: [SprkTableComponent]\n})\nexport class SprkTableModule {}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Input,\n  HostBinding,\n  OnChanges,\n  Renderer2,\n  AfterViewInit,\n  SimpleChanges,\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkButton]'\n})\nexport class SprkButtonDirective implements OnInit, OnChanges, AfterViewInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef, private renderer: Renderer2) {}\n\n  /**\n   * Will show a spinner inside the\n   * button if set to `true`.\n   */\n  @Input() isSpinning = false;\n\n  /**\n   * Optional string value that is\n   * set for the `aria-label`\n   * when `isSpinning` is `true`.\n   */\n  @Input() spinningAriaLabel = 'Loading';\n\n  /**\n   *  Determines the coresponding button style.\n   */\n  @Input() variant: 'primary'| 'secondary' | 'tertiary' = 'primary';\n\n  // Always set the button class on the element\n  @HostBinding('class.sprk-c-Button') true;\n\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @HostBinding('attr.data-id')\n  @Input() idString: string;\n\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the element.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @HostBinding('attr.data-analytics')\n  @Input() analyticsString: string;\n\n  ngOnInit(): void {\n    if (this.variant === 'secondary') {\n      this.renderer.addClass(\n        this.ref.nativeElement,\n        'sprk-c-Button--secondary'\n      );\n    }\n    if (this.variant === 'tertiary') {\n      this.renderer.addClass(\n        this.ref.nativeElement,\n        'sprk-c-Button--tertiary'\n      );\n    }\n  }\n\n  /**\n   * Add spinner only after view has loaded.\n   * This is to allow time for the text\n   * content of the button to load so that\n   * the width value accounts for that text.\n   */\n  ngAfterViewInit() {\n    if (this.isSpinning) {\n      this.setSpinning(this.ref.nativeElement);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.isSpinning && !changes['isSpinning'].isFirstChange()) {\n      this.setSpinning(this.ref.nativeElement);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  setSpinning = (element) => {\n    const el = element;\n    const width = element.offsetWidth;\n    const ariaLabel = this.spinningAriaLabel;\n    let spinnerClass = 'sprk-c-Spinner sprk-c-Spinner--circle';\n    if (\n        el.classList.contains('sprk-c-Button--secondary') ||\n        this.variant === 'secondary') {\n      spinnerClass += ' sprk-c-Spinner--dark';\n    }\n    this.renderer.setAttribute(\n      el,\n      'data-sprk-spinner-text',\n      el.textContent,\n    );\n    this.renderer.setAttribute(\n      el,\n      'aria-label',\n      ariaLabel,\n    );\n    el.innerHTML = `<div class=\"${spinnerClass}\"></div>`;\n    el.setAttribute('data-sprk-has-spinner', 'true');\n    this.renderer.setAttribute(\n      el,\n      'data-sprk-has-spinner',\n      'true',\n    );\n    this.renderer.setAttribute(\n      el,\n      'style',\n      `width: ${width}px`,\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SprkButtonDirective } from './sprk-button.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [SprkButtonDirective],\n  exports: [SprkButtonDirective]\n})\nexport class SprkButtonModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-award',\n  template: `\n    <sprk-stack\n      itemSpacing=\"medium\"\n      additionalClasses=\"{{ additionalClasses }}\"\n    >\n      <h2\n        sprkStackItem\n        [attr.data-id]=\"idString\"\n        class=\"\n          sprk-o-Stack__item\n          sprk-b-TypeDisplayFive\n          sprk-b-Measure sprk-b-Measure--narrow\n          sprk-u-TextAlign--center\n          sprk-o-Stack__item--center-column\n        \"\n      >\n        {{ title }}\n      </h2>\n\n      <div sprkStackItem [ngClass]=\"getClasses()\">\n        <div\n          [ngClass]=\"getImgContainerClasses()\"\n        >\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            class=\"sprk-o-Stack\"\n            [attr.href]=\"imgOneHref\"\n            [analyticsString]=\"analyticsStringImgOne\"\n          >\n            <img\n              [ngClass]=\"getClassesImgOne()\"\n              alt=\"{{ imgOneAlt }}\"\n              src=\"{{ imgOneSrc }}\"\n            />\n          </a>\n        </div>\n        <div\n          [ngClass]=\"getImgContainerClasses()\"\n        >\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            class=\"sprk-o-Stack\"\n            [attr.href]=\"imgTwoHref\"\n            [analyticsString]=\"analyticsStringImgTwo\"\n          >\n            <img\n              [ngClass]=\"getClassesImgTwo()\"\n              alt=\"{{ imgTwoAlt }}\"\n              src=\"{{ imgTwoSrc }}\"\n            />\n          </a>\n        </div>\n      </div>\n\n      <sprk-toggle\n        *ngIf=\"disclaimer !== 'false'\"\n        sprkStackItem\n        additionalClasses=\"sprk-o-Stack__item--start-column\"\n        toggleType=\"base\"\n        title=\"{{ disclaimerTitle }}\"\n        analyticsString=\"{{ analyticsStringDisclaimer }}\"\n      >\n        <p class=\"sprk-b-TypeBodyFour\">{{ disclaimerCopy }}</p>\n      </sprk-toggle>\n    </sprk-stack>\n  `\n})\nexport class SprkAwardComponent {\n  /**\n   * The relative size of the viewport that\n   * the Award component should switch\n   * from a stacked layout to a side by side\n   * layout. You will need to experiment\n   * with your content to see which value\n   * is the best fit. Can be `tiny`,\n   * `small`, `medium`, `large` or `huge`.\n   */\n  @Input()\n  splitAt: string;\n  /**\n   * The `alt` text that will be applied\n   * to the first image.\n   */\n  @Input()\n  imgOneAlt: string;\n  /**\n   * The image `href` value that will be\n   * applied to the first image.\n   */\n  @Input()\n  imgOneHref: string;\n  /**\n   * The image `href` value that will be\n   * applied to the second image.\n   */\n  @Input()\n  imgTwoHref: string;\n  /**\n   * The `alt` text that will be applied\n   * 'to the second image.\n   */\n  @Input()\n  imgTwoAlt: string;\n  /**\n   * The image source that will be\n   * applied to the first image.\n   */\n  @Input()\n  imgOneSrc: string;\n  /**\n   * The image source that will be\n   * applied to the second image.\n   */\n  @Input()\n  imgTwoSrc: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of the first image.\n   */\n  @Input()\n  analyticsStringImgOne: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of the second image.\n   */\n  @Input()\n  analyticsStringImgTwo: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of\n   * the clickable disclaimer.\n   */\n  @Input()\n  analyticsStringDisclaimer: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * first image.\n   */\n  @Input()\n  additionalClassesImgOne: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * second image.\n   */\n  @Input()\n  additionalClassesImgTwo: string;\n  /**\n   * The text that appears above the\n   * images and serves as the heading\n   * for the Award.\n   */\n  @Input()\n  title: string;\n  /**\n   * The text that will be the clickable\n   * title of the disclaimer toggle.\n   */\n  @Input()\n  disclaimerTitle: string;\n  /**\n   * The text that will be inside the\n   * disclaimer toggle.\n   */\n  @Input()\n  disclaimerCopy: string;\n  /**\n   * If `false`, the disclaimer\n   * toggle will not be rendered.\n   */\n  @Input()\n  disclaimer: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    // Handle the choice of item split\n    // breakpoint by adding CSS class\n    switch (this.splitAt) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--split@xs');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--split@s');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--split@m');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--split@l');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--split@xl');\n        break;\n      default:\n        break;\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getImgContainerClasses(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item'\n    ];\n\n    // Handle the choice of item split\n    // breakpoint by adding CSS class\n    switch (this.splitAt) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack__item--flex@xs');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack__item--flex@s');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack__item--flex@m');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack__item--flex@l');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack__item--flex@xl');\n        break;\n      default:\n        break;\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getClassesImgOne(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    if (this.additionalClassesImgOne) {\n      this.additionalClassesImgOne.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesImgTwo(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    if (this.additionalClassesImgTwo) {\n      this.additionalClassesImgTwo.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkStackModule } from '../sprk-stack/sprk-stack.module';\nimport { SprkStackItemModule } from '../../directives/sprk-stack-item/sprk-stack-item.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkToggleModule } from '../sprk-toggle/sprk-toggle.module';\nimport { SprkAwardComponent } from './sprk-award.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    SprkLinkDirectiveModule,\n    SprkToggleModule\n  ],\n  declarations: [SprkAwardComponent],\n  exports: [SprkAwardComponent]\n})\nexport class SprkAwardModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-card',\n  template: `\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'teaser'\"\n      [attr.data-id]=\"idString\"\n    >\n      <a\n        sprkLink\n        variant=\"unstyled\"\n        *ngIf=\"media === 'img'\"\n        [href]=\"imgHref\"\n        class=\"sprk-o-Stack__item\"\n        [analyticsString]=\"imgLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Card__media\"\n          [attr.alt]=\"imgAlt\"\n          [attr.src]=\"imgSrc\"\n        />\n      </a>\n\n      <div\n        [ngClass]=\"{\n          'sprk-o-Stack__item': true,\n          'sprk-c-Card__content': true,\n          'sprk-o-Stack': true,\n          'sprk-o-Stack--medium': true,\n          'sprk-u-TextAlign--center': media === 'icon'\n        }\"\n      >\n        <a\n          sprkLink\n          variant=\"unstyled\"\n          *ngIf=\"media === 'icon'\"\n          [attr.href]=\"iconHref\"\n          class=\"sprk-o-Stack__item sprk-u-AbsoluteCenter\"\n          [analyticsString]=\"iconLinkAnalytics\"\n        >\n          <sprk-icon\n            [iconType]=\"iconType\"\n            [additionalClasses]=\"additionalClassesIcon\"\n          ></sprk-icon>\n        </a>\n\n        <h3 class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item\">{{ title }}</h3>\n\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n        <div class=\"sprk-o-Stack__item\">\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            [attr.href]=\"ctaHref\"\n            [ngClass]=\"getClassesCta()\"\n            [analyticsString]=\"ctaAnalytics\"\n          >\n            {{ ctaText }}\n            <sprk-icon\n              *ngIf=\"ctaIcon && (ctaType === 'link')\"\n              [iconType]=\"ctaIcon\"\n            ></sprk-icon>\n          </a>\n        </div>\n      </div>\n    </div>\n\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'base'\"\n      [attr.data-id]=\"idString\"\n    >\n      <ng-content></ng-content>\n    </div>\n\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'teaserHeading'\"\n      [attr.data-id]=\"idString\"\n    >\n      <h3\n        class=\"sprk-o-Stack__item sprk-c-Card__content sprk-b-TypeDisplayFive\"\n      >\n        {{ title }}\n      </h3>\n\n      <div\n        class=\"sprk-o-Stack__item sprk-c-Card__content sprk-o-Stack sprk-o-Stack--medium\"\n      >\n        <a\n          sprkLink\n          variant=\"unstyled\"\n          *ngIf=\"media === 'img'\"\n          [attr.href]=\"imgHref\"\n          class=\"sprk-o-Stack__item\"\n          [analyticsString]=\"imgLinkAnalytics\"\n        >\n          <img [attr.alt]=\"imgAlt\" [attr.src]=\"imgSrc\" />\n        </a>\n\n        <a\n          sprkLink\n          *ngIf=\"media === 'icon'\"\n          [attr.href]=\"iconHref\"\n          variant=\"unstyled\"\n          class=\"sprk-o-Stack__item sprk-o-Stack__item--center\"\n          [analyticsString]=\"iconLinkAnalytics\"\n        >\n          <sprk-icon\n            [iconType]=\"iconType\"\n            [additionalClasses]=\"additionalClassesIcon\"\n          ></sprk-icon>\n        </a>\n\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n        <div class=\"sprk-o-Stack__item\">\n          <a\n            sprkLink\n            variant=\"unstyled\"\n            [attr.href]=\"ctaHref\"\n            [ngClass]=\"getClassesCta()\"\n            [analyticsString]=\"ctaAnalytics\"\n          >\n            {{ ctaText }}\n            <sprk-icon\n              *ngIf=\"ctaIcon && (ctaType === 'link')\"\n              [iconType]=\"ctaIcon\"\n            ></sprk-icon>\n          </a>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class SprkCardComponent {\n  /**\n   * The type of Card variant to render.\n   * The available values are `base`, `teaser`, and `teaserHeading`.\n   */\n  @Input()\n  cardType: 'base' | 'teaser' | 'teaserHeading' = 'base' ;\n  /**\n   * The main content\n   * of the Card. Placed between\n   * the title and call to action.\n   */\n  @Input()\n  body: string;\n  /**\n   * Determines which type of media will be rendered.\n   * The available values are `image` and `icon`.\n   */\n  @Input()\n  media: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon if the media type is icon.\n   */\n  @Input()\n  additionalClassesIcon: string;\n  /**\n   * The title of the Card.\n   */\n  @Input()\n  title: string;\n  /**\n   * If the `media` input is set to `image`,\n   * this is the text that will be applied to the\n   * `src` attribute of the image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * If the `media` input is set to `image`,\n   * this is the text that is applied to\n   * the `alt` attribute of the image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * If the `media` input is set to `icon`, this\n   * is used to supply the name of the icon to use.\n   */\n  @Input()\n  iconType: string;\n  /**\n   * If the `media` input is set to `icon`, this\n   * is used to supply the `href` for the icon.\n   */\n  @Input()\n  iconHref: string;\n  /**\n   * If the `media` input is set to `img`, this\n   * is used to supply the `href` of the image.\n   */\n  @Input()\n  imgHref: string;\n  /**\n   * Determines what icon `sprk-icon` renders\n   * next to the call-to-action link.\n   */\n  @Input()\n  ctaIcon: string;\n  /**\n   * Determines which type of call to action is rendered.\n   * The available values are `link` and `button`.\n   */\n  @Input()\n  ctaType: 'link' | 'button' = 'link';\n  /**\n   * The text content of the call to action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the call to action.\n   */\n  @Input()\n  ctaAnalytics: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the link surrounding the image.\n   */\n  @Input()\n  imgLinkAnalytics: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the link surrounding the icon.\n   */\n  @Input()\n  iconLinkAnalytics: string;\n  /**\n   * The `href` value for the call to action.\n   */\n  @Input()\n  ctaHref: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * call to action.\n   */\n  @Input()\n  additionalCtaClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClassesCta(): string {\n    const ctaClassArray: string[] = [];\n\n    if (this.ctaType === 'button') {\n      ctaClassArray.push('sprk-c-Button');\n    } else {\n      ctaClassArray.push('sprk-b-Link');\n      if (this.ctaIcon) {\n        ctaClassArray.push('sprk-b-Link--simple');\n        ctaClassArray.push('sprk-b-Link--has-icon');\n      }\n    }\n\n    if (this.additionalCtaClasses) {\n      this.additionalCtaClasses.split(' ').forEach(className => {\n        ctaClassArray.push(className);\n      });\n    }\n\n    return ctaClassArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesCard(): string {\n    const classArray: string[] = ['sprk-c-Card', 'sprk-o-Stack'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkIconModule } from '../sprk-icon/sprk-icon.module';\nimport { SprkCardComponent } from './sprk-card.component';\n\n@NgModule({\n  imports: [CommonModule, SprkIconModule, SprkLinkDirectiveModule],\n  declarations: [SprkCardComponent],\n  exports: [SprkCardComponent]\n})\nexport class SprkCardModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-dictionary',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <dl class=\"sprk-c-Dictionary__keyvaluepairs\">\n        <div\n          *ngFor=\"let key of objectKeys(data)\"\n          class=\"sprk-c-Dictionary__keyvaluepair\"\n        >\n          <dt\n            class=\"sprk-c-Dictionary__key sprk-b-Label sprk-b-Label--no-input\"\n          >\n            {{ key }}\n          </dt>\n          <dd class=\"sprk-c-Dictionary__value\">{{ data[key] }}</dd>\n        </div>\n      </dl>\n    </div>\n  `\n})\nexport class SprkDictionaryComponent {\n  /**\n   * The collection of key-value pairs to be rendered\n   * into the component.\n   */\n  @Input()\n  data: object = {};\n  /**\n   * Determines the variant of the dictionary component to render.\n   * The only available option is `striped`.\n   * Supplying no value will cause the base variant to be used.\n   */\n  @Input()\n  dictionaryType = 'base';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * @ignore\n   * Used to grab all the keys from\n   * objects.\n   */\n  objectKeys = Object.keys;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Dictionary'];\n\n    if (this.dictionaryType === 'striped') {\n      classArray.push('sprk-c-Dictionary--striped');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkDictionaryComponent } from './sprk-dictionary.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkDictionaryComponent],\n  exports: [SprkDictionaryComponent]\n})\nexport class SprkDictionaryModule {}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sprk-highlight-board',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <img\n        *ngIf=\"type !== 'noImage'\"\n        class=\"sprk-c-HighlightBoard__image\"\n        src=\"{{ imgSrc }}\"\n        alt=\"{{ imgAlt }}\"\n      />\n\n      <sprk-stack\n        sprkStackItem\n        itemSpacing=\"large\"\n        additionalClasses=\"sprk-c-HighlightBoard__content\"\n      >\n        <h1\n          sprkStackItem\n          [ngClass]=\"{\n            'sprk-b-TypeDisplayTwo': type === 'noImage',\n            'sprk-b-TypeDisplayOne': type !== 'noImage',\n            'sprk-c-HighlightBoard__heading': true\n          }\"\n        >\n          {{ heading }}\n        </h1>\n\n        <sprk-stack\n          sprkStackItem\n          *ngIf=\"ctaText\"\n          itemSpacing=\"medium\"\n          splitAt=\"tiny\"\n          additionalClasses=\"sprk-o-Stack--center-column {{ centerBtns }}\"\n        >\n          <div sprkStackItem class=\"sprk-c-HighlightBoard__cta\">\n            <a\n              sprkLink\n              variant=\"unstyled\"\n              [attr.href]=\"ctaHref\"\n              class=\"sprk-c-Button sprk-c-Button--primary sprk-c-Button--full@sm\"\n              [analyticsString]=\"analyticsStringCta\"\n            >\n              {{ ctaText }}\n            </a>\n          </div>\n\n          <div\n            sprkStackItem\n            *ngIf=\"ctaText2\"\n            class=\"sprk-c-HighlightBoard__cta\"\n          >\n            <a\n              sprkLink\n              variant=\"unstyled\"\n              [attr.href]=\"ctaHref2\"\n              class=\"sprk-c-Button sprk-c-Button--secondary sprk-c-Button--full@sm\"\n              [analyticsString]=\"analyticsStringCta2\"\n            >\n              {{ ctaText2 }}\n            </a>\n          </div>\n        </sprk-stack>\n      </sprk-stack>\n    </div>\n  `\n})\nexport class SprkHighlightBoardComponent implements OnInit {\n  /**\n   * The value supplied will be rendered as the heading.\n   */\n  @Input()\n  heading: string;\n  /**\n   * The Highlight Board will use this as the\n   * source for the main image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * The Highlight Board will use this as\n   * the `alt` text for the main image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * The Highlight Board will use this as\n   * the text for the main call to action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * The Highlight Board will use this as the\n   * `href` for the main call to action.\n   */\n  @Input()\n  ctaHref: string;\n  /**\n   * The Highlight Board will use this as\n   * the text for the secondary call to action.\n   */\n  @Input()\n  ctaText2: string;\n  /**\n   * The Highlight Board will use this\n   * as the `href` for the secondary\n   * call to action.\n   */\n  @Input()\n  ctaHref2: string;\n  /**\n   * The value supplied will be assigned to\n   * the `data-analytics` attribute on the call to action.\n   * Intended for an outside library to capture data.\n   */\n  @Input()\n  analyticsStringCta: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the second\n   * call to action. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringCta2: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The variation of the\n   * Highlight Board that is rendered.\n   * Can be `noImage`, `stacked` or not\n   * set at all. The default if not set\n   * is the default variation of the Highlight Board.\n   */\n  @Input()\n  type: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  ngOnInit() {\n    if (!this.ctaText && this.ctaText2) {\n      console.warn(`\n        Spark Design System Warning - <sprk-highlight-board> Component:\n        A secondary call-to-action (CTA)\n        should not exist without a primary CTA.\n        If there is only one CTA, it must be set on\n        ctaText and ctaHref.\n      `);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  public centerBtns = '';\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-HighlightBoard'];\n\n    switch (this.type) {\n      case 'noImage':\n        this.centerBtns = 'sprk-o-Stack--center-row';\n        break;\n      case 'stacked':\n        this.centerBtns = 'sprk-o-Stack--center-row';\n        classArray.push(\n          'sprk-c-HighlightBoard--has-image sprk-c-HighlightBoard--stacked'\n        );\n        break;\n      default:\n        classArray.push('sprk-c-HighlightBoard--has-image');\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkStackModule } from '../sprk-stack/sprk-stack.module';\nimport { SprkStackItemModule } from '../../directives/sprk-stack-item/sprk-stack-item.module';\nimport { SprkLinkDirectiveModule } from '../../directives/sprk-link/sprk-link.module';\nimport { SprkHighlightBoardComponent } from './sprk-highlight-board.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    SprkLinkDirectiveModule\n  ],\n  declarations: [SprkHighlightBoardComponent],\n  exports: [SprkHighlightBoardComponent]\n})\nexport class SprkHighlightBoardModule {}\n","import { Directive, ElementRef, Input, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[sprkBox]'\n})\nexport class SprkBoxDirective {\n  /**\n   * Padding inside of the box component.\n   * Defaults to medium sizing when not provided.\n   * Refer to Class Modifiers section for default pixel values.\n   */\n  @Input() spacing:\n    | 'flush'\n    | 'tiny'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'huge'\n    | 'insetShortTiny'\n    | 'insetShortSmall'\n    | 'insetShortMedium'\n    | 'insetShortLarge'\n    | 'insetShortHuge'\n    | 'insetTallTiny'\n    | 'insetTallSmall'\n    | 'insetTallMedium'\n    | 'insetTallLarge'\n    | 'insetTallHuge'\n    | 'miscA'\n    | 'miscB'\n    | 'miscC'\n    | 'miscD';\n\n  @HostBinding('class.sprk-o-Box') true;\n\n  @HostBinding('class.sprk-o-Box--flush')\n  get flush() {\n    return this.spacing === 'flush';\n  }\n\n  @HostBinding('class.sprk-o-Box--tiny')\n  get tiny() {\n    return this.spacing === 'tiny';\n  }\n\n  @HostBinding('class.sprk-o-Box--small')\n  get small() {\n    return this.spacing === 'small';\n  }\n\n  @HostBinding('class.sprk-o-Box--medium')\n  get medium() {\n    return this.spacing === 'medium';\n  }\n\n  @HostBinding('class.sprk-o-Box--large')\n  get large() {\n    return this.spacing === 'large';\n  }\n\n  @HostBinding('class.sprk-o-Box--huge')\n  get huge() {\n    return this.spacing === 'huge';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-tiny')\n  get insetShortTiny() {\n    return this.spacing === 'insetShortTiny';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-small')\n  get insetShortSmall() {\n    return this.spacing === 'insetShortSmall';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-medium')\n  get insetShortMedium() {\n    return this.spacing === 'insetShortMedium';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-large')\n  get insetShortLarge() {\n    return this.spacing === 'insetShortLarge';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-short-huge')\n  get insetShortHuge() {\n    return this.spacing === 'insetShortHuge';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-tiny')\n  get insetTallTiny() {\n    return this.spacing === 'insetTallTiny';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-small')\n  get insetTallSmall() {\n    return this.spacing === 'insetTallSmall';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-medium')\n  get insetTallMedium() {\n    return this.spacing === 'insetTallMedium';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-large')\n  get insetTallLarge() {\n    return this.spacing === 'insetTallLarge';\n  }\n\n  @HostBinding('class.sprk-o-Box--inset-tall-huge')\n  get insetTallHuge() {\n    return this.spacing === 'insetTallHuge';\n  }\n\n  @HostBinding('class.sprk-o-Box--misc-a')\n  get miscA() {\n    return this.spacing === 'miscA';\n  }\n\n  @HostBinding('class.sprk-o-Box--misc-b')\n  get miscB() {\n    return this.spacing === 'miscB';\n  }\n\n  @HostBinding('class.sprk-o-Box--misc-c')\n  get miscC() {\n    return this.spacing === 'miscC';\n  }\n\n  @HostBinding('class.sprk-o-Box--misc-d')\n  get miscD() {\n    return this.spacing === 'miscD';\n  }\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkBoxDirective } from './sprk-box.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkBoxDirective],\n  exports: [SprkBoxDirective]\n})\nexport class SprkBoxModule {}\n","import {\n  Directive,\n  Input,\n  HostBinding\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkText]'\n})\n\nexport class SprkTextDirective {\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  @Input()\n  variant: 'bodyOne' |\n    'bodyTwo' | 'bodyThree' |\n    'bodyFour';\n\n  @HostBinding('class.sprk-b-TypeBodyOne')\n  get textOne() {\n    return this.variant === 'bodyOne';\n  }\n  @HostBinding('class.sprk-b-TypeBodyTwo')\n  get textTwo() {\n    return this.variant === 'bodyTwo';\n  }\n  @HostBinding('class.sprk-b-TypeBodyThree')\n  get textThree() {\n    return this.variant === 'bodyThree';\n  }\n  @HostBinding('class.sprk-b-TypeBodyFour')\n  get textFour() {\n    return this.variant === 'bodyFour';\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { SprkTextDirective } from './sprk-text.directive';\n\n@NgModule({\n  declarations: [SprkTextDirective],\n  exports: [SprkTextDirective]\n})\nexport class SprkTextModule { }\n","import {\n  Directive,\n  Input,\n  HostBinding\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkHeading]'\n})\n\nexport class SprkHeadingDirective {\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  @Input()\n  variant: 'displayOne' |\n    'displayTwo' | 'displayThree' |\n    'displayFour' | 'displayFive' |\n    'displaySix' | 'displaySeven';\n\n  @HostBinding('class.sprk-b-TypeDisplayOne')\n  get headingOne() {\n    return this.variant === 'displayOne';\n  }\n  @HostBinding('class.sprk-b-TypeDisplayTwo')\n  get headingTwo() {\n    return this.variant === 'displayTwo';\n  }\n  @HostBinding('class.sprk-b-TypeDisplayThree')\n  get headingThree() {\n    return this.variant === 'displayThree';\n  }\n  @HostBinding('class.sprk-b-TypeDisplayFour')\n  get headingFour() {\n    return this.variant === 'displayFour';\n  }\n  @HostBinding('class.sprk-b-TypeDisplayFive')\n  get headingFive() {\n    return this.variant === 'displayFive';\n  }\n  @HostBinding('class.sprk-b-TypeDisplaySix')\n  get headingSix() {\n    return this.variant === 'displaySix';\n  }\n  @HostBinding('class.sprk-b-TypeDisplaySeven')\n  get headingSeven() {\n    return this.variant === 'displaySeven';\n  }\n\n  @HostBinding('class.sprk-b-PageTitle')\n  /**\n   * Value will be used to select\n   * the heading style.\n   */\n  @Input() isPageTitle = false;\n}\n","import { NgModule } from '@angular/core';\nimport { SprkHeadingDirective } from './sprk-heading.directive';\n\n@NgModule({\n  declarations: [SprkHeadingDirective],\n  exports: [SprkHeadingDirective]\n})\nexport class SprkHeadingModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-flag',\n  template: `\n    <div\n      [ngClass]=\"getClasses()\"\n      [attr.data-id]=\"idString\"\n    >\n      <div [ngClass]=\"getMediaClasses()\">\n        <ng-content select=\"[media-slot]\"></ng-content>\n      </div>\n      <div [ngClass]=\"getBodyClasses()\">\n        <ng-content select=\"[body-slot]\"></ng-content>\n      </div>\n    </div>\n  `\n})\n\nexport class SprkFlagComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component container.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * container of the media-slot.\n   */\n  @Input()\n  additionalMediaClasses: string;\n\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * container of the body-slot.\n   */\n  @Input()\n  additionalBodyClasses: string;\n\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * The Flag component will use this to decide where\n   * the media-slot is rendered in relation to the\n   * body-slot. The default is the media-slot is on\n   * the left of the body-slot. isReversed=\"true\" places the\n   * media-slot on the right of the body-slot.\n   */\n  @Input()\n  isReversed = false;\n\n  /**\n   * The Flag component will use this to stack\n   * the element at the `$sprk-flag-stacked-breakpoint`\n   */\n  @Input()\n  isStacked = false;\n\n  /**\n   * Determines how much space between the\n   * media and the body.\n   */\n  @Input()\n  spacing: 'flush' | 'tiny' | 'small' | 'medium' | 'large' | 'huge' = 'medium';\n\n  /**\n   * Determines the vertical alignment of content.\n   */\n  @Input()\n  verticalAlignment: 'top' | 'middle' | 'bottom' = 'top';\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-o-Flag'];\n\n    if (this.spacing !== 'medium') {\n      const spacingClasses = {\n        flush: 'sprk-o-Flag--flush',\n        tiny: 'sprk-o-Flag--tiny',\n        small: 'sprk-o-Flag--small',\n        large: 'sprk-o-Flag--large',\n        huge: 'sprk-o-Flag--huge',\n      };\n\n      classArray.push(spacingClasses[this.spacing]);\n    }\n\n    if (this.verticalAlignment !== 'top') {\n      const verticalAlignmentClasses = {\n        middle: 'sprk-o-Flag--middle',\n        bottom: 'sprk-o-Flag--bottom',\n      };\n\n      classArray.push(verticalAlignmentClasses[this.verticalAlignment]);\n    }\n\n    if (this.isReversed) {\n      classArray.push('sprk-o-Flag--rev');\n    }\n\n    if (this.isStacked) {\n      classArray.push('sprk-o-Flag--stacked');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getMediaClasses(): string {\n    const mediaClassArray: string[] = ['sprk-o-Flag__figure'];\n\n    if (this.additionalMediaClasses) {\n      this.additionalMediaClasses.split(' ').forEach(className => {\n        mediaClassArray.push(className);\n      });\n    }\n\n    return mediaClassArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getBodyClasses(): string {\n    const bodyClassArray: string[] = ['sprk-o-Flag__body'];\n\n    if (this.additionalBodyClasses) {\n      this.additionalBodyClasses.split(' ').forEach(className => {\n        bodyClassArray.push(className);\n      });\n    }\n\n    return bodyClassArray.join(' ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkFlagComponent } from './sprk-flag.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkFlagComponent],\n  exports: [SprkFlagComponent]\n})\n\nexport class SprkFlagModule {}\n","import { Directive, Input, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[sprkCenteredColumn]'\n})\nexport class SprkCenteredColumnDirective {\n\n  @HostBinding('class.sprk-o-CenteredColumn') true;\n\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @HostBinding('attr.data-id')\n  @Input() idString: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SprkCenteredColumnDirective } from './sprk-centered-column.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SprkCenteredColumnDirective],\n  exports: [SprkCenteredColumnDirective]\n})\nexport class SprkCenteredColumnModule {}\n","import { environment } from '../environment/environment';\nif (typeof window !== 'undefined') {\n  window['sprk'] = { version: { angular: environment.version } } || {};\n}\n\nimport { NgModule } from '@angular/core';\nimport { SprkFormatterDateModule } from './directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.module';\nimport { SprkFormatterMonetaryModule } from './directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.module';\nimport {\n  SprkFormatterPhoneNumberModule\n} from './directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.module';\nimport { SprkFormatterSsnModule } from './directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.module';\nimport { SprkDatepickerModule } from './directives/inputs/sprk-datepicker/sprk-datepicker.module';\nimport { SprkFieldErrorModule } from './directives/inputs/sprk-field-error/sprk-field-error.module';\nimport { SprkHelperTextModule } from './directives/inputs/sprk-helper-text/sprk-helper-text.module';\nimport { SprkInputModule } from './directives/inputs/sprk-input/sprk-input.module';\nimport { SprkLabelModule } from './directives/inputs/sprk-label/sprk-label.module';\nimport { SprkSelectionInputModule } from './directives/inputs/sprk-selection-input/sprk-selection-input.module';\nimport { SprkSelectionLabelModule } from './directives/inputs/sprk-selection-label/sprk-selection-label.module';\nimport { SprkStackItemModule } from './directives/sprk-stack-item/sprk-stack-item.module';\nimport { SprkTableEmptyHeadingModule } from './directives/sprk-table-empty-heading/sprk-table-empty-heading.module';\nimport { SprkTableGroupedColumnModule } from './directives/sprk-table-grouped-column/sprk-table-grouped-column.module';\nimport { SprkTableHeadModule } from './directives/sprk-table-head/sprk-table-head.module';\nimport { SprkTableRowHeadingModule } from './directives/sprk-table-row-heading/sprk-table-row-heading.module';\nimport {\n  SprkTabbedNavigationPanelModule\n} from './directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.module';\nimport { SprkTabbedNavigationTabModule } from './directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.module';\nimport { SparkInputContainerModule } from './components/inputs/sprk-input-container/sprk-input-container.module';\nimport { SprkHugeInputContainerModule } from './components/inputs/sprk-huge-input-container/sprk-huge-input-container.module';\nimport { SprkTextareaContainerModule } from './components/inputs/sprk-textarea-container/sprk-textarea-container.module';\nimport { SprkIconInputContainerModule } from './components/inputs/sprk-icon-input-container/sprk-icon-input-container.module';\nimport { SprkSelectionContainerModule } from './components/inputs/sprk-selection-container/sprk-selection-container.module';\nimport { SprkSelectionItemContainerModule } from './components/inputs/sprk-selection-item-container/sprk-selection-item-container.module';\nimport { SprkAccordionItemModule } from './components/sprk-accordion-item/sprk-accordion-item.module';\nimport { SprkAccordionModule } from './components/sprk-accordion/sprk-accordion.module';\nimport { SprkAlertModule } from './components/sprk-alert/sprk-alert.module';\nimport { SprkDividerModule } from './components/sprk-divider/sprk-divider.module';\nimport { SprkDropdownModule } from './components/sprk-dropdown/sprk-dropdown.module';\nimport { SprkFooterModule } from './components/sprk-footer/sprk-footer.module';\nimport { SprkIconModule } from './components/sprk-icon/sprk-icon.module';\nimport { SprkLinkModule } from './components/sprk-link/sprk-link.module';\nimport { SprkListItemModule } from './components/sprk-list-item/sprk-list-item.module';\nimport { SprkMastheadModule } from './components/sprk-masthead/sprk-masthead.module';\nimport { SprkModalModule } from './components/sprk-modal/sprk-modal.module';\nimport { SprkOrderedListModule } from './components/sprk-ordered-list/sprk-ordered-list.module';\nimport { SprkPaginationModule } from './components/sprk-pagination/sprk-pagination.module';\nimport { SprkPromoModule } from './components/sprk-promo/sprk-promo.module';\nimport { SprkStackModule } from './components/sprk-stack/sprk-stack.module';\nimport { SprkTabbedNavigationModule } from './components/sprk-tabbed-navigation/sprk-tabbed-navigation.module';\nimport { SprkTableModule } from './components/sprk-table/sprk-table.module';\nimport { SprkToggleModule } from './components/sprk-toggle/sprk-toggle.module';\nimport { SprkUnorderedListModule } from './components/sprk-unordered-list/sprk-unordered-list.module';\nimport { SprkButtonModule } from './directives/inputs/sprk-button/sprk-button.module';\nimport { SprkAwardModule } from './components/sprk-award/sprk-award.module';\nimport { SprkCardModule } from './components/sprk-card/sprk-card.module';\nimport { SprkDictionaryModule } from './components/sprk-dictionary/sprk-dictionary.module';\nimport { SprkHighlightBoardModule } from './components/sprk-highlight-board/sprk-highlight-board.module';\nimport { SprkBoxModule } from './directives/sprk-box/sprk-box.module';\nimport { SprkTextModule } from './directives/sprk-text/sprk-text.module';\nimport { SprkHeadingModule } from './directives/sprk-heading/sprk-heading.module';\nimport { SprkLinkDirectiveModule } from './directives/sprk-link/sprk-link.module';\nimport { SprkFlagModule } from './components/sprk-flag/sprk-flag.module';\nimport { SprkCenteredColumnModule } from './directives/sprk-centered-column/sprk-centered-column.module';\n\n@NgModule({\n  exports: [\n    SprkAlertModule,\n    SprkAccordionModule,\n    SprkAccordionItemModule,\n    SprkAwardModule,\n    SprkButtonModule,\n    SprkCardModule,\n    SprkDictionaryModule,\n    SprkDividerModule,\n    SprkDropdownModule,\n    SprkLinkModule,\n    SprkHighlightBoardModule,\n    SprkModalModule,\n    SprkOrderedListModule,\n    SprkUnorderedListModule,\n    SprkListItemModule,\n    SparkInputContainerModule,\n    SprkHugeInputContainerModule,\n    SprkTextareaContainerModule,\n    SprkIconInputContainerModule,\n    SprkSelectionContainerModule,\n    SprkSelectionItemContainerModule,\n    SprkMastheadModule,\n    SprkInputModule,\n    SprkSelectionInputModule,\n    SprkHelperTextModule,\n    SprkLabelModule,\n    SprkSelectionLabelModule,\n    SprkFieldErrorModule,\n    SprkFormatterPhoneNumberModule,\n    SprkFormatterDateModule,\n    SprkFormatterMonetaryModule,\n    SprkFormatterSsnModule,\n    SprkDatepickerModule,\n    SprkPromoModule,\n    SprkTableModule,\n    SprkTableHeadModule,\n    SprkTableGroupedColumnModule,\n    SprkTableEmptyHeadingModule,\n    SprkTableRowHeadingModule,\n    SprkTabbedNavigationTabModule,\n    SprkTabbedNavigationPanelModule,\n    SprkPaginationModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    SprkToggleModule,\n    SprkIconModule,\n    SprkFooterModule,\n    SprkTabbedNavigationModule,\n    SprkBoxModule,\n    SprkTextModule,\n    SprkHeadingModule,\n    SprkLinkDirectiveModule,\n    SprkFlagModule,\n    SprkCenteredColumnModule,\n  ]\n})\nexport class SparkAngularModule {}\n"],"names":["ElementRef","HostListener","Directive","NgModule","CommonModule","RouterModule","Input","_.uniqueId","ContentChild","Component","FormsModule","ReactiveFormsModule","uniqueId","Renderer2","ContentChildren","QueryList","HostBinding","trigger","state","style","transition","animate","Router","EventEmitter","Output","ViewChild","TemplateRef","router","_.throttle","NavigationEnd"],"mappings":"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"}